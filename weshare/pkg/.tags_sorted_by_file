Ldec128	crypto\aes\asm_amd64.s	/^Ldec128:$/;"	l
Ldec196	crypto\aes\asm_amd64.s	/^Ldec196:$/;"	l
Ldec256	crypto\aes\asm_amd64.s	/^Ldec256:$/;"	l
Lenc128	crypto\aes\asm_amd64.s	/^Lenc128:$/;"	l
Lenc196	crypto\aes\asm_amd64.s	/^Lenc196:$/;"	l
Lenc256	crypto\aes\asm_amd64.s	/^Lenc256:$/;"	l
Lexp_dec	crypto\aes\asm_amd64.s	/^Lexp_dec:$/;"	l
Lexp_dec_loop	crypto\aes\asm_amd64.s	/^Lexp_dec_loop:$/;"	l
Lexp_enc128	crypto\aes\asm_amd64.s	/^Lexp_enc128:$/;"	l
Lexp_enc196	crypto\aes\asm_amd64.s	/^Lexp_enc196:$/;"	l
Lexp_enc256	crypto\aes\asm_amd64.s	/^Lexp_enc256:$/;"	l
PSHUFD_X0_X0_	crypto\aes\asm_amd64.s	/^#define PSHUFD_X0_X0_ BYTE $0x66; BYTE $0x0f; BYTE $0x70; BYTE $0xc0$/;"	d
PSHUFD_X0_X3_	crypto\aes\asm_amd64.s	/^#define PSHUFD_X0_X3_ BYTE $0x66; BYTE $0x0f; BYTE $0x70; BYTE $0xd8$/;"	d
PSHUFD_X1_X1_	crypto\aes\asm_amd64.s	/^#define PSHUFD_X1_X1_ BYTE $0x66; BYTE $0x0f; BYTE $0x70; BYTE $0xc9$/;"	d
PSLLDQ_X5_	crypto\aes\asm_amd64.s	/^#define PSLLDQ_X5_ BYTE $0x66; BYTE $0x0f; BYTE $0x73; BYTE $0xfd$/;"	d
TEXT	crypto\aes\asm_amd64.s	/^TEXT _expand_key_128<>(SB),NOSPLIT,$0$/;"	l
TEXT	crypto\aes\asm_amd64.s	/^TEXT _expand_key_192a<>(SB),NOSPLIT,$0$/;"	l
TEXT	crypto\aes\asm_amd64.s	/^TEXT _expand_key_192b<>(SB),NOSPLIT,$0$/;"	l
TEXT	crypto\aes\asm_amd64.s	/^TEXT _expand_key_256a<>(SB),NOSPLIT,$0$/;"	l
TEXT	crypto\aes\asm_amd64.s	/^TEXT _expand_key_256b<>(SB),NOSPLIT,$0$/;"	l
TEXT	crypto\aes\asm_amd64.s	/^TEXT ·decryptBlockAsm(SB),NOSPLIT,$0$/;"	l
TEXT	crypto\aes\asm_amd64.s	/^TEXT ·encryptBlockAsm(SB),NOSPLIT,$0$/;"	l
TEXT	crypto\aes\asm_amd64.s	/^TEXT ·expandKeyAsm(SB),NOSPLIT,$0$/;"	l
TEXT	crypto\aes\asm_amd64.s	/^TEXT ·hasAsm(SB),NOSPLIT,$0$/;"	l
MOVL	crypto\md5\md5block_386.s	/^	MOVL	d,		BP; \\$/;"	d
MOVL	crypto\md5\md5block_386.s	/^	MOVL	d,		DI; \\$/;"	d
ROUND1	crypto\md5\md5block_386.s	/^#define ROUND1(a, b, c, d, index, const, shift) \\$/;"	d
ROUND2	crypto\md5\md5block_386.s	/^#define ROUND2(a, b, c, d, index, const, shift) \\$/;"	d
ROUND3	crypto\md5\md5block_386.s	/^#define ROUND3(a, b, c, d, index, const, shift) \\$/;"	d
ROUND4	crypto\md5\md5block_386.s	/^#define ROUND4(a, b, c, d, index, const, shift) \\$/;"	d
TEXT	crypto\md5\md5block_386.s	/^TEXT	·block(SB),NOSPLIT,$24-16$/;"	l
XORL	crypto\md5\md5block_386.s	/^	XORL	d,		BP; \\$/;"	d
XORL	crypto\md5\md5block_386.s	/^	XORL d, BP; \\$/;"	d
loop	crypto\md5\md5block_386.s	/^loop:$/;"	l
ROUND1	crypto\md5\md5block_amd64.s	/^#define ROUND1(a, b, c, d, index, const, shift) \\$/;"	d
ROUND2	crypto\md5\md5block_amd64.s	/^#define ROUND2(a, b, c, d, index, const, shift) \\$/;"	d
ROUND3	crypto\md5\md5block_amd64.s	/^#define ROUND3(a, b, c, d, index, const, shift) \\$/;"	d
ROUND4	crypto\md5\md5block_amd64.s	/^#define ROUND4(a, b, c, d, index, const, shift) \\$/;"	d
TEXT	crypto\md5\md5block_amd64.s	/^TEXT	·block(SB),NOSPLIT,$0-32$/;"	l
XORL	crypto\md5\md5block_amd64.s	/^	XORL	d,		R9; \\$/;"	d
XORL	crypto\md5\md5block_amd64.s	/^	XORL d, R9; \\$/;"	d
loop	crypto\md5\md5block_amd64.s	/^loop:$/;"	l
ROUND1	crypto\md5\md5block_arm.s	/^#define ROUND1(a, b, c, d, index, shift, const) \\$/;"	d
ROUND2	crypto\md5\md5block_arm.s	/^#define ROUND2(a, b, c, d, index, shift, const) \\$/;"	d
ROUND3	crypto\md5\md5block_arm.s	/^#define ROUND3(a, b, c, d, index, shift, const) \\$/;"	d
ROUND4	crypto\md5\md5block_arm.s	/^#define ROUND4(a, b, c, d, index, shift, const) \\$/;"	d
TEXT	crypto\md5\md5block_arm.s	/^TEXT	·block(SB), NOSPLIT, $84-16$/;"	l
a	crypto\md5\md5block_arm.s	/^a = 2		\/\/ MD5 accumulator$/;"	d
aligned	crypto\md5\md5block_arm.s	/^aligned:$/;"	l
b	crypto\md5\md5block_arm.s	/^b = 3		\/\/ MD5 accumulator$/;"	d
buf	crypto\md5\md5block_arm.s	/^buf = -8-4*16	\/\/-72(SP) 16 words temporary buffer$/;"	d
c	crypto\md5\md5block_arm.s	/^c = 4		\/\/ MD5 accumulator$/;"	d
c0	crypto\md5\md5block_arm.s	/^c0 = 6		\/\/ MD5 constant$/;"	d
c1	crypto\md5\md5block_arm.s	/^c1 = 7		\/\/ MD5 constant$/;"	d
c2	crypto\md5\md5block_arm.s	/^c2 = 8		\/\/ MD5 constant$/;"	d
c3	crypto\md5\md5block_arm.s	/^c3 = 11		\/\/ MD5 constant$/;"	d
d	crypto\md5\md5block_arm.s	/^d = 5		\/\/ MD5 accumulator$/;"	d
data	crypto\md5\md5block_arm.s	/^data = 1	\/\/ Pointer to data to hash$/;"	d
loop	crypto\md5\md5block_arm.s	/^loop:$/;"	l
p_data	crypto\md5\md5block_arm.s	/^p_data = -8	\/\/ -8(SP) current data pointer$/;"	d
p_end	crypto\md5\md5block_arm.s	/^p_end = -4	\/\/ -4(SP) pointer to the end of data$/;"	d
t0	crypto\md5\md5block_arm.s	/^t0 = 12		\/\/ temporary$/;"	d
t1	crypto\md5\md5block_arm.s	/^t1 = 14		\/\/ temporary$/;"	d
table	crypto\md5\md5block_arm.s	/^table = 0	\/\/ Pointer to MD5 constants table$/;"	d
INCL	crypto\rc4\rc4_386.s	/^	INCL DI$/;"	d
TEXT	crypto\rc4\rc4_386.s	/^TEXT ·xorKeyStream(SB),NOSPLIT,$0$/;"	l
done	crypto\rc4\rc4_386.s	/^done:$/;"	l
loop	crypto\rc4\rc4_386.s	/^loop:$/;"	l
EXTEND	crypto\rc4\rc4_amd64.s	/^#define EXTEND(r) MOVBLZX r, r$/;"	d
INCQ	crypto\rc4\rc4_amd64.s	/^	INCQ	DI				\/\/ out++$/;"	d
KEYROUND	crypto\rc4\rc4_amd64.s	/^#define KEYROUND(xmm, load, off, r1, r2, index) \\$/;"	d
LOAD	crypto\rc4\rc4_amd64.s	/^#define LOAD(off, reg) \\$/;"	d
SKIP	crypto\rc4\rc4_amd64.s	/^#define SKIP(off, reg)$/;"	d
TEXT	crypto\rc4\rc4_amd64.s	/^TEXT ·xorKeyStream(SB),NOSPLIT,$0$/;"	l
finished	crypto\rc4\rc4_amd64.s	/^finished:$/;"	l
l1	crypto\rc4\rc4_amd64.s	/^l1:	CMPQ	SI,		R9		\/\/ cmp in with in+len$/;"	l
l2	crypto\rc4\rc4_amd64.s	/^l2:	CMPQ	SI,		R9		\/\/ cmp in with in+len$/;"	l
start	crypto\rc4\rc4_amd64.s	/^start:$/;"	l
wordloop	crypto\rc4\rc4_amd64.s	/^wordloop:$/;"	l
TEXT	crypto\rc4\rc4_arm.s	/^TEXT ·xorKeyStream(SB),NOSPLIT,$0$/;"	l
done	crypto\rc4\rc4_arm.s	/^done:$/;"	l
dst	crypto\rc4\rc4_arm.s	/^dst = 0$/;"	d
i	crypto\rc4\rc4_arm.s	/^i = 6$/;"	d
j	crypto\rc4\rc4_arm.s	/^j = 7$/;"	d
k	crypto\rc4\rc4_arm.s	/^k = 8$/;"	d
loop	crypto\rc4\rc4_arm.s	/^loop:$/;"	l
n	crypto\rc4\rc4_arm.s	/^n = 2$/;"	d
pi	crypto\rc4\rc4_arm.s	/^pi = 4$/;"	d
pj	crypto\rc4\rc4_arm.s	/^pj = 5$/;"	d
src	crypto\rc4\rc4_arm.s	/^src = 1$/;"	d
state	crypto\rc4\rc4_arm.s	/^state = 3$/;"	d
t	crypto\rc4\rc4_arm.s	/^t = 11$/;"	d
t2	crypto\rc4\rc4_arm.s	/^t2 = 12$/;"	d
ANDL	crypto\sha1\sha1block_386.s	/^	ANDL	d, DI; \\$/;"	d
ANDL	crypto\sha1\sha1block_386.s	/^	ANDL	d, SI; \\$/;"	d
FUNC1	crypto\sha1\sha1block_386.s	/^#define FUNC1(a, b, c, d, e) \\$/;"	d
FUNC2	crypto\sha1\sha1block_386.s	/^#define FUNC2(a, b, c, d, e) \\$/;"	d
FUNC3	crypto\sha1\sha1block_386.s	/^#define FUNC3(a, b, c, d, e) \\$/;"	d
FUNC4	crypto\sha1\sha1block_386.s	/^#define FUNC4 FUNC2$/;"	d
LOAD	crypto\sha1\sha1block_386.s	/^#define LOAD(index, e) \\$/;"	d
MIX	crypto\sha1\sha1block_386.s	/^#define MIX(a, b, c, d, e, const) \\$/;"	d
ROUND1	crypto\sha1\sha1block_386.s	/^#define ROUND1(a, b, c, d, e, index) \\$/;"	d
ROUND1x	crypto\sha1\sha1block_386.s	/^#define ROUND1x(a, b, c, d, e, index) \\$/;"	d
ROUND2	crypto\sha1\sha1block_386.s	/^#define ROUND2(a, b, c, d, e, index) \\$/;"	d
ROUND3	crypto\sha1\sha1block_386.s	/^#define ROUND3(a, b, c, d, e, index) \\$/;"	d
ROUND4	crypto\sha1\sha1block_386.s	/^#define ROUND4(a, b, c, d, e, index) \\$/;"	d
SHUFFLE	crypto\sha1\sha1block_386.s	/^#define SHUFFLE(index, e) \\$/;"	d
TEXT	crypto\sha1\sha1block_386.s	/^TEXT ·block(SB),NOSPLIT,$92-16$/;"	l
XORL	crypto\sha1\sha1block_386.s	/^	XORL	d, DI$/;"	d
loop	crypto\sha1\sha1block_386.s	/^loop:$/;"	l
ANDL	crypto\sha1\sha1block_amd64.s	/^	ANDL	d, R8; \\$/;"	d
ANDL	crypto\sha1\sha1block_amd64.s	/^	ANDL	d, R9; \\$/;"	d
FUNC1	crypto\sha1\sha1block_amd64.s	/^#define FUNC1(a, b, c, d, e) \\$/;"	d
FUNC2	crypto\sha1\sha1block_amd64.s	/^#define FUNC2(a, b, c, d, e) \\$/;"	d
FUNC3	crypto\sha1\sha1block_amd64.s	/^#define FUNC3(a, b, c, d, e) \\$/;"	d
FUNC4	crypto\sha1\sha1block_amd64.s	/^#define FUNC4 FUNC2$/;"	d
LOAD	crypto\sha1\sha1block_amd64.s	/^#define LOAD(index) \\$/;"	d
MIX	crypto\sha1\sha1block_amd64.s	/^#define MIX(a, b, c, d, e, const) \\$/;"	d
ROUND1	crypto\sha1\sha1block_amd64.s	/^#define ROUND1(a, b, c, d, e, index) \\$/;"	d
ROUND1x	crypto\sha1\sha1block_amd64.s	/^#define ROUND1x(a, b, c, d, e, index) \\$/;"	d
ROUND2	crypto\sha1\sha1block_amd64.s	/^#define ROUND2(a, b, c, d, e, index) \\$/;"	d
ROUND3	crypto\sha1\sha1block_amd64.s	/^#define ROUND3(a, b, c, d, e, index) \\$/;"	d
ROUND4	crypto\sha1\sha1block_amd64.s	/^#define ROUND4(a, b, c, d, e, index) \\$/;"	d
SHUFFLE	crypto\sha1\sha1block_amd64.s	/^#define SHUFFLE(index) \\$/;"	d
TEXT	crypto\sha1\sha1block_amd64.s	/^TEXT ·block(SB),NOSPLIT,$64-32$/;"	l
XORL	crypto\sha1\sha1block_amd64.s	/^	XORL	d, R9$/;"	d
loop	crypto\sha1\sha1block_amd64.s	/^loop:$/;"	l
a10	debug\dwarf\testdata\typedef.c	/^t_func_void_of_void *a10;$/;"	v
a11	debug\dwarf\testdata\typedef.c	/^t_func_void_of_ptr_char_dots *a11;$/;"	v
a12	debug\dwarf\testdata\typedef.c	/^t_my_struct *a12;$/;"	v
a12a	debug\dwarf\testdata\typedef.c	/^t_my_struct1 *a12a;$/;"	v
a12b	debug\dwarf\testdata\typedef.c	/^t_my_union *a12b;$/;"	v
a13	debug\dwarf\testdata\typedef.c	/^t_my_enum *a13;$/;"	v
a14	debug\dwarf\testdata\typedef.c	/^t_my_list *a14;$/;"	v
a15	debug\dwarf\testdata\typedef.c	/^t_my_tree *a15;$/;"	v
a16	debug\dwarf\testdata\typedef.c	/^t_ptr_func_int_of_float_complex *a16;$/;"	v
a17	debug\dwarf\testdata\typedef.c	/^t_ptr_func_int_of_double_complex *a17;$/;"	v
a18	debug\dwarf\testdata\typedef.c	/^t_ptr_func_int_of_long_double_complex *a18;$/;"	v
a2	debug\dwarf\testdata\typedef.c	/^t_ptr_volatile_int *a2;$/;"	v
a3a	debug\dwarf\testdata\typedef.c	/^t_ptr_const_char **a3a;$/;"	v
a4	debug\dwarf\testdata\typedef.c	/^t_long *a4;$/;"	v
a5	debug\dwarf\testdata\typedef.c	/^t_ushort *a5;$/;"	v
a6	debug\dwarf\testdata\typedef.c	/^t_func_int_of_float_double *a6;$/;"	v
a7	debug\dwarf\testdata\typedef.c	/^t_ptr_func_int_of_float_double *a7;$/;"	v
a8	debug\dwarf\testdata\typedef.c	/^t_func_ptr_int_of_char_schar_uchar *a8;$/;"	v
a9	debug\dwarf\testdata\typedef.c	/^t_func_void_of_char *a9;$/;"	v
array	debug\dwarf\testdata\typedef.c	/^	long long array[40];$/;"	m	struct:my_struct	file:
array	debug\dwarf\testdata\typedef.c	/^	long long array[40];$/;"	m	union:my_union	file:
e1	debug\dwarf\testdata\typedef.c	/^	e1 = 1,$/;"	e	enum:my_enum	file:
e2	debug\dwarf\testdata\typedef.c	/^	e2 = 2,$/;"	e	enum:my_enum	file:
e3	debug\dwarf\testdata\typedef.c	/^	e3 = -5,$/;"	e	enum:my_enum	file:
e4	debug\dwarf\testdata\typedef.c	/^	e4 = 1000000000000000LL,$/;"	e	enum:my_enum	file:
left	debug\dwarf\testdata\typedef.c	/^	struct tree *left, *right;$/;"	m	struct:tree	typeref:struct:tree::tree	file:
list	debug\dwarf\testdata\typedef.c	/^struct list {$/;"	s	file:
main	debug\dwarf\testdata\typedef.c	/^int main()$/;"	f
my_enum	debug\dwarf\testdata\typedef.c	/^typedef enum my_enum {$/;"	g	file:
my_struct	debug\dwarf\testdata\typedef.c	/^typedef struct my_struct {$/;"	s	file:
my_struct1	debug\dwarf\testdata\typedef.c	/^typedef struct my_struct1 {$/;"	s	file:
my_union	debug\dwarf\testdata\typedef.c	/^typedef union my_union {$/;"	u	file:
next	debug\dwarf\testdata\typedef.c	/^	t_my_list *next;$/;"	m	struct:list	file:
right	debug\dwarf\testdata\typedef.c	/^	struct tree *left, *right;$/;"	m	struct:tree	typeref:struct:tree::	file:
t_func_int_of_float_double	debug\dwarf\testdata\typedef.c	/^typedef int t_func_int_of_float_double(float, double);$/;"	t	file:
t_func_ptr_int_of_char_schar_uchar	debug\dwarf\testdata\typedef.c	/^typedef int *t_func_ptr_int_of_char_schar_uchar(char, signed char, unsigned char);$/;"	t	file:
t_func_void_of_char	debug\dwarf\testdata\typedef.c	/^typedef void t_func_void_of_char(char);$/;"	t	file:
t_func_void_of_ptr_char_dots	debug\dwarf\testdata\typedef.c	/^typedef void t_func_void_of_ptr_char_dots(char*, ...);$/;"	t	file:
t_func_void_of_void	debug\dwarf\testdata\typedef.c	/^typedef void t_func_void_of_void(void);$/;"	t	file:
t_long	debug\dwarf\testdata\typedef.c	/^typedef long t_long;$/;"	t	file:
t_my_enum	debug\dwarf\testdata\typedef.c	/^} t_my_enum;$/;"	t	typeref:enum:my_enum	file:
t_my_list	debug\dwarf\testdata\typedef.c	/^typedef struct list t_my_list;$/;"	t	typeref:struct:list	file:
t_my_struct	debug\dwarf\testdata\typedef.c	/^} t_my_struct;$/;"	t	typeref:struct:my_struct	file:
t_my_struct1	debug\dwarf\testdata\typedef.c	/^} t_my_struct1;$/;"	t	typeref:struct:my_struct1	file:
t_my_tree	debug\dwarf\testdata\typedef.c	/^} t_my_tree;$/;"	t	typeref:struct:tree	file:
t_my_union	debug\dwarf\testdata\typedef.c	/^} t_my_union;$/;"	t	typeref:union:my_union	file:
t_ptr_const_char	debug\dwarf\testdata\typedef.c	/^typedef const char *t_ptr_const_char;$/;"	t	file:
t_ptr_func_int_of_double_complex	debug\dwarf\testdata\typedef.c	/^typedef int (*t_ptr_func_int_of_double_complex)(double complex);$/;"	t	file:
t_ptr_func_int_of_float_complex	debug\dwarf\testdata\typedef.c	/^typedef int (*t_ptr_func_int_of_float_complex)(float complex);$/;"	t	file:
t_ptr_func_int_of_float_double	debug\dwarf\testdata\typedef.c	/^typedef int (*t_ptr_func_int_of_float_double)(float, double);$/;"	t	file:
t_ptr_func_int_of_long_double_complex	debug\dwarf\testdata\typedef.c	/^typedef int (*t_ptr_func_int_of_long_double_complex)(long double complex);$/;"	t	file:
t_ptr_volatile_int	debug\dwarf\testdata\typedef.c	/^typedef volatile int* t_ptr_volatile_int;$/;"	t	file:
t_ushort	debug\dwarf\testdata\typedef.c	/^typedef unsigned short t_ushort;$/;"	t	file:
tree	debug\dwarf\testdata\typedef.c	/^typedef struct tree {$/;"	s	file:
val	debug\dwarf\testdata\typedef.c	/^	short val;$/;"	m	struct:list	file:
val	debug\dwarf\testdata\typedef.c	/^	unsigned long long val;$/;"	m	struct:tree	file:
vi	debug\dwarf\testdata\typedef.c	/^	volatile int vi;$/;"	m	struct:my_struct	file:
vi	debug\dwarf\testdata\typedef.c	/^	volatile int vi;$/;"	m	union:my_union	file:
x	debug\dwarf\testdata\typedef.c	/^	char x : 1;$/;"	m	struct:my_struct	file:
y	debug\dwarf\testdata\typedef.c	/^	int y : 4;$/;"	m	struct:my_struct	file:
z	debug\dwarf\testdata\typedef.c	/^	int z[0];$/;"	m	struct:my_struct	file:
zz	debug\dwarf\testdata\typedef.c	/^	int zz [1];$/;"	m	struct:my_struct1	file:
zz	debug\dwarf\testdata\typedef.c	/^	int zz[0];$/;"	m	struct:my_struct	file:
BYTE	debug\gosym\pclinetest.asm		l
BYTE	debug\gosym\pclinetest.asm		l
BYTE	debug\gosym\pclinetest.asm		l
BYTE	debug\gosym\pclinetest.asm		l
BYTE	debug\gosym\pclinetest.asm		l
BYTE	debug\gosym\pclinetest.asm	/^BYTE $1; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0;$/;"	l
BYTE	debug\gosym\pclinetest.asm	/^BYTE $1; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0;$/;"	l
BYTE	debug\gosym\pclinetest.asm	/^BYTE $1; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0;$/;"	l
BYTE	debug\gosym\pclinetest.asm	/^BYTE $1; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0; BYTE $0;$/;"	l
BYTE	debug\gosym\pclinetest.asm	/^BYTE $1; BYTE $0; BYTE $0; BYTE $0; BYTE $0;$/;"	l
BYTE	debug\gosym\pclinetest.asm	/^BYTE $1; BYTE $0; BYTE $0;$/;"	l
BYTE	debug\gosym\pclinetest.asm	/^BYTE $1; BYTE $0;$/;"	l
BYTE	debug\gosym\pclinetest.asm	/^BYTE $1; BYTE $1; BYTE $0;$/;"	l
BYTE	debug\gosym\pclinetest.asm	/^BYTE $1;$/;"	l
BYTE	debug\gosym\pclinetest.asm	/^BYTE $255;$/;"	l
BYTE	debug\gosym\pclinetest.asm	/^BYTE $2; BYTE $4; BYTE $0; BYTE $0; BYTE $0; BYTE $0;$/;"	l
BYTE	debug\gosym\pclinetest.asm	/^BYTE $2;$/;"	l
BYTE	debug\gosym\pclinetest.asm	/^BYTE $32; BYTE $0;$/;"	l
BYTE	debug\gosym\pclinetest.asm	/^BYTE $3; BYTE $3; BYTE $0; BYTE $0; BYTE $0;$/;"	l
BYTE	debug\gosym\pclinetest.asm	/^BYTE $4; BYTE $0;$/;"	l
BYTE	debug\gosym\pclinetest.asm	/^BYTE $4; BYTE $3; BYTE $0; BYTE $0; BYTE $0;$/;"	l
TEXT	debug\gosym\pclinetest.asm	/^TEXT linefrompc(SB),4,$0	\/\/ Each byte stores its line delta$/;"	l
TEXT	debug\gosym\pclinetest.asm	/^TEXT main·init(SB),4,$0$/;"	l
TEXT	debug\gosym\pclinetest.asm	/^TEXT main·main(SB),4,$0$/;"	l
TEXT	debug\gosym\pclinetest.asm	/^TEXT pcfromline(SB),4,$0	\/\/ Each record stores its line delta, then n, then n more bytes$/;"	l
main	debug\macho\testdata\hello.c	/^main(void)$/;"	f
main	debug\pe\testdata\hello.c	/^main(void)$/;"	f
TEXT	hash\crc32\crc32_amd64.s	/^TEXT ·castagnoliSSE42(SB),NOSPLIT,$0$/;"	l
TEXT	hash\crc32\crc32_amd64.s	/^TEXT ·haveSSE42(SB),NOSPLIT,$0$/;"	l
aligned	hash\crc32\crc32_amd64.s	/^aligned:$/;"	l
cleanup	hash\crc32\crc32_amd64.s	/^cleanup:$/;"	l
done	hash\crc32\crc32_amd64.s	/^done:$/;"	l
startup	hash\crc32\crc32_amd64.s	/^startup:$/;"	l
TEXT	math\abs_386.s	/^TEXT ·Abs(SB),NOSPLIT,$0$/;"	l
TEXT	math\abs_amd64.s	/^TEXT ·Abs(SB),NOSPLIT,$0$/;"	l
TEXT	math\abs_arm.s	/^TEXT ·Abs(SB),NOSPLIT,$0$/;"	l
TEXT	math\asin_386.s	/^TEXT ·Acos(SB),NOSPLIT,$0$/;"	l
TEXT	math\asin_386.s	/^TEXT ·Asin(SB),NOSPLIT,$0$/;"	l
TEXT	math\asin_amd64.s	/^TEXT ·Acos(SB),NOSPLIT,$0$/;"	l
TEXT	math\asin_amd64.s	/^TEXT ·Asin(SB),NOSPLIT,$0$/;"	l
TEXT	math\asin_arm.s	/^TEXT ·Acos(SB),NOSPLIT,$0$/;"	l
TEXT	math\asin_arm.s	/^TEXT ·Asin(SB),NOSPLIT,$0$/;"	l
TEXT	math\atan2_386.s	/^TEXT ·Atan2(SB),NOSPLIT,$0$/;"	l
TEXT	math\atan2_amd64.s	/^TEXT ·Atan2(SB),NOSPLIT,$0$/;"	l
TEXT	math\atan2_arm.s	/^TEXT ·Atan2(SB),NOSPLIT,$0$/;"	l
TEXT	math\atan_386.s	/^TEXT ·Atan(SB),NOSPLIT,$0$/;"	l
TEXT	math\atan_amd64.s	/^TEXT ·Atan(SB),NOSPLIT,$0$/;"	l
TEXT	math\atan_arm.s	/^TEXT ·Atan(SB),NOSPLIT,$0$/;"	l
E1	math\big\arith_386.s	/^E1:	CMPL BX, BP		\/\/ i < n$/;"	l
E2	math\big\arith_386.s	/^E2:	CMPL BX, BP		\/\/ i < n$/;"	l
E3	math\big\arith_386.s	/^E3:	CMPL BX, BP		\/\/ i < n$/;"	l
E4	math\big\arith_386.s	/^E4:	CMPL BX, BP		\/\/ i < n$/;"	l
E5	math\big\arith_386.s	/^E5:	CMPL BX, $0		\/\/ i < 0$/;"	l
E6	math\big\arith_386.s	/^E6:	CMPL BX, $0		\/\/ i < 0$/;"	l
E7	math\big\arith_386.s	/^E7:	SUBL $1, BX		\/\/ i--$/;"	l
E9	math\big\arith_386.s	/^E9:	CMPL BX, BP$/;"	l
L1	math\big\arith_386.s	/^L1:	MOVL (SI)(BX*4), AX$/;"	l
L2	math\big\arith_386.s	/^L2:	MOVL (SI)(BX*4), AX$/;"	l
L3	math\big\arith_386.s	/^L3:	ADDL (SI)(BX*4), AX$/;"	l
L4	math\big\arith_386.s	/^L4:	MOVL (SI)(BX*4), DX	\/\/ TODO(gri) is there a reverse SUBL?$/;"	l
L5	math\big\arith_386.s	/^L5:	MOVL (SI)(BX*4), AX$/;"	l
L6	math\big\arith_386.s	/^L6:	MOVL (SI)(BX*4), AX$/;"	l
L7	math\big\arith_386.s	/^L7:	MOVL (SI)(BX*4), AX$/;"	l
L8	math\big\arith_386.s	/^L8:	MOVL AX, DX		\/\/ w = w1$/;"	l
L9	math\big\arith_386.s	/^L9:	MOVL AX, DX		\/\/ w = w1$/;"	l
TEXT	math\big\arith_386.s	/^TEXT ·addMulVVW(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_386.s	/^TEXT ·addVV(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_386.s	/^TEXT ·addVW(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_386.s	/^TEXT ·bitLen(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_386.s	/^TEXT ·divWVW(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_386.s	/^TEXT ·divWW(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_386.s	/^TEXT ·mulAddVWW(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_386.s	/^TEXT ·mulWW(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_386.s	/^TEXT ·shlVU(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_386.s	/^TEXT ·shrVU(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_386.s	/^TEXT ·subVV(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_386.s	/^TEXT ·subVW(SB),NOSPLIT,$0$/;"	l
X8a	math\big\arith_386.s	/^X8a:	SHLL CX, AX		\/\/ w1<<s$/;"	l
X8b	math\big\arith_386.s	/^X8b:	MOVL $0, c+28(FP)$/;"	l
X9a	math\big\arith_386.s	/^X9a:	SHRL CX, AX		\/\/ w1>>s$/;"	l
X9b	math\big\arith_386.s	/^X9b:	MOVL $0, c+28(FP)$/;"	l
Z1	math\big\arith_386.s	/^Z1:	MOVL $0, n+4(FP)$/;"	l
E1	math\big\arith_amd64.s	/^E1:	MOVQ CX, c+72(FP)	\/\/ return c$/;"	l
E2	math\big\arith_amd64.s	/^E2:	MOVQ CX, c+72(FP)	\/\/ return c$/;"	l
E3	math\big\arith_amd64.s	/^E3:	MOVQ CX, c+56(FP)	\/\/ return c$/;"	l
E4	math\big\arith_amd64.s	/^E4:	MOVQ CX, c+56(FP)	\/\/ return c$/;"	l
E5	math\big\arith_amd64.s	/^E5:	CMPQ BX, R11		\/\/ i < n$/;"	l
E6	math\big\arith_amd64.s	/^E6:	CMPQ BX, R11		\/\/ i < n$/;"	l
E7	math\big\arith_amd64.s	/^E7:	SUBQ $1, BX		\/\/ i--$/;"	l
E9	math\big\arith_amd64.s	/^E9:	CMPQ BX, R11$/;"	l
L1	math\big\arith_amd64.s	/^L1:	\/\/ n > 0$/;"	l
L2	math\big\arith_amd64.s	/^L2:	\/\/ n > 0$/;"	l
L3	math\big\arith_amd64.s	/^L3:	\/\/ n > 0$/;"	l
L4	math\big\arith_amd64.s	/^L4:	\/\/ n > 0$/;"	l
L5	math\big\arith_amd64.s	/^L5:	MOVQ (R8)(BX*8), AX$/;"	l
L6	math\big\arith_amd64.s	/^L6:	MOVQ (R8)(BX*8), AX$/;"	l
L7	math\big\arith_amd64.s	/^L7:	MOVQ (R8)(BX*8), AX$/;"	l
L8	math\big\arith_amd64.s	/^L8:	MOVQ AX, DX		\/\/ w = w1$/;"	l
L9	math\big\arith_amd64.s	/^L9:	MOVQ AX, DX		\/\/ w = w1$/;"	l
TEXT	math\big\arith_amd64.s	/^TEXT ·addMulVVW(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_amd64.s	/^TEXT ·addVV(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_amd64.s	/^TEXT ·addVW(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_amd64.s	/^TEXT ·bitLen(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_amd64.s	/^TEXT ·divWVW(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_amd64.s	/^TEXT ·divWW(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_amd64.s	/^TEXT ·mulAddVWW(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_amd64.s	/^TEXT ·mulWW(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_amd64.s	/^TEXT ·shlVU(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_amd64.s	/^TEXT ·shrVU(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_amd64.s	/^TEXT ·subVV(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_amd64.s	/^TEXT ·subVW(SB),NOSPLIT,$0$/;"	l
U1	math\big\arith_amd64.s	/^U1:	\/\/ n >= 0$/;"	l
U2	math\big\arith_amd64.s	/^U2:	\/\/ n >= 0$/;"	l
U3	math\big\arith_amd64.s	/^U3:	\/\/ n >= 0$/;"	l
U4	math\big\arith_amd64.s	/^U4:	\/\/ n >= 0$/;"	l
V1	math\big\arith_amd64.s	/^V1:	ADDQ $4, DI		\/\/ n += 4$/;"	l
V2	math\big\arith_amd64.s	/^V2:	ADDQ $4, DI		\/\/ n += 4$/;"	l
V3	math\big\arith_amd64.s	/^V3:	ADDQ $4, DI		\/\/ n += 4$/;"	l
V4	math\big\arith_amd64.s	/^V4:	ADDQ $4, DI		\/\/ n += 4$/;"	l
X8a	math\big\arith_amd64.s	/^X8a:	SHLQ CX, AX		\/\/ w1<<s$/;"	l
X8b	math\big\arith_amd64.s	/^X8b:	MOVQ $0, c+56(FP)$/;"	l
X9a	math\big\arith_amd64.s	/^X9a:	SHRQ CX, AX		\/\/ w1>>s$/;"	l
X9b	math\big\arith_amd64.s	/^X9b:	MOVQ $0, c+56(FP)$/;"	l
Z1	math\big\arith_amd64.s	/^Z1:	MOVQ $0, n+8(FP)$/;"	l
ZERO_CX	math\big\arith_amd64.s	/^#define ZERO_CX BYTE $0x48; \\$/;"	d
CFLAG	math\big\arith_arm.s	/^#define CFLAG 29	\/\/ bit position of carry flag$/;"	d
E1	math\big\arith_arm.s	/^E1:$/;"	l
E2	math\big\arith_arm.s	/^E2:$/;"	l
E3	math\big\arith_arm.s	/^E3:$/;"	l
E4	math\big\arith_arm.s	/^E4:$/;"	l
E6	math\big\arith_arm.s	/^E6:$/;"	l
E7	math\big\arith_arm.s	/^E7:$/;"	l
E8	math\big\arith_arm.s	/^E8:$/;"	l
E9	math\big\arith_arm.s	/^E9:$/;"	l
L1	math\big\arith_arm.s	/^L1:$/;"	l
L2	math\big\arith_arm.s	/^L2:$/;"	l
L3	math\big\arith_arm.s	/^L3:$/;"	l
L3a	math\big\arith_arm.s	/^L3a:$/;"	l
L4	math\big\arith_arm.s	/^L4:$/;"	l
L4a	math\big\arith_arm.s	/^L4a:$/;"	l
L6	math\big\arith_arm.s	/^L6:$/;"	l
L7	math\big\arith_arm.s	/^L7:$/;"	l
L8	math\big\arith_arm.s	/^L8:$/;"	l
L9	math\big\arith_arm.s	/^L9:$/;"	l
TEXT	math\big\arith_arm.s	/^TEXT ·addMulVVW(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_arm.s	/^TEXT ·addVV(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_arm.s	/^TEXT ·addVW(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_arm.s	/^TEXT ·bitLen(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_arm.s	/^TEXT ·divWVW(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_arm.s	/^TEXT ·divWW(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_arm.s	/^TEXT ·mulAddVWW(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_arm.s	/^TEXT ·mulWW(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_arm.s	/^TEXT ·shlVU(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_arm.s	/^TEXT ·shrVU(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_arm.s	/^TEXT ·subVV(SB),NOSPLIT,$0$/;"	l
TEXT	math\big\arith_arm.s	/^TEXT ·subVW(SB),NOSPLIT,$0$/;"	l
X6	math\big\arith_arm.s	/^X6:$/;"	l
X7	math\big\arith_arm.s	/^X7:$/;"	l
Y6	math\big\arith_arm.s	/^Y6:	\/\/ copy loop, because shift 0 == shift 32$/;"	l
Y7	math\big\arith_arm.s	/^Y7:	\/\/ copy loop, because shift 0 == shift 32$/;"	l
TEXT	math\dim_386.s	/^TEXT ·Dim(SB),NOSPLIT,$0$/;"	l
TEXT	math\dim_386.s	/^TEXT ·Max(SB),NOSPLIT,$0$/;"	l
TEXT	math\dim_386.s	/^TEXT ·Min(SB),NOSPLIT,$0$/;"	l
NaN	math\dim_amd64.s	/^#define NaN    0x7FF8000000000001$/;"	d
NegInf	math\dim_amd64.s	/^#define NegInf 0xFFF0000000000000$/;"	d
PosInf	math\dim_amd64.s	/^#define PosInf 0x7FF0000000000000$/;"	d
TEXT	math\dim_amd64.s	/^TEXT ·Dim(SB),NOSPLIT,$0$/;"	l
TEXT	math\dim_amd64.s	/^TEXT ·Max(SB),NOSPLIT,$0$/;"	l
TEXT	math\dim_amd64.s	/^TEXT ·Min(SB),NOSPLIT,$0$/;"	l
bothInf	math\dim_amd64.s	/^bothInf: \/\/ Dim(-Inf, -Inf) or Dim(+Inf, +Inf)$/;"	l
dim2	math\dim_amd64.s	/^dim2:	\/\/ (-Inf, -Inf) special case$/;"	l
dim3	math\dim_amd64.s	/^dim3:	\/\/ (NaN, x) or (x, NaN)$/;"	l
isDimNaN	math\dim_amd64.s	/^isDimNaN:$/;"	l
isMaxNaN	math\dim_amd64.s	/^isMaxNaN: \/\/ return NaN$/;"	l
isMaxZero	math\dim_amd64.s	/^isMaxZero:$/;"	l
isMinNaN	math\dim_amd64.s	/^isMinNaN: \/\/ return NaN$/;"	l
isMinZero	math\dim_amd64.s	/^isMinZero:$/;"	l
isNegInf	math\dim_amd64.s	/^isNegInf: \/\/ return -Inf$/;"	l
isPosInf	math\dim_amd64.s	/^isPosInf: \/\/ return +Inf$/;"	l
TEXT	math\dim_arm.s	/^TEXT ·Dim(SB),NOSPLIT,$0$/;"	l
TEXT	math\dim_arm.s	/^TEXT ·Max(SB),NOSPLIT,$0$/;"	l
TEXT	math\dim_arm.s	/^TEXT ·Min(SB),NOSPLIT,$0$/;"	l
TEXT	math\exp2_386.s	/^TEXT ·Exp2(SB),NOSPLIT,$0$/;"	l
not_finite	math\exp2_386.s	/^not_finite:$/;"	l
not_neginf	math\exp2_386.s	/^not_neginf:$/;"	l
TEXT	math\exp2_amd64.s	/^TEXT ·Exp2(SB),NOSPLIT,$0$/;"	l
TEXT	math\exp2_arm.s	/^TEXT ·Exp2(SB),NOSPLIT,$0$/;"	l
TEXT	math\exp_386.s	/^TEXT ·Exp(SB),NOSPLIT,$0$/;"	l
not_finite	math\exp_386.s	/^not_finite:$/;"	l
not_neginf	math\exp_386.s	/^not_neginf:$/;"	l
LN2	math\exp_amd64.s	/^#define LN2 0.6931471805599453094172321214581766 \/\/ log_e(2)$/;"	d
LN2L	math\exp_amd64.s	/^#define LN2L 0.28235290563031577122588448175013436025525412068e-12 \/\/ lower half LN2$/;"	d
LN2U	math\exp_amd64.s	/^#define LN2U 0.69314718055966295651160180568695068359375 \/\/ upper half LN2$/;"	d
LOG2E	math\exp_amd64.s	/^#define LOG2E 1.4426950408889634073599246810018920 \/\/ 1\/LN2$/;"	d
NegInf	math\exp_amd64.s	/^#define NegInf 0xFFF0000000000000$/;"	d
PosInf	math\exp_amd64.s	/^#define PosInf 0x7FF0000000000000$/;"	d
T0	math\exp_amd64.s	/^#define T0 1.0$/;"	d
T1	math\exp_amd64.s	/^#define T1 0.5$/;"	d
T2	math\exp_amd64.s	/^#define T2 1.6666666666666666667e-1$/;"	d
T3	math\exp_amd64.s	/^#define T3 4.1666666666666666667e-2$/;"	d
T4	math\exp_amd64.s	/^#define T4 8.3333333333333333333e-3$/;"	d
T5	math\exp_amd64.s	/^#define T5 1.3888888888888888889e-3$/;"	d
T6	math\exp_amd64.s	/^#define T6 1.9841269841269841270e-4$/;"	d
T7	math\exp_amd64.s	/^#define T7 2.4801587301587301587e-5$/;"	d
TEXT	math\exp_amd64.s	/^TEXT ·Exp(SB),NOSPLIT,$0$/;"	l
notFinite	math\exp_amd64.s	/^notFinite:$/;"	l
notNegInf	math\exp_amd64.s	/^notNegInf: \/\/ NaN or +Inf, return x$/;"	l
overflow	math\exp_amd64.s	/^overflow: \/\/ return +Inf$/;"	l
underflow	math\exp_amd64.s	/^underflow: \/\/ return 0$/;"	l
TEXT	math\exp_arm.s	/^TEXT ·Exp(SB),NOSPLIT,$0$/;"	l
TEXT	math\expm1_386.s	/^TEXT ·Expm1(SB),NOSPLIT,$0$/;"	l
not_finite	math\expm1_386.s	/^not_finite:$/;"	l
not_neginf	math\expm1_386.s	/^not_neginf:$/;"	l
use_exp	math\expm1_386.s	/^use_exp:$/;"	l
TEXT	math\expm1_amd64.s	/^TEXT ·Expm1(SB),NOSPLIT,$0$/;"	l
TEXT	math\expm1_arm.s	/^TEXT ·Expm1(SB),NOSPLIT,$0$/;"	l
TEXT	math\floor_386.s	/^TEXT ·Ceil(SB),NOSPLIT,$0$/;"	l
TEXT	math\floor_386.s	/^TEXT ·Floor(SB),NOSPLIT,$0$/;"	l
TEXT	math\floor_386.s	/^TEXT ·Trunc(SB),NOSPLIT,$0$/;"	l
Big	math\floor_amd64.s	/^#define Big		0x4330000000000000 \/\/ 2**52$/;"	d
TEXT	math\floor_amd64.s	/^TEXT ·Ceil(SB),NOSPLIT,$0$/;"	l
TEXT	math\floor_amd64.s	/^TEXT ·Floor(SB),NOSPLIT,$0$/;"	l
TEXT	math\floor_amd64.s	/^TEXT ·Trunc(SB),NOSPLIT,$0$/;"	l
isBig_ceil	math\floor_amd64.s	/^isBig_ceil:$/;"	l
isBig_floor	math\floor_amd64.s	/^isBig_floor:$/;"	l
isBig_trunc	math\floor_amd64.s	/^isBig_trunc:$/;"	l
TEXT	math\floor_arm.s	/^TEXT ·Ceil(SB),NOSPLIT,$0$/;"	l
TEXT	math\floor_arm.s	/^TEXT ·Floor(SB),NOSPLIT,$0$/;"	l
TEXT	math\floor_arm.s	/^TEXT ·Trunc(SB),NOSPLIT,$0$/;"	l
TEXT	math\frexp_386.s	/^TEXT ·Frexp(SB),NOSPLIT,$0$/;"	l
nan_zero_inf	math\frexp_386.s	/^nan_zero_inf:$/;"	l
TEXT	math\frexp_amd64.s	/^TEXT ·Frexp(SB),NOSPLIT,$0$/;"	l
TEXT	math\frexp_arm.s	/^TEXT ·Frexp(SB),NOSPLIT,$0$/;"	l
TEXT	math\hypot_386.s	/^TEXT ·Hypot(SB),NOSPLIT,$0$/;"	l
is_inf	math\hypot_386.s	/^is_inf:$/;"	l
not_finite	math\hypot_386.s	/^not_finite:$/;"	l
NaN	math\hypot_amd64.s	/^#define NaN 0x7FF8000000000001$/;"	d
PosInf	math\hypot_amd64.s	/^#define PosInf 0x7FF0000000000000$/;"	d
TEXT	math\hypot_amd64.s	/^TEXT ·Hypot(SB),NOSPLIT,$0$/;"	l
isInf	math\hypot_amd64.s	/^isInf:$/;"	l
isInfOrNaN	math\hypot_amd64.s	/^isInfOrNaN:$/;"	l
isZero	math\hypot_amd64.s	/^isZero:$/;"	l
TEXT	math\hypot_arm.s	/^TEXT ·Hypot(SB),NOSPLIT,$0$/;"	l
TEXT	math\ldexp_386.s	/^TEXT ·Ldexp(SB),NOSPLIT,$0$/;"	l
TEXT	math\ldexp_amd64.s	/^TEXT ·Ldexp(SB),NOSPLIT,$0$/;"	l
TEXT	math\ldexp_arm.s	/^TEXT ·Ldexp(SB),NOSPLIT,$0$/;"	l
TEXT	math\log10_386.s	/^TEXT ·Log10(SB),NOSPLIT,$0$/;"	l
TEXT	math\log10_386.s	/^TEXT ·Log2(SB),NOSPLIT,$0$/;"	l
TEXT	math\log10_amd64.s	/^TEXT ·Log10(SB),NOSPLIT,$0$/;"	l
TEXT	math\log10_amd64.s	/^TEXT ·Log2(SB),NOSPLIT,$0$/;"	l
TEXT	math\log10_arm.s	/^TEXT ·Log10(SB),NOSPLIT,$0$/;"	l
TEXT	math\log10_arm.s	/^TEXT ·Log2(SB),NOSPLIT,$0$/;"	l
TEXT	math\log1p_386.s	/^TEXT ·Log1p(SB),NOSPLIT,$0$/;"	l
use_fyl2x	math\log1p_386.s	/^use_fyl2x:$/;"	l
TEXT	math\log1p_amd64.s	/^TEXT ·Log1p(SB),NOSPLIT,$0$/;"	l
TEXT	math\log1p_arm.s	/^TEXT ·Log1p(SB),NOSPLIT,$0$/;"	l
TEXT	math\log_386.s	/^TEXT ·Log(SB),NOSPLIT,$0$/;"	l
HSqrt2	math\log_amd64.s	/^#define HSqrt2 7.07106781186547524401e-01 \/\/ sqrt(2)\/2$/;"	d
L1	math\log_amd64.s	/^#define L1     6.666666666666735130e-01   \/\/ 0x3FE5555555555593$/;"	d
L2	math\log_amd64.s	/^#define L2     3.999999999940941908e-01   \/\/ 0x3FD999999997FA04$/;"	d
L3	math\log_amd64.s	/^#define L3     2.857142874366239149e-01   \/\/ 0x3FD2492494229359$/;"	d
L4	math\log_amd64.s	/^#define L4     2.222219843214978396e-01   \/\/ 0x3FCC71C51D8E78AF$/;"	d
L5	math\log_amd64.s	/^#define L5     1.818357216161805012e-01   \/\/ 0x3FC7466496CB03DE$/;"	d
L6	math\log_amd64.s	/^#define L6     1.531383769920937332e-01   \/\/ 0x3FC39A09D078C69F$/;"	d
L7	math\log_amd64.s	/^#define L7     1.479819860511658591e-01   \/\/ 0x3FC2F112DF3E5244$/;"	d
Ln2Hi	math\log_amd64.s	/^#define Ln2Hi  6.93147180369123816490e-01 \/\/ 0x3fe62e42fee00000$/;"	d
Ln2Lo	math\log_amd64.s	/^#define Ln2Lo  1.90821492927058770002e-10 \/\/ 0x3dea39ef35793c76$/;"	d
NaN	math\log_amd64.s	/^#define NaN    0x7FF8000000000001$/;"	d
NegInf	math\log_amd64.s	/^#define NegInf 0xFFF0000000000000$/;"	d
PosInf	math\log_amd64.s	/^#define PosInf 0x7FF0000000000000$/;"	d
TEXT	math\log_amd64.s	/^TEXT ·Log(SB),NOSPLIT,$0$/;"	l
isInfOrNaN	math\log_amd64.s	/^isInfOrNaN:$/;"	l
isNegative	math\log_amd64.s	/^isNegative:$/;"	l
isZero	math\log_amd64.s	/^isZero:$/;"	l
TEXT	math\log_arm.s	/^TEXT ·Log(SB),NOSPLIT,$0$/;"	l
TEXT	math\mod_386.s	/^TEXT ·Mod(SB),NOSPLIT,$0$/;"	l
TEXT	math\mod_amd64.s	/^TEXT ·Mod(SB),NOSPLIT,$0$/;"	l
TEXT	math\mod_arm.s	/^TEXT ·Mod(SB),NOSPLIT,$0$/;"	l
TEXT	math\modf_386.s	/^TEXT ·Modf(SB),NOSPLIT,$0$/;"	l
TEXT	math\modf_amd64.s	/^TEXT ·Modf(SB),NOSPLIT,$0$/;"	l
TEXT	math\modf_arm.s	/^TEXT ·Modf(SB),NOSPLIT,$0$/;"	l
TEXT	math\remainder_386.s	/^TEXT ·Remainder(SB),NOSPLIT,$0$/;"	l
TEXT	math\remainder_amd64.s	/^TEXT ·Remainder(SB),NOSPLIT,$0$/;"	l
TEXT	math\remainder_arm.s	/^TEXT ·Remainder(SB),NOSPLIT,$0$/;"	l
TEXT	math\sin_386.s	/^TEXT ·Cos(SB),NOSPLIT,$0$/;"	l
TEXT	math\sin_386.s	/^TEXT ·Sin(SB),NOSPLIT,$0$/;"	l
TEXT	math\sin_amd64.s	/^TEXT ·Cos(SB),NOSPLIT,$0$/;"	l
TEXT	math\sin_amd64.s	/^TEXT ·Sin(SB),NOSPLIT,$0$/;"	l
TEXT	math\sin_arm.s	/^TEXT ·Cos(SB),NOSPLIT,$0$/;"	l
TEXT	math\sin_arm.s	/^TEXT ·Sin(SB),NOSPLIT,$0$/;"	l
TEXT	math\sincos_386.s	/^TEXT ·Sincos(SB),NOSPLIT,$0$/;"	l
M4PI	math\sincos_amd64.s	/^#define M4PI 1.273239544735162542821171882678754627704620361328125 \/\/ 4\/pi$/;"	d
NaN	math\sincos_amd64.s	/^#define NaN    0x7FF8000000000001$/;"	d
PI4A	math\sincos_amd64.s	/^#define PI4A 0.7853981554508209228515625 \/\/ pi\/4 split into three parts$/;"	d
PI4B	math\sincos_amd64.s	/^#define PI4B 0.794662735614792836713604629039764404296875e-8$/;"	d
PI4C	math\sincos_amd64.s	/^#define PI4C 0.306161699786838294306516483068750264552437361480769e-16$/;"	d
PosInf	math\sincos_amd64.s	/^#define PosInf 0x7FF0000000000000$/;"	d
PosOne	math\sincos_amd64.s	/^#define PosOne 0x3FF0000000000000$/;"	d
T0	math\sincos_amd64.s	/^#define T0 1.0$/;"	d
T1	math\sincos_amd64.s	/^#define T1 -8.33333333333333333333333e-02 \/\/ (-1.0\/12)$/;"	d
T2	math\sincos_amd64.s	/^#define T2 2.77777777777777777777778e-03 \/\/ (+1.0\/360)$/;"	d
T3	math\sincos_amd64.s	/^#define T3 -4.96031746031746031746032e-05 \/\/ (-1.0\/20160)$/;"	d
T4	math\sincos_amd64.s	/^#define T4 5.51146384479717813051146e-07 \/\/ (+1.0\/1814400)$/;"	d
TEXT	math\sincos_amd64.s	/^TEXT ·Sincos(SB),NOSPLIT,$0$/;"	l
isInfOrNaN	math\sincos_amd64.s	/^isInfOrNaN: \/\/ return (NaN, NaN)$/;"	l
isZero	math\sincos_amd64.s	/^isZero: \/\/ return (±0.0, 1.0)$/;"	l
TEXT	math\sincos_arm.s	/^TEXT ·Sincos(SB),NOSPLIT,$0$/;"	l
TEXT	math\sqrt_386.s	/^TEXT ·Sqrt(SB),NOSPLIT,$0$/;"	l
TEXT	math\sqrt_amd64.s	/^TEXT ·Sqrt(SB),NOSPLIT,$0$/;"	l
TEXT	math\sqrt_arm.s	/^TEXT ·Sqrt(SB),NOSPLIT,$0$/;"	l
TEXT	math\tan_386.s	/^TEXT ·Tan(SB),NOSPLIT,$0$/;"	l
TEXT	math\tan_amd64.s	/^TEXT ·Tan(SB),NOSPLIT,$0$/;"	l
TEXT	math\tan_arm.s	/^TEXT ·Tan(SB),NOSPLIT,$0$/;"	l
JMP	os\signal\sig.s	/^#define JMP B$/;"	d
TEXT	os\signal\sig.s	/^TEXT ·signal_disable(SB),NOSPLIT,$0$/;"	l
TEXT	os\signal\sig.s	/^TEXT ·signal_enable(SB),NOSPLIT,$0$/;"	l
TEXT	os\signal\sig.s	/^TEXT ·signal_recv(SB),NOSPLIT,$0$/;"	l
TEXT	reflect\asm_386.s	/^TEXT ·makeFuncStub(SB),(NOSPLIT|WRAPPER),$8$/;"	l
TEXT	reflect\asm_386.s	/^TEXT ·methodValueCall(SB),(NOSPLIT|WRAPPER),$8$/;"	l
TEXT	reflect\asm_amd64.s	/^TEXT ·makeFuncStub(SB),(NOSPLIT|WRAPPER),$16$/;"	l
TEXT	reflect\asm_amd64.s	/^TEXT ·methodValueCall(SB),(NOSPLIT|WRAPPER),$16$/;"	l
TEXT	reflect\asm_arm.s	/^TEXT ·makeFuncStub(SB),(NOSPLIT|WRAPPER),$8$/;"	l
TEXT	reflect\asm_arm.s	/^TEXT ·methodValueCall(SB),(NOSPLIT|WRAPPER),$8$/;"	l
ComputeClass	regexp\syntax\make_perl_groups.pl	/^sub ComputeClass($) {$/;"	s
PrintClass	regexp\syntax\make_perl_groups.pl	/^sub PrintClass($$@) {$/;"	s
PrintClasses	regexp\syntax\make_perl_groups.pl	/^sub PrintClasses($@) {$/;"	s
syntax	regexp\syntax\make_perl_groups.pl	/^package syntax$/;"	p
Disc_s	regexp\testdata\testregex.c	/^typedef struct Disc_s$/;"	s	file:
Disc_t	regexp\testdata\testregex.c	/^} Disc_t;$/;"	t	typeref:struct:Disc_s	file:
H	regexp\testdata\testregex.c	155;"	d	file:
HUNG	regexp\testdata\testregex.c	315;"	d	file:
NOMATCH	regexp\testdata\testregex.c	/^	regmatch_t	NOMATCH;$/;"	m	struct:__anon2	file:
NOTEST	regexp\testdata\testregex.c	316;"	d	file:
NiL	regexp\testdata\testregex.c	149;"	d	file:
NiL	regexp\testdata\testregex.c	151;"	d	file:
REG_BADESC	regexp\testdata\testregex.c	503;"	d	file:
REG_CLASS_ESCAPE	regexp\testdata\testregex.c	424;"	d	file:
REG_COMMENT	regexp\testdata\testregex.c	427;"	d	file:
REG_DELIMITED	regexp\testdata\testregex.c	430;"	d	file:
REG_DISCIPLINE	regexp\testdata\testregex.c	63;"	d	file:
REG_EBUS	regexp\testdata\testregex.c	512;"	d	file:
REG_ECOUNT	regexp\testdata\testregex.c	500;"	d	file:
REG_EDELIM	regexp\testdata\testregex.c	521;"	d	file:
REG_EFAULT	regexp\testdata\testregex.c	515;"	d	file:
REG_EFLAGS	regexp\testdata\testregex.c	518;"	d	file:
REG_EHUNG	regexp\testdata\testregex.c	509;"	d	file:
REG_EMEM	regexp\testdata\testregex.c	506;"	d	file:
REG_ENEWLINE	regexp\testdata\testregex.c	490;"	d	file:
REG_ENULL	regexp\testdata\testregex.c	494;"	d	file:
REG_ENULL	regexp\testdata\testregex.c	496;"	d	file:
REG_ESCAPE	regexp\testdata\testregex.c	433;"	d	file:
REG_EXEC_DEFAULT	regexp\testdata\testregex.c	323;"	d	file:
REG_ICASE	regexp\testdata\testregex.c	436;"	d	file:
REG_LEFT	regexp\testdata\testregex.c	439;"	d	file:
REG_LENIENT	regexp\testdata\testregex.c	442;"	d	file:
REG_MINIMAL	regexp\testdata\testregex.c	445;"	d	file:
REG_MULTIPLE	regexp\testdata\testregex.c	448;"	d	file:
REG_MULTIREF	regexp\testdata\testregex.c	451;"	d	file:
REG_MUSTDELIM	regexp\testdata\testregex.c	454;"	d	file:
REG_NEWLINE	regexp\testdata\testregex.c	457;"	d	file:
REG_NOTBOL	regexp\testdata\testregex.c	460;"	d	file:
REG_NOTEOL	regexp\testdata\testregex.c	463;"	d	file:
REG_NULL	regexp\testdata\testregex.c	466;"	d	file:
REG_RIGHT	regexp\testdata\testregex.c	469;"	d	file:
REG_SHELL_DOT	regexp\testdata\testregex.c	472;"	d	file:
REG_SHELL_ESCAPED	regexp\testdata\testregex.c	475;"	d	file:
REG_SHELL_GROUP	regexp\testdata\testregex.c	478;"	d	file:
REG_SHELL_PATH	regexp\testdata\testregex.c	481;"	d	file:
REG_SPAN	regexp\testdata\testregex.c	484;"	d	file:
REG_TEST_DEFAULT	regexp\testdata\testregex.c	319;"	d	file:
REG_UNKNOWN	regexp\testdata\testregex.c	487;"	d	file:
RE_DUP_MAX	regexp\testdata\testregex.c	59;"	d	file:
T	regexp\testdata\testregex.c	156;"	d	file:
TABS	regexp\testdata\testregex.c	1073;"	d	file:
TEST_ACTUAL	regexp\testdata\testregex.c	91;"	d	file:
TEST_AND	regexp\testdata\testregex.c	84;"	d	file:
TEST_ARE	regexp\testdata\testregex.c	70;"	d	file:
TEST_BASELINE	regexp\testdata\testregex.c	92;"	d	file:
TEST_BRE	regexp\testdata\testregex.c	71;"	d	file:
TEST_CATCH	regexp\testdata\testregex.c	101;"	d	file:
TEST_DECOMP	regexp\testdata\testregex.c	104;"	d	file:
TEST_DELIMIT	regexp\testdata\testregex.c	87;"	d	file:
TEST_ERE	regexp\testdata\testregex.c	72;"	d	file:
TEST_EXPAND	regexp\testdata\testregex.c	77;"	d	file:
TEST_FAIL	regexp\testdata\testregex.c	93;"	d	file:
TEST_GLOBAL	regexp\testdata\testregex.c	106;"	d	file:
TEST_IGNORE_ERROR	regexp\testdata\testregex.c	97;"	d	file:
TEST_IGNORE_OVER	regexp\testdata\testregex.c	98;"	d	file:
TEST_IGNORE_POSITION	regexp\testdata\testregex.c	99;"	d	file:
TEST_KRE	regexp\testdata\testregex.c	73;"	d	file:
TEST_LENIENT	regexp\testdata\testregex.c	78;"	d	file:
TEST_LRE	regexp\testdata\testregex.c	74;"	d	file:
TEST_OK	regexp\testdata\testregex.c	88;"	d	file:
TEST_OR	regexp\testdata\testregex.c	85;"	d	file:
TEST_PASS	regexp\testdata\testregex.c	94;"	d	file:
TEST_QUERY	regexp\testdata\testregex.c	80;"	d	file:
TEST_SAME	regexp\testdata\testregex.c	89;"	d	file:
TEST_SRE	regexp\testdata\testregex.c	75;"	d	file:
TEST_SUB	regexp\testdata\testregex.c	81;"	d	file:
TEST_SUMMARY	regexp\testdata\testregex.c	95;"	d	file:
TEST_UNSPECIFIED	regexp\testdata\testregex.c	82;"	d	file:
TEST_VERBOSE	regexp\testdata\testregex.c	102;"	d	file:
TEST_VERIFY	regexp\testdata\testregex.c	83;"	d	file:
_REG_subcomp	regexp\testdata\testregex.c	67;"	d	file:
bad	regexp\testdata\testregex.c	/^bad(char* comment, char* re, char* s, int len, unsigned long test)$/;"	f	file:
catchfree	regexp\testdata\testregex.c	/^catchfree(regex_t* preg, int flags, int* tabs, char* spec, char* re, char* s, char* ans, char* msg, char* accept, regmatch_t* match, int nmatch, int nsub, unsigned long skip, unsigned long level, unsigned long test)$/;"	f	file:
code	regexp\testdata\testregex.c	/^static const struct { int code; char* name; } codes[] =$/;"	m	struct:__anon1	file:
codes	regexp\testdata\testregex.c	/^static const struct { int code; char* name; } codes[] =$/;"	v	typeref:struct:__anon1	file:
compf	regexp\testdata\testregex.c	/^compf(const regex_t* re, const char* xstr, size_t xlen, regdisc_t* disc)$/;"	f	file:
disc	regexp\testdata\testregex.c	/^	Disc_t		disc;$/;"	m	struct:__anon2	file:
disc	regexp\testdata\testregex.c	/^	regdisc_t	disc;$/;"	m	struct:Disc_s	file:
elementsof	regexp\testdata\testregex.c	308;"	d	file:
error	regexp\testdata\testregex.c	/^error(regex_t* preg, int code)$/;"	f	file:
errors	regexp\testdata\testregex.c	/^	int		errors;$/;"	m	struct:__anon2	file:
escape	regexp\testdata\testregex.c	/^escape(char* s)$/;"	f	file:
execf	regexp\testdata\testregex.c	/^execf(const regex_t* re, void* data, const char* xstr, size_t xlen, const char* sstr, size_t slen, char** snxt, regdisc_t* disc)$/;"	f	file:
expand	regexp\testdata\testregex.c	/^expand(char* os, char* ot)$/;"	f	file:
extract	regexp\testdata\testregex.c	/^extract(int* tabs, char* spec, char* re, char* s, char* ans, char* msg, char* accept, regmatch_t* match, int nmatch, int nsub, unsigned long skip, unsigned long level, unsigned long test)$/;"	f	file:
extracted	regexp\testdata\testregex.c	/^	int		extracted;$/;"	m	struct:__anon2	file:
file	regexp\testdata\testregex.c	/^	char*		file;$/;"	m	struct:__anon2	file:
getline	regexp\testdata\testregex.c	/^getline(FILE* fp)$/;"	f	file:
gotcha	regexp\testdata\testregex.c	/^	jmp_buf		gotcha;$/;"	m	struct:__anon2	file:
gotcha	regexp\testdata\testregex.c	/^gotcha(int sig)$/;"	f	file:
help	regexp\testdata\testregex.c	/^help(int html)$/;"	f	file:
id	regexp\testdata\testregex.c	/^static const char id[] = "\\n@(#)$Id: testregex (AT&T Research) 2010-06-10 $\\0\\n";$/;"	v	file:
ignored	regexp\testdata\testregex.c	/^	int		ignored;$/;"	m	struct:__anon2	file:
lineno	regexp\testdata\testregex.c	/^	int		lineno;$/;"	m	struct:__anon2	file:
main	regexp\testdata\testregex.c	/^main(int argc, char** argv)$/;"	f
matchcheck	regexp\testdata\testregex.c	/^matchcheck(regmatch_t* match, int nmatch, int nsub, char* ans, char* re, char* s, int len, int flags, unsigned long test)$/;"	f	file:
matchoffprint	regexp\testdata\testregex.c	/^matchoffprint(int off)$/;"	f	file:
matchprint	regexp\testdata\testregex.c	/^matchprint(regmatch_t* match, int nmatch, int nsub, char* ans, unsigned long test)$/;"	f	file:
name	regexp\testdata\testregex.c	/^static const struct { int code; char* name; } codes[] =$/;"	m	struct:__anon1	file:
note	regexp\testdata\testregex.c	/^note(unsigned long level, char* msg, unsigned long skip, unsigned long test)$/;"	f	file:
ordinal	regexp\testdata\testregex.c	/^	int		ordinal;$/;"	m	struct:Disc_s	file:
passed	regexp\testdata\testregex.c	/^	int		passed;$/;"	m	struct:__anon2	file:
quote	regexp\testdata\testregex.c	/^quote(char* s, int len, unsigned long test)$/;"	f	file:
report	regexp\testdata\testregex.c	/^report(char* comment, char* fun, char* re, char* s, int len, char* msg, int flags, unsigned long test)$/;"	f	file:
resizef	regexp\testdata\testregex.c	/^resizef(void* handle, void* data, size_t size)$/;"	f	file:
signals	regexp\testdata\testregex.c	/^	int		signals;$/;"	m	struct:__anon2	file:
sigunblock	regexp\testdata\testregex.c	/^sigunblock(int s)$/;"	f	file:
sp	regexp\testdata\testregex.c	/^	Sfio_t*		sp;$/;"	m	struct:Disc_s	file:
stack	regexp\testdata\testregex.c	/^	char*		stack;$/;"	m	struct:__anon2	file:
state	regexp\testdata\testregex.c	/^} state;$/;"	v	typeref:struct:__anon2	file:
streq	regexp\testdata\testregex.c	312;"	d	file:
ts	regexp\testdata\testregex.c	/^static char		ts[] = "\\t\\t\\t\\t\\t\\t\\t";$/;"	v	file:
unspecified	regexp\testdata\testregex.c	/^	int		unspecified;$/;"	m	struct:__anon2	file:
unsupported	regexp\testdata\testregex.c	/^static const char* unsupported[] =$/;"	v	file:
verify	regexp\testdata\testregex.c	/^	int		verify;$/;"	m	struct:__anon2	file:
warnings	regexp\testdata\testregex.c	/^	int		warnings;$/;"	m	struct:__anon2	file:
which	regexp\testdata\testregex.c	/^	char*		which;$/;"	m	struct:__anon2	file:
M0	runtime\alg.c	9;"	d	file:
M1	runtime\alg.c	10;"	d	file:
aeskeysched	runtime\alg.c	/^byte runtime·aeskeysched[HashRandomBytes];$/;"	v
algarray	runtime\alg.c	/^runtime·algarray[] =$/;"	v
bytesHash	runtime\alg.c	/^void runtime·bytesHash(Slice s, uintptr seed, uintptr res) {$/;"	f
c128equal	runtime\alg.c	/^runtime·c128equal(bool *eq, uintptr s, void *a, void *b)$/;"	f
c128hash	runtime\alg.c	/^runtime·c128hash(uintptr *h, uintptr s, void *a)$/;"	f
c64equal	runtime\alg.c	/^runtime·c64equal(bool *eq, uintptr s, void *a, void *b)$/;"	f
c64hash	runtime\alg.c	/^runtime·c64hash(uintptr *h, uintptr s, void *a)$/;"	f
equal	runtime\alg.c	/^runtime·equal(Type *t, ...)$/;"	f
f32equal	runtime\alg.c	/^runtime·f32equal(bool *eq, uintptr s, void *a, void *b)$/;"	f
f32hash	runtime\alg.c	/^runtime·f32hash(uintptr *h, uintptr s, void *a)$/;"	f
f64equal	runtime\alg.c	/^runtime·f64equal(bool *eq, uintptr s, void *a, void *b)$/;"	f
f64hash	runtime\alg.c	/^runtime·f64hash(uintptr *h, uintptr s, void *a)$/;"	f
hashinit	runtime\alg.c	/^runtime·hashinit(void)$/;"	f
haveGoodHash	runtime\alg.c	/^void runtime·haveGoodHash(bool res) {$/;"	f
int32Hash	runtime\alg.c	/^void runtime·int32Hash(uint32 i, uintptr seed, uintptr res) {$/;"	f
int64Hash	runtime\alg.c	/^void runtime·int64Hash(uint64 i, uintptr seed, uintptr res) {$/;"	f
intercopy	runtime\alg.c	/^runtime·intercopy(uintptr s, void *a, void *b)$/;"	f
interequal	runtime\alg.c	/^runtime·interequal(bool *eq, uintptr s, void *a, void *b)$/;"	f
interhash	runtime\alg.c	/^runtime·interhash(uintptr *h, uintptr s, void *a)$/;"	f
interprint	runtime\alg.c	/^runtime·interprint(uintptr s, void *a)$/;"	f
memcopy	runtime\alg.c	/^runtime·memcopy(uintptr s, void *a, void *b)$/;"	f
memcopy0	runtime\alg.c	/^runtime·memcopy0(uintptr s, void *a, void *b)$/;"	f
memcopy128	runtime\alg.c	/^runtime·memcopy128(uintptr s, void *a, void *b)$/;"	f
memcopy16	runtime\alg.c	/^runtime·memcopy16(uintptr s, void *a, void *b)$/;"	f
memcopy32	runtime\alg.c	/^runtime·memcopy32(uintptr s, void *a, void *b)$/;"	f
memcopy64	runtime\alg.c	/^runtime·memcopy64(uintptr s, void *a, void *b)$/;"	f
memcopy8	runtime\alg.c	/^runtime·memcopy8(uintptr s, void *a, void *b)$/;"	f
memequal	runtime\alg.c	/^runtime·memequal(bool *eq, uintptr s, void *a, void *b)$/;"	f
memequal0	runtime\alg.c	/^runtime·memequal0(bool *eq, uintptr s, void *a, void *b)$/;"	f
memequal128	runtime\alg.c	/^runtime·memequal128(bool *eq, uintptr s, void *a, void *b)$/;"	f
memequal16	runtime\alg.c	/^runtime·memequal16(bool *eq, uintptr s, void *a, void *b)$/;"	f
memequal32	runtime\alg.c	/^runtime·memequal32(bool *eq, uintptr s, void *a, void *b)$/;"	f
memequal64	runtime\alg.c	/^runtime·memequal64(bool *eq, uintptr s, void *a, void *b)$/;"	f
memequal8	runtime\alg.c	/^runtime·memequal8(bool *eq, uintptr s, void *a, void *b)$/;"	f
memhash	runtime\alg.c	/^runtime·memhash(uintptr *h, uintptr s, void *a)$/;"	f
memprint	runtime\alg.c	/^runtime·memprint(uintptr s, void *a)$/;"	f
nilintercopy	runtime\alg.c	/^runtime·nilintercopy(uintptr s, void *a, void *b)$/;"	f
nilinterequal	runtime\alg.c	/^runtime·nilinterequal(bool *eq, uintptr s, void *a, void *b)$/;"	f
nilinterhash	runtime\alg.c	/^runtime·nilinterhash(uintptr *h, uintptr s, void *a)$/;"	f
nilinterprint	runtime\alg.c	/^runtime·nilinterprint(uintptr s, void *a)$/;"	f
noequal	runtime\alg.c	/^runtime·noequal(bool *eq, uintptr s, void *a, void *b)$/;"	f
nohash	runtime\alg.c	/^runtime·nohash(uintptr *h, uintptr s, void *a)$/;"	f
slicecopy	runtime\alg.c	/^runtime·slicecopy(uintptr s, void *a, void *b)$/;"	f
strcopy	runtime\alg.c	/^runtime·strcopy(uintptr s, void *a, void *b)$/;"	f
strequal	runtime\alg.c	/^runtime·strequal(bool *eq, uintptr s, void *a, void *b)$/;"	f
strhash	runtime\alg.c	/^runtime·strhash(uintptr *h, uintptr s, void *a)$/;"	f
stringHash	runtime\alg.c	/^void runtime·stringHash(String s, uintptr seed, uintptr res) {$/;"	f
strprint	runtime\alg.c	/^runtime·strprint(uintptr s, void *a)$/;"	f
use_aeshash	runtime\alg.c	/^static bool use_aeshash;$/;"	v	file:
BigEndian	runtime\arch_386.h	/^	BigEndian = 0,$/;"	e	enum:__anon3
CacheLineSize	runtime\arch_386.h	/^	CacheLineSize = 64,$/;"	e	enum:__anon3
PCQuantum	runtime\arch_386.h	/^	PCQuantum = 1$/;"	e	enum:__anon3
RuntimeGogoBytes	runtime\arch_386.h	/^	RuntimeGogoBytes = 64,$/;"	e	enum:__anon3
thechar	runtime\arch_386.h	/^	thechar = '8',$/;"	e	enum:__anon3
BigEndian	runtime\arch_amd64.h	/^	BigEndian = 0,$/;"	e	enum:__anon4
CacheLineSize	runtime\arch_amd64.h	/^	CacheLineSize = 64,$/;"	e	enum:__anon4
PCQuantum	runtime\arch_amd64.h	/^	PCQuantum = 1$/;"	e	enum:__anon4
RuntimeGogoBytes	runtime\arch_amd64.h	/^	RuntimeGogoBytes = 64,$/;"	e	enum:__anon4
thechar	runtime\arch_amd64.h	/^	thechar = '6',$/;"	e	enum:__anon4
BigEndian	runtime\arch_arm.h	/^	BigEndian = 0,$/;"	e	enum:__anon5
CacheLineSize	runtime\arch_arm.h	/^	CacheLineSize = 32,$/;"	e	enum:__anon5
PCQuantum	runtime\arch_arm.h	/^	PCQuantum = 4$/;"	e	enum:__anon5
RuntimeGogoBytes	runtime\arch_arm.h	/^	RuntimeGogoBytes = 80,$/;"	e	enum:__anon5
thechar	runtime\arch_arm.h	/^	thechar = '5',$/;"	e	enum:__anon5
BSWAPL	runtime\asm_386.s	/^	BSWAPL	DI$/;"	d
CALL	runtime\asm_386.s	/^	CALL	DI$/;"	d
CALLFN	runtime\asm_386.s	/^#define CALLFN(NAME,MAXSIZE)			\\$/;"	d
DATA	runtime\asm_386.s	/^DATA	runtime·main·f+0(SB)\/4,$runtime·main(SB)$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x00(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x04(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x08(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x0c(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x10(SB)\/4, $0x000000ff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x14(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x18(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x1c(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x20(SB)\/4, $0x0000ffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x24(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x28(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x2c(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x30(SB)\/4, $0x00ffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x34(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x38(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x3c(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x40(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x44(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x48(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x4c(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x50(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x54(SB)\/4, $0x000000ff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x58(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x5c(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x60(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x64(SB)\/4, $0x0000ffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x68(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x6c(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x70(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x74(SB)\/4, $0x00ffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x78(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x7c(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x80(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x84(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x88(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x8c(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x90(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x94(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x98(SB)\/4, $0x000000ff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0x9c(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0xa0(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0xa4(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0xa8(SB)\/4, $0x0000ffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0xac(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0xb0(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0xb4(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0xb8(SB)\/4, $0x00ffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0xbc(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0xc0(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0xc4(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0xc8(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0xcc(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0xd0(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0xd4(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0xd8(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0xdc(SB)\/4, $0x000000ff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0xe0(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0xe4(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0xe8(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0xec(SB)\/4, $0x0000ffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0xf0(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0xf4(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0xf8(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA masks<>+0xfc(SB)\/4, $0x00ffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x00(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x04(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x08(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x0c(SB)\/4, $0x00000000$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x10(SB)\/4, $0xffffff0f$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x14(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x18(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x1c(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x20(SB)\/4, $0xffff0f0e$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x24(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x28(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x2c(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x30(SB)\/4, $0xff0f0e0d$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x34(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x38(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x3c(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x40(SB)\/4, $0x0f0e0d0c$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x44(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x48(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x4c(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x50(SB)\/4, $0x0e0d0c0b$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x54(SB)\/4, $0xffffff0f$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x58(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x5c(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x60(SB)\/4, $0x0d0c0b0a$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x64(SB)\/4, $0xffff0f0e$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x68(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x6c(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x70(SB)\/4, $0x0c0b0a09$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x74(SB)\/4, $0xff0f0e0d$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x78(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x7c(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x80(SB)\/4, $0x0b0a0908$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x84(SB)\/4, $0x0f0e0d0c$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x88(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x8c(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x90(SB)\/4, $0x0a090807$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x94(SB)\/4, $0x0e0d0c0b$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x98(SB)\/4, $0xffffff0f$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0x9c(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0xa0(SB)\/4, $0x09080706$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0xa4(SB)\/4, $0x0d0c0b0a$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0xa8(SB)\/4, $0xffff0f0e$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0xac(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0xb0(SB)\/4, $0x08070605$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0xb4(SB)\/4, $0x0c0b0a09$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0xb8(SB)\/4, $0xff0f0e0d$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0xbc(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0xc0(SB)\/4, $0x07060504$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0xc4(SB)\/4, $0x0b0a0908$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0xc8(SB)\/4, $0x0f0e0d0c$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0xcc(SB)\/4, $0xffffffff$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0xd0(SB)\/4, $0x06050403$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0xd4(SB)\/4, $0x0a090807$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0xd8(SB)\/4, $0x0e0d0c0b$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0xdc(SB)\/4, $0xffffff0f$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0xe0(SB)\/4, $0x05040302$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0xe4(SB)\/4, $0x09080706$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0xe8(SB)\/4, $0x0d0c0b0a$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0xec(SB)\/4, $0xffff0f0e$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0xf0(SB)\/4, $0x04030201$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0xf4(SB)\/4, $0x08070605$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0xf8(SB)\/4, $0x0c0b0a09$/;"	l
DATA	runtime\asm_386.s	/^DATA shifts<>+0xfc(SB)\/4, $0xff0f0e0d$/;"	l
DISPATCH	runtime\asm_386.s	/^#define DISPATCH(NAME,MAXSIZE)		\\$/;"	d
GLOBL	runtime\asm_386.s	/^GLOBL	runtime·main·f(SB),RODATA,$4$/;"	l
GLOBL	runtime\asm_386.s	/^GLOBL masks<>(SB),RODATA,$256$/;"	l
GLOBL	runtime\asm_386.s	/^GLOBL runtime·tls0(SB), $32$/;"	l
GLOBL	runtime\asm_386.s	/^GLOBL shifts<>(SB),RODATA,$256$/;"	l
TEXT	runtime\asm_386.s	/^TEXT _rt0_go(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\asm_386.s	/^TEXT bytes·Compare(SB),NOSPLIT,$0-28$/;"	l
TEXT	runtime\asm_386.s	/^TEXT bytes·Equal(SB),NOSPLIT,$0-25$/;"	l
TEXT	runtime\asm_386.s	/^TEXT bytes·IndexByte(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\asm_386.s	/^TEXT gosave<>(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\asm_386.s	/^TEXT reflect·call(SB), NOSPLIT, $0-12$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·NAME(SB), WRAPPER, $MAXSIZE-12;		\\$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·abort(SB),NOSPLIT,$0-0$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·aeshash(SB),NOSPLIT,$0-12$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·aeshash32(SB),NOSPLIT,$0-12$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·aeshash64(SB),NOSPLIT,$0-12$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·aeshashbody(SB),NOSPLIT,$0-12$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·aeshashstr(SB),NOSPLIT,$0-12$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·asmcgocall(SB),NOSPLIT,$0-8$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·asminit(SB),NOSPLIT,$0-0$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·atomicload64(SB), NOSPLIT, $0-8$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·atomicstore(SB), NOSPLIT, $0-8$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·atomicstore64(SB), NOSPLIT, $0-12$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·atomicstorep(SB), NOSPLIT, $0-8$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·breakpoint(SB),NOSPLIT,$0-0$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·cas(SB), NOSPLIT, $0-12$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·cas64(SB), NOSPLIT, $0-20$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·casp(SB), NOSPLIT, $0-12$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·cgocallback(SB),NOSPLIT,$12-12$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·cgocallback_gofunc(SB),NOSPLIT,$12-12$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·cmpbody(SB),NOSPLIT,$0-0$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·cmpstring(SB),NOSPLIT,$0-20$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·cputicks(SB),NOSPLIT,$0-4$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·emptyfunc(SB),0,$0-0$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·getcallerpc(SB),NOSPLIT,$0-4$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·getcallersp(SB), NOSPLIT, $0-4$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·gogo(SB), NOSPLIT, $0-4$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·gosave(SB), NOSPLIT, $0-4$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·jmpdefer(SB), NOSPLIT, $0-8$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·ldt0setup(SB),NOSPLIT,$16-0$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·lessstack(SB), NOSPLIT, $0-0$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·mcall(SB), NOSPLIT, $0-4$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·memclr(SB),NOSPLIT,$0-8$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·memeq(SB),NOSPLIT,$0-12$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·memeqbody(SB),NOSPLIT,$0-0$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·morestack(SB),NOSPLIT,$0-0$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·newstackcall(SB), NOSPLIT, $0-12$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·procyield(SB),NOSPLIT,$0-0$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·setcallerpc(SB),NOSPLIT,$0-8$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·setmg(SB), NOSPLIT, $0-8$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·stackcheck(SB), NOSPLIT, $0-0$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·stackguard(SB),NOSPLIT,$0-8$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·xadd(SB), NOSPLIT, $0-8$/;"	l
TEXT	runtime\asm_386.s	/^TEXT runtime·xchg(SB), NOSPLIT, $0-8$/;"	l
TEXT	runtime\asm_386.s	/^TEXT setmg_gcc<>(SB), NOSPLIT, $0$/;"	l
TEXT	runtime\asm_386.s	/^TEXT strings·IndexByte(SB),NOSPLIT,$0$/;"	l
aesloop	runtime\asm_386.s	/^aesloop:$/;"	l
aesloopend	runtime\asm_386.s	/^aesloopend:$/;"	l
aessmall	runtime\asm_386.s	/^aessmall:$/;"	l
again	runtime\asm_386.s	/^again:$/;"	l
bigloop	runtime\asm_386.s	/^bigloop:$/;"	l
cas64_fail	runtime\asm_386.s	/^cas64_fail:$/;"	l
cmp_0through4	runtime\asm_386.s	/^cmp_0through4:$/;"	l
cmp_allsame	runtime\asm_386.s	/^cmp_allsame:$/;"	l
cmp_di_finish	runtime\asm_386.s	/^cmp_di_finish:$/;"	l
cmp_di_high	runtime\asm_386.s	/^cmp_di_high:$/;"	l
cmp_diff16	runtime\asm_386.s	/^cmp_diff16:$/;"	l
cmp_diff4	runtime\asm_386.s	/^cmp_diff4:$/;"	l
cmp_largeloop	runtime\asm_386.s	/^cmp_largeloop:$/;"	l
cmp_mediumloop	runtime\asm_386.s	/^cmp_mediumloop:$/;"	l
cmp_si_finish	runtime\asm_386.s	/^cmp_si_finish:$/;"	l
cmp_si_high	runtime\asm_386.s	/^cmp_si_high:$/;"	l
cmp_small	runtime\asm_386.s	/^cmp_small:$/;"	l
di_finish	runtime\asm_386.s	/^di_finish:$/;"	l
di_high	runtime\asm_386.s	/^di_high:$/;"	l
eqret	runtime\asm_386.s	/^eqret:$/;"	l
equal	runtime\asm_386.s	/^equal:$/;"	l
finalize	runtime\asm_386.s	/^finalize:	$/;"	l
havem	runtime\asm_386.s	/^havem:$/;"	l
highpartial	runtime\asm_386.s	/^highpartial:$/;"	l
hugeloop	runtime\asm_386.s	/^hugeloop:$/;"	l
leftover	runtime\asm_386.s	/^leftover:$/;"	l
needm	runtime\asm_386.s	/^needm:$/;"	l
needtls	runtime\asm_386.s	/^needtls:$/;"	l
nocpuinfo	runtime\asm_386.s	/^nocpuinfo:	$/;"	l
ok	runtime\asm_386.s	/^ok:$/;"	l
partial	runtime\asm_386.s	/^partial:$/;"	l
settls	runtime\asm_386.s	/^settls:$/;"	l
si_finish	runtime\asm_386.s	/^si_finish:$/;"	l
si_high	runtime\asm_386.s	/^si_high:$/;"	l
small	runtime\asm_386.s	/^small:$/;"	l
BSWAPQ	runtime\asm_amd64.s	/^	BSWAPQ	DI$/;"	d
CALL	runtime\asm_amd64.s	/^	CALL	DI$/;"	d
CALLFN	runtime\asm_amd64.s	/^#define CALLFN(NAME,MAXSIZE)			\\$/;"	d
DATA	runtime\asm_amd64.s	/^DATA	runtime·main·f+0(SB)\/8,$runtime·main(SB)$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0x00(SB)\/8, $0x0000000000000000$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0x08(SB)\/8, $0x0000000000000000$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0x10(SB)\/8, $0x00000000000000ff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0x18(SB)\/8, $0x0000000000000000$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0x20(SB)\/8, $0x000000000000ffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0x28(SB)\/8, $0x0000000000000000$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0x30(SB)\/8, $0x0000000000ffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0x38(SB)\/8, $0x0000000000000000$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0x40(SB)\/8, $0x00000000ffffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0x48(SB)\/8, $0x0000000000000000$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0x50(SB)\/8, $0x000000ffffffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0x58(SB)\/8, $0x0000000000000000$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0x60(SB)\/8, $0x0000ffffffffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0x68(SB)\/8, $0x0000000000000000$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0x70(SB)\/8, $0x00ffffffffffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0x78(SB)\/8, $0x0000000000000000$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0x80(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0x88(SB)\/8, $0x0000000000000000$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0x90(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0x98(SB)\/8, $0x00000000000000ff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0xa0(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0xa8(SB)\/8, $0x000000000000ffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0xb0(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0xb8(SB)\/8, $0x0000000000ffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0xc0(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0xc8(SB)\/8, $0x00000000ffffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0xd0(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0xd8(SB)\/8, $0x000000ffffffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0xe0(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0xe8(SB)\/8, $0x0000ffffffffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0xf0(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA masks<>+0xf8(SB)\/8, $0x00ffffffffffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0x00(SB)\/8, $0x0000000000000000$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0x08(SB)\/8, $0x0000000000000000$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0x10(SB)\/8, $0xffffffffffffff0f$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0x18(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0x20(SB)\/8, $0xffffffffffff0f0e$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0x28(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0x30(SB)\/8, $0xffffffffff0f0e0d$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0x38(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0x40(SB)\/8, $0xffffffff0f0e0d0c$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0x48(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0x50(SB)\/8, $0xffffff0f0e0d0c0b$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0x58(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0x60(SB)\/8, $0xffff0f0e0d0c0b0a$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0x68(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0x70(SB)\/8, $0xff0f0e0d0c0b0a09$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0x78(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0x80(SB)\/8, $0x0f0e0d0c0b0a0908$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0x88(SB)\/8, $0xffffffffffffffff$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0x90(SB)\/8, $0x0e0d0c0b0a090807$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0x98(SB)\/8, $0xffffffffffffff0f$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0xa0(SB)\/8, $0x0d0c0b0a09080706$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0xa8(SB)\/8, $0xffffffffffff0f0e$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0xb0(SB)\/8, $0x0c0b0a0908070605$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0xb8(SB)\/8, $0xffffffffff0f0e0d$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0xc0(SB)\/8, $0x0b0a090807060504$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0xc8(SB)\/8, $0xffffffff0f0e0d0c$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0xd0(SB)\/8, $0x0a09080706050403$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0xd8(SB)\/8, $0xffffff0f0e0d0c0b$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0xe0(SB)\/8, $0x0908070605040302$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0xe8(SB)\/8, $0xffff0f0e0d0c0b0a$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0xf0(SB)\/8, $0x0807060504030201$/;"	l
DATA	runtime\asm_amd64.s	/^DATA shifts<>+0xf8(SB)\/8, $0xff0f0e0d0c0b0a09$/;"	l
DISPATCH	runtime\asm_amd64.s	/^#define DISPATCH(NAME,MAXSIZE)		\\$/;"	d
GLOBL	runtime\asm_amd64.s	/^GLOBL	runtime·main·f(SB),RODATA,$8$/;"	l
GLOBL	runtime\asm_amd64.s	/^GLOBL masks<>(SB),RODATA,$256$/;"	l
GLOBL	runtime\asm_amd64.s	/^GLOBL runtime·tls0(SB), $64$/;"	l
GLOBL	runtime\asm_amd64.s	/^GLOBL shifts<>(SB),RODATA,$256$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT _rt0_go(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT bytes·Compare(SB),NOSPLIT,$0-56$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT bytes·Equal(SB),NOSPLIT,$0-49$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT bytes·IndexByte(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT gosave<>(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT morestack<>(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT reflect·call(SB), NOSPLIT, $0-20$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·NAME(SB), WRAPPER, $MAXSIZE-20;		\\$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·aeshash(SB),NOSPLIT,$0-24$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·aeshash32(SB),NOSPLIT,$0-24$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·aeshash64(SB),NOSPLIT,$0-24$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·aeshashbody(SB),NOSPLIT,$0-24$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·aeshashstr(SB),NOSPLIT,$0-24$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·asmcgocall(SB),NOSPLIT,$0-16$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·asminit(SB),NOSPLIT,$0-0$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·atomicstore(SB), NOSPLIT, $0-12$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·atomicstore64(SB), NOSPLIT, $0-16$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·atomicstorep(SB), NOSPLIT, $0-16$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·breakpoint(SB),NOSPLIT,$0-0$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·cas(SB), NOSPLIT, $0-16$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·cas64(SB), NOSPLIT, $0-24$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·casp(SB), NOSPLIT, $0-24$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·cgocallback(SB),NOSPLIT,$24-24$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·cgocallback_gofunc(SB),NOSPLIT,$8-24$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·cmpbody(SB),NOSPLIT,$0-0$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·cmpstring(SB),NOSPLIT,$0-40$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·cputicks(SB),NOSPLIT,$0-0$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·getcallerpc(SB),NOSPLIT,$0-8$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·getcallersp(SB),NOSPLIT,$0-8$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·gogo(SB), NOSPLIT, $0-8$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·gosave(SB), NOSPLIT, $0-8$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·indexbytebody(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·jmpdefer(SB), NOSPLIT, $0-16$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·lessstack(SB), NOSPLIT, $0-0$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·mcall(SB), NOSPLIT, $0-8$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·memclr(SB),NOSPLIT,$0-16$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·memeq(SB),NOSPLIT,$0-24$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·memeqbody(SB),NOSPLIT,$0-0$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·morestack(SB),NOSPLIT,$0-0$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·morestack00(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·morestack01(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·morestack10(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·morestack11(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·morestack16(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·morestack24(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·morestack32(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·morestack40(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·morestack48(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·morestack8(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·newstackcall(SB), NOSPLIT, $0-20$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·procyield(SB),NOSPLIT,$0-0$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·setcallerpc(SB),NOSPLIT,$0-16$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·setmg(SB), NOSPLIT, $0-16$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·stackcheck(SB), NOSPLIT, $0-0$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·stackguard(SB),NOSPLIT,$0-16$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·xadd(SB), NOSPLIT, $0-12$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·xadd64(SB), NOSPLIT, $0-16$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·xchg(SB), NOSPLIT, $0-12$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT runtime·xchg64(SB), NOSPLIT, $0-16$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT setmg_gcc<>(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\asm_amd64.s	/^TEXT strings·IndexByte(SB),NOSPLIT,$0$/;"	l
aesloop	runtime\asm_amd64.s	/^aesloop:$/;"	l
aesloopend	runtime\asm_amd64.s	/^aesloopend:$/;"	l
aessmall	runtime\asm_amd64.s	/^aessmall:$/;"	l
again	runtime\asm_amd64.s	/^again:$/;"	l
aligned	runtime\asm_amd64.s	/^aligned:$/;"	l
bigloop	runtime\asm_amd64.s	/^bigloop:$/;"	l
cas64_fail	runtime\asm_amd64.s	/^cas64_fail:$/;"	l
cmp_0through16	runtime\asm_amd64.s	/^cmp_0through16:$/;"	l
cmp_0through8	runtime\asm_amd64.s	/^cmp_0through8:$/;"	l
cmp_allsame	runtime\asm_amd64.s	/^cmp_allsame:$/;"	l
cmp_di_finish	runtime\asm_amd64.s	/^cmp_di_finish:$/;"	l
cmp_di_high	runtime\asm_amd64.s	/^cmp_di_high:$/;"	l
cmp_diff16	runtime\asm_amd64.s	/^cmp_diff16:$/;"	l
cmp_diff8	runtime\asm_amd64.s	/^cmp_diff8:$/;"	l
cmp_loop	runtime\asm_amd64.s	/^cmp_loop:$/;"	l
cmp_si_finish	runtime\asm_amd64.s	/^cmp_si_finish:$/;"	l
cmp_si_high	runtime\asm_amd64.s	/^cmp_si_high:$/;"	l
cmp_small	runtime\asm_amd64.s	/^cmp_small:$/;"	l
condition	runtime\asm_amd64.s	/^condition:$/;"	l
di_finish	runtime\asm_amd64.s	/^di_finish:$/;"	l
di_high	runtime\asm_amd64.s	/^di_high:$/;"	l
eqret	runtime\asm_amd64.s	/^eqret:$/;"	l
equal	runtime\asm_amd64.s	/^equal:$/;"	l
failure	runtime\asm_amd64.s	/^failure:$/;"	l
finalize	runtime\asm_amd64.s	/^finalize:	$/;"	l
havem	runtime\asm_amd64.s	/^havem:$/;"	l
highpartial	runtime\asm_amd64.s	/^highpartial:$/;"	l
hugeloop	runtime\asm_amd64.s	/^hugeloop:$/;"	l
indexbyte_small	runtime\asm_amd64.s	/^indexbyte_small:$/;"	l
leftover	runtime\asm_amd64.s	/^leftover:$/;"	l
needm	runtime\asm_amd64.s	/^needm:$/;"	l
needtls	runtime\asm_amd64.s	/^needtls:$/;"	l
nocpuinfo	runtime\asm_amd64.s	/^nocpuinfo:	$/;"	l
ok	runtime\asm_amd64.s	/^ok:$/;"	l
partial	runtime\asm_amd64.s	/^partial:$/;"	l
settls	runtime\asm_amd64.s	/^settls:$/;"	l
si_finish	runtime\asm_amd64.s	/^si_finish:$/;"	l
si_high	runtime\asm_amd64.s	/^si_high:$/;"	l
small	runtime\asm_amd64.s	/^small:$/;"	l
sse	runtime\asm_amd64.s	/^sse:$/;"	l
ssesuccess	runtime\asm_amd64.s	/^ssesuccess:$/;"	l
success	runtime\asm_amd64.s	/^success:$/;"	l
CALLFN	runtime\asm_arm.s	/^#define CALLFN(NAME,MAXSIZE)			\\$/;"	d
DATA	runtime\asm_arm.s	/^DATA	runtime·main·f+0(SB)\/4,$runtime·main(SB)$/;"	l
DISPATCH	runtime\asm_arm.s	/^#define DISPATCH(NAME,MAXSIZE)		\\$/;"	d
GLOBL	runtime\asm_arm.s	/^GLOBL	runtime·main·f(SB),RODATA,$4$/;"	l
GLOBL	runtime\asm_arm.s	/^GLOBL runtime·goarm(SB), $4$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT	runtime·asmcgocall(SB),NOSPLIT,$0-8$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT	runtime·cgocallback_gofunc(SB),NOSPLIT,$8-12$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT _rt0_go(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT bytes·Equal(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT bytes·IndexByte(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT gosave<>(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT reflect·call(SB), NOSPLIT, $-4-12$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·NAME(SB), WRAPPER, $MAXSIZE-12;		\\$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·abort(SB),NOSPLIT,$-4-0$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·aeshash(SB),NOSPLIT,$-4-0$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·aeshash32(SB),NOSPLIT,$-4-0$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·aeshash64(SB),NOSPLIT,$-4-0$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·aeshashstr(SB),NOSPLIT,$-4-0$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·armcas(SB),NOSPLIT,$0-12$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·asminit(SB),NOSPLIT,$0-0$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·breakpoint(SB),NOSPLIT,$0-0$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·cgocallback(SB),NOSPLIT,$12-12$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·emptyfunc(SB),0,$0-0$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·getcallerpc(SB),NOSPLIT,$-4-4$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·getcallersp(SB),NOSPLIT,$-4-4$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·gogo(SB), NOSPLIT, $-4-4$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·gosave(SB), NOSPLIT, $-4-4$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·jmpdefer(SB), NOSPLIT, $0-8$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·lessstack(SB), NOSPLIT, $-4-0$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·load_gm(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·mcall(SB), NOSPLIT, $-4-4$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·memeq(SB),NOSPLIT,$-4-12$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·morestack(SB),NOSPLIT,$-4-0$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·newstackcall(SB), NOSPLIT, $-4-12$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·save_gm(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·setcallerpc(SB),NOSPLIT,$-4-8$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·setmg(SB), NOSPLIT, $0-8$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT runtime·stackguard(SB),NOSPLIT,$0-8$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT setmg_gcc<>(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\asm_arm.s	/^TEXT strings·IndexByte(SB),NOSPLIT,$0$/;"	l
_byteseq_next	runtime\asm_arm.s	/^_byteseq_next:$/;"	l
_equal	runtime\asm_arm.s	/^_equal:$/;"	l
_loop	runtime\asm_arm.s	/^_loop:$/;"	l
_next	runtime\asm_arm.s	/^_next:$/;"	l
_notequal	runtime\asm_arm.s	/^_notequal:$/;"	l
_notfound	runtime\asm_arm.s	/^_notfound:$/;"	l
_sib_loop	runtime\asm_arm.s	/^_sib_loop:$/;"	l
_sib_notfound	runtime\asm_arm.s	/^_sib_notfound:$/;"	l
casfail	runtime\asm_arm.s	/^casfail:$/;"	l
casl	runtime\asm_arm.s	/^casl:$/;"	l
havem	runtime\asm_arm.s	/^havem:$/;"	l
nocgo	runtime\asm_arm.s	/^nocgo:$/;"	l
atomicload	runtime\atomic_386.c	/^runtime·atomicload(uint32 volatile* addr)$/;"	f
atomicloadp	runtime\atomic_386.c	/^runtime·atomicloadp(void* volatile* addr)$/;"	f
xadd64	runtime\atomic_386.c	/^runtime·xadd64(uint64 volatile* addr, int64 v)$/;"	f
xchg64	runtime\atomic_386.c	/^runtime·xchg64(uint64 volatile* addr, uint64 v)$/;"	f
atomicload	runtime\atomic_amd64.c	/^runtime·atomicload(uint32 volatile* addr)$/;"	f
atomicload64	runtime\atomic_amd64.c	/^runtime·atomicload64(uint64 volatile* addr)$/;"	f
atomicloadp	runtime\atomic_amd64.c	/^runtime·atomicloadp(void* volatile* addr)$/;"	f
LOCK	runtime\atomic_arm.c	14;"	d	file:
atomicload	runtime\atomic_arm.c	/^runtime·atomicload(uint32 volatile* addr)$/;"	f
atomicload64	runtime\atomic_arm.c	/^runtime·atomicload64(uint64 volatile *addr)$/;"	f
atomicloadp	runtime\atomic_arm.c	/^runtime·atomicloadp(void* volatile* addr)$/;"	f
atomicstore	runtime\atomic_arm.c	/^runtime·atomicstore(uint32 volatile* addr, uint32 v)$/;"	f
atomicstore64	runtime\atomic_arm.c	/^runtime·atomicstore64(uint64 volatile *addr, uint64 v)$/;"	f
atomicstorep	runtime\atomic_arm.c	/^runtime·atomicstorep(void* volatile* addr, void* v)$/;"	f
cas64	runtime\atomic_arm.c	/^runtime·cas64(uint64 volatile *addr, uint64 old, uint64 new)$/;"	f
l	runtime\atomic_arm.c	/^	Lock l;$/;"	m	struct:__anon6	file:
locktab	runtime\atomic_arm.c	/^} locktab[57];$/;"	v	typeref:struct:__anon6	file:
pad	runtime\atomic_arm.c	/^	byte pad[CacheLineSize-sizeof(Lock)];$/;"	m	struct:__anon6	file:
procyield	runtime\atomic_arm.c	/^runtime·procyield(uint32 cnt)$/;"	f
xadd	runtime\atomic_arm.c	/^runtime·xadd(uint32 volatile *val, int32 delta)$/;"	f
xadd64	runtime\atomic_arm.c	/^runtime·xadd64(uint64 volatile *addr, int64 delta)$/;"	f
xchg	runtime\atomic_arm.c	/^runtime·xchg(uint32 volatile* addr, uint32 v)$/;"	f
xchg64	runtime\atomic_arm.c	/^runtime·xchg64(uint64 volatile *addr, uint64 v)$/;"	f
Callbacks	runtime\callback_windows.c	/^struct	Callbacks {$/;"	s	file:
Callbacks	runtime\callback_windows.c	/^typedef	struct	Callbacks	Callbacks;$/;"	t	typeref:struct:Callbacks	file:
Lock	runtime\callback_windows.c	/^	Lock;$/;"	m	struct:Callbacks	file:
cbctxts	runtime\callback_windows.c	/^WinCallbackContext** runtime·cbctxts; \/\/ to simplify access to cbs.ctxt in sys_windows_*.s$/;"	v
cbs	runtime\callback_windows.c	/^static	Callbacks	cbs;$/;"	v	file:
compilecallback	runtime\callback_windows.c	/^runtime·compilecallback(Eface fn, bool cleanstack)$/;"	f
ctxt	runtime\callback_windows.c	/^	WinCallbackContext*	ctxt[cb_max];$/;"	m	struct:Callbacks	file:
n	runtime\callback_windows.c	/^	int32			n;$/;"	m	struct:Callbacks	file:
POPL	runtime\cgo\asm_386.s	/^	POPL	DI$/;"	d
PUSHL	runtime\cgo\asm_386.s	/^	PUSHL	DI$/;"	d
TEXT	runtime\cgo\asm_386.s	/^TEXT crosscall2(SB),NOSPLIT,$0$/;"	l
CALL	runtime\cgo\asm_amd64.s	/^	CALL	DI	\/* fn *\/$/;"	d
TEXT	runtime\cgo\asm_amd64.s	/^TEXT crosscall2(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\cgo\asm_arm.s	/^TEXT crosscall2(SB),NOSPLIT,$-4$/;"	l
_cgo_allocate	runtime\cgo\callbacks.c	/^_cgo_allocate(void *a, int32 n)$/;"	f
_cgo_allocate_internal	runtime\cgo\callbacks.c	/^_cgo_allocate_internal(uintptr len, byte *ret)$/;"	f	file:
_cgo_free	runtime\cgo\callbacks.c	/^void (*_cgo_free)(void*) = x_cgo_free;$/;"	v
_cgo_init	runtime\cgo\callbacks.c	/^void (*_cgo_init)(G*) = x_cgo_init;$/;"	v
_cgo_malloc	runtime\cgo\callbacks.c	/^void (*_cgo_malloc)(void*) = x_cgo_malloc;$/;"	v
_cgo_panic	runtime\cgo\callbacks.c	/^_cgo_panic(void *a, int32 n)$/;"	f
_cgo_panic_internal	runtime\cgo\callbacks.c	/^_cgo_panic_internal(byte *p)$/;"	f	file:
_cgo_thread_start	runtime\cgo\callbacks.c	/^void (*_cgo_thread_start)(void*) = x_cgo_thread_start;$/;"	v
__progname	runtime\cgo\dragonfly.c	/^char *__progname;$/;"	v
environ	runtime\cgo\dragonfly.c	/^char *environ[1];$/;"	v
__progname	runtime\cgo\freebsd.c	/^char *__progname;$/;"	v
environ	runtime\cgo\freebsd.c	/^char *environ[1];$/;"	v
EXT	runtime\cgo\gcc_386.S	/^#define EXT(s) _##s$/;"	d
EXT	runtime\cgo\gcc_386.S	/^#define EXT(s) s$/;"	d
EXT	runtime\cgo\gcc_amd64.S	/^#define EXT(s) _##s$/;"	d
EXT	runtime\cgo\gcc_amd64.S	/^#define EXT(s) s$/;"	d
EXT	runtime\cgo\gcc_arm.S	/^#define EXT(s) _##s$/;"	d
EXT	runtime\cgo\gcc_arm.S	/^#define EXT(s) s$/;"	d
_cgo_sys_thread_start	runtime\cgo\gcc_darwin_386.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
inittls	runtime\cgo\gcc_darwin_386.c	/^inittls(void)$/;"	f	file:
k1	runtime\cgo\gcc_darwin_386.c	/^static pthread_key_t k1, k2;$/;"	v	file:
k2	runtime\cgo\gcc_darwin_386.c	/^static pthread_key_t k1, k2;$/;"	v	file:
magic1	runtime\cgo\gcc_darwin_386.c	13;"	d	file:
threadentry	runtime\cgo\gcc_darwin_386.c	/^threadentry(void *v)$/;"	f	file:
x_cgo_init	runtime\cgo\gcc_darwin_386.c	/^x_cgo_init(G *g)$/;"	f
_cgo_sys_thread_start	runtime\cgo\gcc_darwin_amd64.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
inittls	runtime\cgo\gcc_darwin_amd64.c	/^inittls(void)$/;"	f	file:
k1	runtime\cgo\gcc_darwin_amd64.c	/^static pthread_key_t k1, k2;$/;"	v	file:
k2	runtime\cgo\gcc_darwin_amd64.c	/^static pthread_key_t k1, k2;$/;"	v	file:
magic1	runtime\cgo\gcc_darwin_amd64.c	13;"	d	file:
threadentry	runtime\cgo\gcc_darwin_amd64.c	/^threadentry(void *v)$/;"	f	file:
x_cgo_init	runtime\cgo\gcc_darwin_amd64.c	/^x_cgo_init(G *g)$/;"	f
_cgo_sys_thread_start	runtime\cgo\gcc_dragonfly_386.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
setmg_gcc	runtime\cgo\gcc_dragonfly_386.c	/^static void (*setmg_gcc)(void*, void*);$/;"	v	file:
threadentry	runtime\cgo\gcc_dragonfly_386.c	/^threadentry(void *v)$/;"	f	file:
x_cgo_init	runtime\cgo\gcc_dragonfly_386.c	/^x_cgo_init(G *g, void (*setmg)(void*, void*))$/;"	f
_cgo_sys_thread_start	runtime\cgo\gcc_dragonfly_amd64.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
setmg_gcc	runtime\cgo\gcc_dragonfly_amd64.c	/^static void (*setmg_gcc)(void*, void*);$/;"	v	file:
threadentry	runtime\cgo\gcc_dragonfly_amd64.c	/^threadentry(void *v)$/;"	f	file:
x_cgo_init	runtime\cgo\gcc_dragonfly_amd64.c	/^x_cgo_init(G *g, void (*setmg)(void*, void*))$/;"	f
_cgo_sys_thread_start	runtime\cgo\gcc_freebsd_386.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
setmg_gcc	runtime\cgo\gcc_freebsd_386.c	/^static void (*setmg_gcc)(void*, void*);$/;"	v	file:
threadentry	runtime\cgo\gcc_freebsd_386.c	/^threadentry(void *v)$/;"	f	file:
x_cgo_init	runtime\cgo\gcc_freebsd_386.c	/^x_cgo_init(G *g, void (*setmg)(void*, void*))$/;"	f
_cgo_sys_thread_start	runtime\cgo\gcc_freebsd_amd64.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
setmg_gcc	runtime\cgo\gcc_freebsd_amd64.c	/^static void (*setmg_gcc)(void*, void*);$/;"	v	file:
threadentry	runtime\cgo\gcc_freebsd_amd64.c	/^threadentry(void *v)$/;"	f	file:
x_cgo_init	runtime\cgo\gcc_freebsd_amd64.c	/^x_cgo_init(G *g, void (*setmg)(void*, void*))$/;"	f
_cgo_sys_thread_start	runtime\cgo\gcc_freebsd_arm.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
setmg_gcc	runtime\cgo\gcc_freebsd_arm.c	/^static void (*setmg_gcc)(void*, void*);$/;"	v	file:
threadentry	runtime\cgo\gcc_freebsd_arm.c	/^threadentry(void *v)$/;"	f	file:
x_cgo_init	runtime\cgo\gcc_freebsd_arm.c	/^x_cgo_init(G *g, void (*setmg)(void*, void*))$/;"	f
_cgo_sys_thread_start	runtime\cgo\gcc_linux_386.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
setmg_gcc	runtime\cgo\gcc_linux_386.c	/^static void (*setmg_gcc)(void*, void*);$/;"	v	file:
threadentry	runtime\cgo\gcc_linux_386.c	/^threadentry(void *v)$/;"	f	file:
x_cgo_init	runtime\cgo\gcc_linux_386.c	/^x_cgo_init(G *g, void (*setmg)(void*, void*))$/;"	f
_cgo_sys_thread_start	runtime\cgo\gcc_linux_amd64.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
setmg_gcc	runtime\cgo\gcc_linux_amd64.c	/^static void (*setmg_gcc)(void*, void*);$/;"	v	file:
threadentry	runtime\cgo\gcc_linux_amd64.c	/^threadentry(void *v)$/;"	f	file:
x_cgo_init	runtime\cgo\gcc_linux_amd64.c	/^x_cgo_init(G* g, void (*setmg)(void*, void*))$/;"	f
_cgo_sys_thread_start	runtime\cgo\gcc_linux_arm.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
setmg_gcc	runtime\cgo\gcc_linux_arm.c	/^static void (*setmg_gcc)(void*, void*);$/;"	v	file:
threadentry	runtime\cgo\gcc_linux_arm.c	/^threadentry(void *v)$/;"	f	file:
x_cgo_init	runtime\cgo\gcc_linux_arm.c	/^x_cgo_init(G *g, void (*setmg)(void*, void*))$/;"	f
_cgo_sys_thread_start	runtime\cgo\gcc_netbsd_386.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
setmg_gcc	runtime\cgo\gcc_netbsd_386.c	/^static void (*setmg_gcc)(void*, void*);$/;"	v	file:
threadentry	runtime\cgo\gcc_netbsd_386.c	/^threadentry(void *v)$/;"	f	file:
x_cgo_init	runtime\cgo\gcc_netbsd_386.c	/^x_cgo_init(G *g, void (*setmg)(void*, void*))$/;"	f
_cgo_sys_thread_start	runtime\cgo\gcc_netbsd_amd64.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
setmg_gcc	runtime\cgo\gcc_netbsd_amd64.c	/^static void (*setmg_gcc)(void*, void*);$/;"	v	file:
threadentry	runtime\cgo\gcc_netbsd_amd64.c	/^threadentry(void *v)$/;"	f	file:
x_cgo_init	runtime\cgo\gcc_netbsd_amd64.c	/^x_cgo_init(G *g, void (*setmg)(void*, void*))$/;"	f
_cgo_sys_thread_start	runtime\cgo\gcc_netbsd_arm.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
setmg_gcc	runtime\cgo\gcc_netbsd_arm.c	/^static void (*setmg_gcc)(void*, void*);$/;"	v	file:
threadentry	runtime\cgo\gcc_netbsd_arm.c	/^threadentry(void *v)$/;"	f	file:
x_cgo_init	runtime\cgo\gcc_netbsd_arm.c	/^x_cgo_init(G *g, void (*setmg)(void*, void*))$/;"	f
TCB_SIZE	runtime\cgo\gcc_openbsd_386.c	18;"	d	file:
TLS_SIZE	runtime\cgo\gcc_openbsd_386.c	19;"	d	file:
_cgo_sys_thread_start	runtime\cgo\gcc_openbsd_386.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
arg	runtime\cgo\gcc_openbsd_386.c	/^	void *arg;$/;"	m	struct:thread_args	file:
func	runtime\cgo\gcc_openbsd_386.c	/^	void *(*func)(void *);$/;"	m	struct:thread_args	file:
pthread_create	runtime\cgo\gcc_openbsd_386.c	/^pthread_create(pthread_t *thread, const pthread_attr_t *attr,$/;"	f
setmg_gcc	runtime\cgo\gcc_openbsd_386.c	/^static void (*setmg_gcc)(void*, void*);$/;"	v	file:
sys_pthread_create	runtime\cgo\gcc_openbsd_386.c	/^static int (*sys_pthread_create)(pthread_t *thread, const pthread_attr_t *attr,$/;"	v	file:
tcb_fixup	runtime\cgo\gcc_openbsd_386.c	/^tcb_fixup(int mainthread)$/;"	f	file:
thread_args	runtime\cgo\gcc_openbsd_386.c	/^struct thread_args {$/;"	s	file:
thread_start_wrapper	runtime\cgo\gcc_openbsd_386.c	/^thread_start_wrapper(void *arg)$/;"	f	file:
threadentry	runtime\cgo\gcc_openbsd_386.c	/^threadentry(void *v)$/;"	f	file:
x_cgo_init	runtime\cgo\gcc_openbsd_386.c	/^x_cgo_init(G *g, void (*setmg)(void*, void*))$/;"	f
TCB_SIZE	runtime\cgo\gcc_openbsd_amd64.c	18;"	d	file:
TLS_SIZE	runtime\cgo\gcc_openbsd_amd64.c	19;"	d	file:
_cgo_sys_thread_start	runtime\cgo\gcc_openbsd_amd64.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
arg	runtime\cgo\gcc_openbsd_amd64.c	/^	void *arg;$/;"	m	struct:thread_args	file:
func	runtime\cgo\gcc_openbsd_amd64.c	/^	void *(*func)(void *);$/;"	m	struct:thread_args	file:
pthread_create	runtime\cgo\gcc_openbsd_amd64.c	/^pthread_create(pthread_t *thread, const pthread_attr_t *attr,$/;"	f
setmg_gcc	runtime\cgo\gcc_openbsd_amd64.c	/^static void (*setmg_gcc)(void*, void*);$/;"	v	file:
sys_pthread_create	runtime\cgo\gcc_openbsd_amd64.c	/^static int (*sys_pthread_create)(pthread_t *thread, const pthread_attr_t *attr,$/;"	v	file:
tcb_fixup	runtime\cgo\gcc_openbsd_amd64.c	/^tcb_fixup(int mainthread)$/;"	f	file:
thread_args	runtime\cgo\gcc_openbsd_amd64.c	/^struct thread_args {$/;"	s	file:
thread_start_wrapper	runtime\cgo\gcc_openbsd_amd64.c	/^thread_start_wrapper(void *arg)$/;"	f	file:
threadentry	runtime\cgo\gcc_openbsd_amd64.c	/^threadentry(void *v)$/;"	f	file:
x_cgo_init	runtime\cgo\gcc_openbsd_amd64.c	/^x_cgo_init(G *g, void (*setmg)(void*, void*))$/;"	f
x_cgo_setenv	runtime\cgo\gcc_setenv.c	/^x_cgo_setenv(char **arg)$/;"	f
x_cgo_free	runtime\cgo\gcc_util.c	/^x_cgo_free(void *p)$/;"	f
x_cgo_malloc	runtime\cgo\gcc_util.c	/^x_cgo_malloc(void *p)$/;"	f
x_cgo_thread_start	runtime\cgo\gcc_util.c	/^x_cgo_thread_start(ThreadStart *arg)$/;"	f
STACKSIZE	runtime\cgo\gcc_windows_386.c	15;"	d	file:
WIN32_LEAN_AND_MEAN	runtime\cgo\gcc_windows_386.c	5;"	d	file:
_cgo_sys_thread_start	runtime\cgo\gcc_windows_386.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
threadentry	runtime\cgo\gcc_windows_386.c	/^threadentry(void *v)$/;"	f	file:
x_cgo_init	runtime\cgo\gcc_windows_386.c	/^x_cgo_init(G *g)$/;"	f
STACKSIZE	runtime\cgo\gcc_windows_amd64.c	15;"	d	file:
WIN64_LEAN_AND_MEAN	runtime\cgo\gcc_windows_amd64.c	5;"	d	file:
_cgo_sys_thread_start	runtime\cgo\gcc_windows_amd64.c	/^_cgo_sys_thread_start(ThreadStart *ts)$/;"	f
threadentry	runtime\cgo\gcc_windows_amd64.c	/^threadentry(void *v)$/;"	f	file:
x_cgo_init	runtime\cgo\gcc_windows_amd64.c	/^x_cgo_init(G *g)$/;"	f
iscgo	runtime\cgo\iscgo.c	/^bool runtime·iscgo = 1;$/;"	v
needextram	runtime\cgo\iscgo.c	/^uint32 runtime·needextram = 1;  \/\/ create an extra M on first cgo call$/;"	v
G	runtime\cgo\libcgo.h	/^struct G$/;"	s
G	runtime\cgo\libcgo.h	/^typedef struct G G;$/;"	t	typeref:struct:G
ThreadStart	runtime\cgo\libcgo.h	/^struct ThreadStart$/;"	s
ThreadStart	runtime\cgo\libcgo.h	/^typedef struct ThreadStart ThreadStart;$/;"	t	typeref:struct:ThreadStart
fn	runtime\cgo\libcgo.h	/^	void (*fn)(void);$/;"	m	struct:ThreadStart
g	runtime\cgo\libcgo.h	/^	G *g;$/;"	m	struct:ThreadStart
m	runtime\cgo\libcgo.h	/^	uintptr m;$/;"	m	struct:ThreadStart
nelem	runtime\cgo\libcgo.h	10;"	d
nil	runtime\cgo\libcgo.h	9;"	d
stackbase	runtime\cgo\libcgo.h	/^	uintptr stackbase;$/;"	m	struct:G
stackguard	runtime\cgo\libcgo.h	/^	uintptr stackguard;$/;"	m	struct:G
uint32	runtime\cgo\libcgo.h	/^typedef uint32_t uint32;$/;"	t
uint64	runtime\cgo\libcgo.h	/^typedef uint64_t uint64;$/;"	t
uintptr	runtime\cgo\libcgo.h	/^typedef uintptr_t uintptr;$/;"	t
__progname	runtime\cgo\netbsd.c	/^char *__progname;$/;"	v
environ	runtime\cgo\netbsd.c	/^char *environ[1];$/;"	v
__guard_local	runtime\cgo\openbsd.c	/^long __guard_local;$/;"	v
__progname	runtime\cgo\openbsd.c	/^char *__progname;$/;"	v
environ	runtime\cgo\openbsd.c	/^char *environ[1];$/;"	v
_cgo_setenv	runtime\cgo\setenv.c	/^void (*_cgo_setenv)(char**) = x_cgo_setenv;$/;"	v
CBARGS	runtime\cgocall.c	230;"	d	file:
CBARGS	runtime\cgocall.c	235;"	d	file:
CBARGS	runtime\cgocall.c	240;"	d	file:
CallbackArgs	runtime\cgocall.c	/^struct CallbackArgs$/;"	s	file:
CallbackArgs	runtime\cgocall.c	/^typedef struct CallbackArgs CallbackArgs;$/;"	t	typeref:struct:CallbackArgs	file:
NumCgoCall	runtime\cgocall.c	/^runtime·NumCgoCall(int64 ret)$/;"	f
_cgo_free	runtime\cgocall.c	/^void (*_cgo_free)(void*);$/;"	v
_cgo_init	runtime\cgocall.c	/^void *_cgo_init;	\/* filled in by dynamic linker when Cgo is available *\/$/;"	v
_cgo_malloc	runtime\cgocall.c	/^void (*_cgo_malloc)(void*);$/;"	v
arg	runtime\cgocall.c	/^	void *arg;$/;"	m	struct:CallbackArgs	file:
argsize	runtime\cgocall.c	/^	uintptr argsize;$/;"	m	struct:CallbackArgs	file:
badcgocallback	runtime\cgocall.c	/^runtime·badcgocallback(void)	\/\/ called from assembly$/;"	f
cfree	runtime\cgocall.c	/^runtime·cfree(void *p)$/;"	f
cgocall	runtime\cgocall.c	/^runtime·cgocall(void (*fn)(void*), void *arg)$/;"	f
cgocallbackg	runtime\cgocall.c	/^runtime·cgocallbackg(void)$/;"	f
cgocallbackg1	runtime\cgocall.c	/^runtime·cgocallbackg1(void)$/;"	f
cgosync	runtime\cgocall.c	/^static int64 cgosync;  \/* represents possible synchronization in C code *\/$/;"	v	file:
cgounimpl	runtime\cgocall.c	/^runtime·cgounimpl(void)	\/\/ called from (incomplete) assembly$/;"	f
cmalloc	runtime\cgocall.c	/^runtime·cmalloc(uintptr n)$/;"	f
endcgo	runtime\cgocall.c	/^endcgo(void)$/;"	f	file:
endcgoV	runtime\cgocall.c	/^static FuncVal endcgoV = { endcgo };$/;"	v	file:
fn	runtime\cgocall.c	/^	FuncVal *fn;$/;"	m	struct:CallbackArgs	file:
unwindm	runtime\cgocall.c	/^unwindm(void)$/;"	f	file:
unwindmf	runtime\cgocall.c	/^static FuncVal unwindmf = {unwindm};$/;"	v	file:
CaseDefault	runtime\chan.c	/^	CaseDefault,$/;"	e	enum:__anon7	file:
CaseRecv	runtime\chan.c	/^	CaseRecv,$/;"	e	enum:__anon7	file:
CaseSend	runtime\chan.c	/^	CaseSend,$/;"	e	enum:__anon7	file:
Hchan	runtime\chan.c	/^struct	Hchan$/;"	s	file:
Hchansize	runtime\chan.c	/^uint32 runtime·Hchansize = sizeof(Hchan);$/;"	v
Lock	runtime\chan.c	/^	Lock;$/;"	m	struct:Hchan	file:
MAXALIGN	runtime\chan.c	12;"	d	file:
NOSELGEN	runtime\chan.c	13;"	d	file:
Scase	runtime\chan.c	/^struct	Scase$/;"	s	file:
Scase	runtime\chan.c	/^typedef	struct	Scase	Scase;$/;"	t	typeref:struct:Scase	file:
Select	runtime\chan.c	/^struct	Select$/;"	s	file:
Select	runtime\chan.c	/^typedef	struct	Select	Select;$/;"	t	typeref:struct:Select	file:
SelectDefault	runtime\chan.c	/^	SelectDefault,$/;"	e	enum:SelectDir	file:
SelectDir	runtime\chan.c	/^enum SelectDir {$/;"	g	file:
SelectRecv	runtime\chan.c	/^	SelectRecv,$/;"	e	enum:SelectDir	file:
SelectSend	runtime\chan.c	/^	SelectSend = 1,$/;"	e	enum:SelectDir	file:
SudoG	runtime\chan.c	/^struct	SudoG$/;"	s	file:
SudoG	runtime\chan.c	/^typedef	struct	SudoG	SudoG;$/;"	t	typeref:struct:SudoG	file:
WaitQ	runtime\chan.c	/^struct	WaitQ$/;"	s	file:
WaitQ	runtime\chan.c	/^typedef	struct	WaitQ	WaitQ;$/;"	t	typeref:struct:WaitQ	file:
block	runtime\chan.c	/^runtime·block(void)$/;"	f
ch	runtime\chan.c	/^	Hchan *ch;$/;"	m	struct:runtimeSelect	file:
chan	runtime\chan.c	/^	Hchan*	chan;			\/\/ chan$/;"	m	struct:Scase	file:
chanbuf	runtime\chan.c	56;"	d	file:
chancap	runtime\chan.c	/^reflect·chancap(Hchan *c, intgo cap)$/;"	f
chanclose	runtime\chan.c	/^reflect·chanclose(Hchan *c)$/;"	f
chanlen	runtime\chan.c	/^reflect·chanlen(Hchan *c, intgo len)$/;"	f
chanrecv	runtime\chan.c	/^reflect·chanrecv(ChanType *t, Hchan *c, bool nb, uintptr val, bool selected, bool received)$/;"	f
chanrecv	runtime\chan.c	/^runtime·chanrecv(ChanType *t, Hchan* c, byte *ep, bool *selected, bool *received)$/;"	f
chanrecv1	runtime\chan.c	/^runtime·chanrecv1(ChanType *t, Hchan* c, ...)$/;"	f
chanrecv2	runtime\chan.c	/^runtime·chanrecv2(ChanType *t, Hchan* c, ...)$/;"	f
chansend	runtime\chan.c	/^reflect·chansend(ChanType *t, Hchan *c, uintptr val, bool nb, uintptr selected)$/;"	f
chansend	runtime\chan.c	/^runtime·chansend(ChanType *t, Hchan *c, byte *ep, bool *pres, void *pc)$/;"	f
chansend1	runtime\chan.c	/^runtime·chansend1(ChanType *t, Hchan* c, ...)$/;"	f
closechan	runtime\chan.c	/^closechan(Hchan *c, void *pc)$/;"	f	file:
closechan	runtime\chan.c	/^runtime·closechan(Hchan *c)$/;"	f
closed	runtime\chan.c	/^	bool	closed;$/;"	m	struct:Hchan	file:
dataqsiz	runtime\chan.c	/^	uintgo	dataqsiz;		\/\/ size of the circular q$/;"	m	struct:Hchan	file:
debug	runtime\chan.c	/^	debug = 0,$/;"	e	enum:__anon7	file:
dequeue	runtime\chan.c	/^dequeue(WaitQ *q)$/;"	f	file:
dequeueg	runtime\chan.c	/^dequeueg(WaitQ *q)$/;"	f	file:
dir	runtime\chan.c	/^	uintptr dir;$/;"	m	struct:runtimeSelect	file:
elem	runtime\chan.c	/^	byte*	elem;		\/\/ data element$/;"	m	struct:SudoG	file:
elemalg	runtime\chan.c	/^	Alg*	elemalg;		\/\/ interface for element type$/;"	m	struct:Hchan	file:
elemsize	runtime\chan.c	/^	uint16	elemsize;$/;"	m	struct:Hchan	file:
enqueue	runtime\chan.c	/^enqueue(WaitQ *q, SudoG *sgp)$/;"	f	file:
first	runtime\chan.c	/^	SudoG*	first;$/;"	m	struct:WaitQ	file:
g	runtime\chan.c	/^	G*	g;		\/\/ g and selgen constitute$/;"	m	struct:SudoG	file:
kind	runtime\chan.c	/^	uint16	kind;$/;"	m	struct:Scase	file:
last	runtime\chan.c	/^	SudoG*	last;$/;"	m	struct:WaitQ	file:
link	runtime\chan.c	/^	SudoG*	link;$/;"	m	struct:SudoG	file:
lockorder	runtime\chan.c	/^	Hchan**	lockorder;		\/\/ channel lock order$/;"	m	struct:Select	file:
makechan	runtime\chan.c	/^reflect·makechan(ChanType *t, uint64 size, Hchan *c)$/;"	f
makechan	runtime\chan.c	/^runtime·makechan(ChanType *t, int64 hint, Hchan *ret)$/;"	f
makechan_c	runtime\chan.c	/^runtime·makechan_c(ChanType *t, int64 hint)$/;"	f
ncase	runtime\chan.c	/^	uint16	ncase;			\/\/ currently filled scase[]$/;"	m	struct:Select	file:
newselect	runtime\chan.c	/^newselect(int32 size, Select **selp)$/;"	f	file:
newselect	runtime\chan.c	/^runtime·newselect(int32 size, ...)$/;"	f
pad	runtime\chan.c	/^	uint16	pad;			\/\/ ensures proper alignment of the buffer that follows Hchan in memory$/;"	m	struct:Hchan	file:
pc	runtime\chan.c	/^	byte*	pc;			\/\/ return pc$/;"	m	struct:Scase	file:
pollorder	runtime\chan.c	/^	uint16*	pollorder;		\/\/ case poll order$/;"	m	struct:Select	file:
qcount	runtime\chan.c	/^	uintgo	qcount;			\/\/ total data in the q$/;"	m	struct:Hchan	file:
racesync	runtime\chan.c	/^racesync(Hchan *c, SudoG *sg)$/;"	f	file:
receivedp	runtime\chan.c	/^	bool*	receivedp;		\/\/ pointer to received bool (recv2)$/;"	m	struct:Scase	file:
recvq	runtime\chan.c	/^	WaitQ	recvq;			\/\/ list of recv waiters$/;"	m	struct:Hchan	file:
recvx	runtime\chan.c	/^	uintgo	recvx;			\/\/ receive index$/;"	m	struct:Hchan	file:
releasetime	runtime\chan.c	/^	int64	releasetime;$/;"	m	struct:SudoG	file:
rselect	runtime\chan.c	/^reflect·rselect(Slice cases, intgo chosen, uintptr word, bool recvOK)$/;"	f
runtimeSelect	runtime\chan.c	/^struct runtimeSelect$/;"	s	file:
runtimeSelect	runtime\chan.c	/^typedef struct runtimeSelect runtimeSelect;$/;"	t	typeref:struct:runtimeSelect	file:
scase	runtime\chan.c	/^	Scase	scase[1];		\/\/ one per case (in order of appearance)$/;"	m	struct:Select	file:
selectdefault	runtime\chan.c	/^runtime·selectdefault(Select *sel, bool selected)$/;"	f
selectdefault	runtime\chan.c	/^selectdefault(Select *sel, void *callerpc, int32 so)$/;"	f	file:
selectgo	runtime\chan.c	/^runtime·selectgo(Select *sel)$/;"	f
selectgo	runtime\chan.c	/^selectgo(Select **selp)$/;"	f	file:
selectnbrecv	runtime\chan.c	/^runtime·selectnbrecv(ChanType *t, byte *v, Hchan *c, bool selected)$/;"	f
selectnbrecv2	runtime\chan.c	/^runtime·selectnbrecv2(ChanType *t, byte *v, bool *received, Hchan *c, bool selected)$/;"	f
selectnbsend	runtime\chan.c	/^runtime·selectnbsend(ChanType *t, Hchan *c, ...)$/;"	f
selectrecv	runtime\chan.c	/^runtime·selectrecv(Select *sel, Hchan *c, void *elem, bool selected)$/;"	f
selectrecv	runtime\chan.c	/^selectrecv(Select *sel, Hchan *c, void *pc, void *elem, bool *received, int32 so)$/;"	f	file:
selectrecv2	runtime\chan.c	/^runtime·selectrecv2(Select *sel, Hchan *c, void *elem, bool *received, bool selected)$/;"	f
selectsend	runtime\chan.c	/^runtime·selectsend(Select *sel, Hchan *c, void *elem, bool selected)$/;"	f
selectsend	runtime\chan.c	/^selectsend(Select *sel, Hchan *c, void *pc, void *elem, int32 so)$/;"	f	file:
selgen	runtime\chan.c	/^	uint32	selgen;		\/\/ a weak pointer to g$/;"	m	struct:SudoG	file:
sellock	runtime\chan.c	/^sellock(Select *sel)$/;"	f	file:
selunlock	runtime\chan.c	/^selunlock(Select *sel)$/;"	f	file:
sendq	runtime\chan.c	/^	WaitQ	sendq;			\/\/ list of send waiters$/;"	m	struct:Hchan	file:
sendx	runtime\chan.c	/^	uintgo	sendx;			\/\/ send index$/;"	m	struct:Hchan	file:
sg	runtime\chan.c	/^	SudoG	sg;			\/\/ must be first member (cast to Scase)$/;"	m	struct:Scase	file:
so	runtime\chan.c	/^	uint16	so;			\/\/ vararg of selected bool$/;"	m	struct:Scase	file:
tcase	runtime\chan.c	/^	uint16	tcase;			\/\/ total count of scase[]$/;"	m	struct:Select	file:
typ	runtime\chan.c	/^	ChanType *typ;$/;"	m	struct:runtimeSelect	file:
val	runtime\chan.c	/^	uintptr val;$/;"	m	struct:runtimeSelect	file:
Complex128	runtime\complex.c	/^typedef struct Complex128 Complex128;$/;"	t	typeref:struct:Complex128	file:
complex128div	runtime\complex.c	/^runtime·complex128div(Complex128 n, Complex128 d, Complex128 q)$/;"	f
Assoc	runtime\cpuprof.c	/^	Assoc = 4,$/;"	e	enum:__anon8	file:
Bucket	runtime\cpuprof.c	/^struct Bucket {$/;"	s	file:
Bucket	runtime\cpuprof.c	/^typedef struct Bucket Bucket;$/;"	t	typeref:struct:Bucket	file:
CPUProfile	runtime\cpuprof.c	/^runtime·CPUProfile(Slice ret)$/;"	f
Entry	runtime\cpuprof.c	/^struct Entry {$/;"	s	file:
Entry	runtime\cpuprof.c	/^typedef struct Entry Entry;$/;"	t	typeref:struct:Entry	file:
HashSize	runtime\cpuprof.c	/^	HashSize = 1<<10,$/;"	e	enum:__anon8	file:
LogSize	runtime\cpuprof.c	/^	LogSize = 1<<17,$/;"	e	enum:__anon8	file:
LostProfileData	runtime\cpuprof.c	/^LostProfileData(void)$/;"	f	file:
MaxStack	runtime\cpuprof.c	/^	MaxStack = 64,$/;"	e	enum:__anon8	file:
Profile	runtime\cpuprof.c	/^struct Profile {$/;"	s	file:
Profile	runtime\cpuprof.c	/^typedef struct Profile Profile;$/;"	t	typeref:struct:Profile	file:
SetCPUProfileRate	runtime\cpuprof.c	/^runtime·SetCPUProfileRate(intgo hz)$/;"	f
add	runtime\cpuprof.c	/^add(Profile *p, uintptr *pc, int32 n)$/;"	f	file:
count	runtime\cpuprof.c	/^	uintptr count;		\/\/ tick count$/;"	m	struct:Profile	file:
count	runtime\cpuprof.c	/^	uintptr count;$/;"	m	struct:Entry	file:
depth	runtime\cpuprof.c	/^	uintptr depth;$/;"	m	struct:Entry	file:
entry	runtime\cpuprof.c	/^	Entry entry[Assoc];$/;"	m	struct:Bucket	file:
eod	runtime\cpuprof.c	/^static uintptr eod[3] = {0, 1, 0};$/;"	v	file:
eod_sent	runtime\cpuprof.c	/^	bool eod_sent;  \/\/ special end-of-data record sent; => flushing$/;"	m	struct:Profile	file:
evict	runtime\cpuprof.c	/^evict(Profile *p, Entry *e)$/;"	f	file:
evicts	runtime\cpuprof.c	/^	uintptr evicts;		\/\/ eviction count$/;"	m	struct:Profile	file:
flushing	runtime\cpuprof.c	/^	bool flushing;	\/\/ flushing hash table - profile is over$/;"	m	struct:Profile	file:
flushlog	runtime\cpuprof.c	/^flushlog(Profile *p)$/;"	f	file:
getprofile	runtime\cpuprof.c	/^getprofile(Profile *p)$/;"	f
handoff	runtime\cpuprof.c	/^	uint32 handoff;$/;"	m	struct:Profile	file:
hash	runtime\cpuprof.c	/^	Bucket hash[HashSize];$/;"	m	struct:Profile	file:
lk	runtime\cpuprof.c	/^static Lock lk;$/;"	v	file:
log	runtime\cpuprof.c	/^	uintptr log[2][LogSize\/2];$/;"	m	struct:Profile	file:
lost	runtime\cpuprof.c	/^	uintptr lost;		\/\/ lost ticks that need to be logged$/;"	m	struct:Profile	file:
nlog	runtime\cpuprof.c	/^	uintptr nlog;$/;"	m	struct:Profile	file:
on	runtime\cpuprof.c	/^	bool on;		\/\/ profiling is on$/;"	m	struct:Profile	file:
prof	runtime\cpuprof.c	/^static Profile *prof;$/;"	v	file:
stack	runtime\cpuprof.c	/^	uintptr stack[MaxStack];$/;"	m	struct:Entry	file:
tick	runtime\cpuprof.c	/^tick(uintptr *pc, int32 n)$/;"	f	file:
toggle	runtime\cpuprof.c	/^	int32 toggle;$/;"	m	struct:Profile	file:
totallost	runtime\cpuprof.c	/^	uintptr totallost;	\/\/ total lost ticks$/;"	m	struct:Profile	file:
wait	runtime\cpuprof.c	/^	Note wait;		\/\/ goroutine waits here$/;"	m	struct:Profile	file:
wholding	runtime\cpuprof.c	/^	bool wholding;	\/\/ holding & need to release a log half$/;"	m	struct:Profile	file:
wtoggle	runtime\cpuprof.c	/^	uint32 wtoggle;$/;"	m	struct:Profile	file:
BUS_ADRALN	runtime\defs_darwin_386.h	/^	BUS_ADRALN	= 0x1,$/;"	e	enum:__anon9
BUS_ADRERR	runtime\defs_darwin_386.h	/^	BUS_ADRERR	= 0x2,$/;"	e	enum:__anon9
BUS_OBJERR	runtime\defs_darwin_386.h	/^	BUS_OBJERR	= 0x3,$/;"	e	enum:__anon9
EFAULT	runtime\defs_darwin_386.h	/^	EFAULT	= 0xe,$/;"	e	enum:__anon9
EINTR	runtime\defs_darwin_386.h	/^	EINTR	= 0x4,$/;"	e	enum:__anon9
EVFILT_READ	runtime\defs_darwin_386.h	/^	EVFILT_READ	= -0x1,$/;"	e	enum:__anon9
EVFILT_WRITE	runtime\defs_darwin_386.h	/^	EVFILT_WRITE	= -0x2,$/;"	e	enum:__anon9
EV_ADD	runtime\defs_darwin_386.h	/^	EV_ADD		= 0x1,$/;"	e	enum:__anon9
EV_CLEAR	runtime\defs_darwin_386.h	/^	EV_CLEAR	= 0x20,$/;"	e	enum:__anon9
EV_DELETE	runtime\defs_darwin_386.h	/^	EV_DELETE	= 0x2,$/;"	e	enum:__anon9
EV_ERROR	runtime\defs_darwin_386.h	/^	EV_ERROR	= 0x4000,$/;"	e	enum:__anon9
EV_RECEIPT	runtime\defs_darwin_386.h	/^	EV_RECEIPT	= 0x40,$/;"	e	enum:__anon9
ExceptionState32	runtime\defs_darwin_386.h	/^struct ExceptionState32 {$/;"	s
ExceptionState32	runtime\defs_darwin_386.h	/^typedef struct ExceptionState32 ExceptionState32;$/;"	t	typeref:struct:ExceptionState32
ExceptionState64	runtime\defs_darwin_386.h	/^struct ExceptionState64 {$/;"	s
ExceptionState64	runtime\defs_darwin_386.h	/^typedef struct ExceptionState64 ExceptionState64;$/;"	t	typeref:struct:ExceptionState64
FPControl	runtime\defs_darwin_386.h	/^struct FPControl {$/;"	s
FPControl	runtime\defs_darwin_386.h	/^typedef struct FPControl FPControl;$/;"	t	typeref:struct:FPControl
FPE_FLTDIV	runtime\defs_darwin_386.h	/^	FPE_FLTDIV	= 0x1,$/;"	e	enum:__anon9
FPE_FLTINV	runtime\defs_darwin_386.h	/^	FPE_FLTINV	= 0x5,$/;"	e	enum:__anon9
FPE_FLTOVF	runtime\defs_darwin_386.h	/^	FPE_FLTOVF	= 0x2,$/;"	e	enum:__anon9
FPE_FLTRES	runtime\defs_darwin_386.h	/^	FPE_FLTRES	= 0x4,$/;"	e	enum:__anon9
FPE_FLTSUB	runtime\defs_darwin_386.h	/^	FPE_FLTSUB	= 0x6,$/;"	e	enum:__anon9
FPE_FLTUND	runtime\defs_darwin_386.h	/^	FPE_FLTUND	= 0x3,$/;"	e	enum:__anon9
FPE_INTDIV	runtime\defs_darwin_386.h	/^	FPE_INTDIV	= 0x7,$/;"	e	enum:__anon9
FPE_INTOVF	runtime\defs_darwin_386.h	/^	FPE_INTOVF	= 0x8,$/;"	e	enum:__anon9
FPStatus	runtime\defs_darwin_386.h	/^struct FPStatus {$/;"	s
FPStatus	runtime\defs_darwin_386.h	/^typedef struct FPStatus FPStatus;$/;"	t	typeref:struct:FPStatus
FloatState32	runtime\defs_darwin_386.h	/^struct FloatState32 {$/;"	s
FloatState32	runtime\defs_darwin_386.h	/^typedef struct FloatState32 FloatState32;$/;"	t	typeref:struct:FloatState32
FloatState64	runtime\defs_darwin_386.h	/^struct FloatState64 {$/;"	s
FloatState64	runtime\defs_darwin_386.h	/^typedef struct FloatState64 FloatState64;$/;"	t	typeref:struct:FloatState64
ITIMER_PROF	runtime\defs_darwin_386.h	/^	ITIMER_PROF	= 0x2,$/;"	e	enum:__anon9
ITIMER_REAL	runtime\defs_darwin_386.h	/^	ITIMER_REAL	= 0x0,$/;"	e	enum:__anon9
ITIMER_VIRTUAL	runtime\defs_darwin_386.h	/^	ITIMER_VIRTUAL	= 0x1,$/;"	e	enum:__anon9
Itimerval	runtime\defs_darwin_386.h	/^struct Itimerval {$/;"	s
Itimerval	runtime\defs_darwin_386.h	/^typedef struct Itimerval Itimerval;$/;"	t	typeref:struct:Itimerval
Kevent	runtime\defs_darwin_386.h	/^struct Kevent {$/;"	s
Kevent	runtime\defs_darwin_386.h	/^typedef struct Kevent Kevent;$/;"	t	typeref:struct:Kevent
MACH_MSGH_BITS_COMPLEX	runtime\defs_darwin_386.h	/^	MACH_MSGH_BITS_COMPLEX	= 0x80000000,$/;"	e	enum:__anon9
MACH_MSG_OOL_DESCRIPTOR	runtime\defs_darwin_386.h	/^	MACH_MSG_OOL_DESCRIPTOR			= 0x1,$/;"	e	enum:__anon9
MACH_MSG_OOL_PORTS_DESCRIPTOR	runtime\defs_darwin_386.h	/^	MACH_MSG_OOL_PORTS_DESCRIPTOR		= 0x2,$/;"	e	enum:__anon9
MACH_MSG_OOL_VOLATILE_DESCRIPTOR	runtime\defs_darwin_386.h	/^	MACH_MSG_OOL_VOLATILE_DESCRIPTOR	= 0x3,$/;"	e	enum:__anon9
MACH_MSG_PORT_DESCRIPTOR	runtime\defs_darwin_386.h	/^	MACH_MSG_PORT_DESCRIPTOR		= 0x0,$/;"	e	enum:__anon9
MACH_MSG_TYPE_COPY_RECEIVE	runtime\defs_darwin_386.h	/^	MACH_MSG_TYPE_COPY_RECEIVE	= 0x16,$/;"	e	enum:__anon9
MACH_MSG_TYPE_COPY_SEND	runtime\defs_darwin_386.h	/^	MACH_MSG_TYPE_COPY_SEND		= 0x13,$/;"	e	enum:__anon9
MACH_MSG_TYPE_MAKE_SEND	runtime\defs_darwin_386.h	/^	MACH_MSG_TYPE_MAKE_SEND		= 0x14,$/;"	e	enum:__anon9
MACH_MSG_TYPE_MAKE_SEND_ONCE	runtime\defs_darwin_386.h	/^	MACH_MSG_TYPE_MAKE_SEND_ONCE	= 0x15,$/;"	e	enum:__anon9
MACH_MSG_TYPE_MOVE_RECEIVE	runtime\defs_darwin_386.h	/^	MACH_MSG_TYPE_MOVE_RECEIVE	= 0x10,$/;"	e	enum:__anon9
MACH_MSG_TYPE_MOVE_SEND	runtime\defs_darwin_386.h	/^	MACH_MSG_TYPE_MOVE_SEND		= 0x11,$/;"	e	enum:__anon9
MACH_MSG_TYPE_MOVE_SEND_ONCE	runtime\defs_darwin_386.h	/^	MACH_MSG_TYPE_MOVE_SEND_ONCE	= 0x12,$/;"	e	enum:__anon9
MACH_RCV_INTERRUPT	runtime\defs_darwin_386.h	/^	MACH_RCV_INTERRUPT	= 0x400,$/;"	e	enum:__anon9
MACH_RCV_LARGE	runtime\defs_darwin_386.h	/^	MACH_RCV_LARGE	= 0x4,$/;"	e	enum:__anon9
MACH_RCV_MSG	runtime\defs_darwin_386.h	/^	MACH_RCV_MSG	= 0x2,$/;"	e	enum:__anon9
MACH_RCV_NOTIFY	runtime\defs_darwin_386.h	/^	MACH_RCV_NOTIFY		= 0x200,$/;"	e	enum:__anon9
MACH_RCV_OVERWRITE	runtime\defs_darwin_386.h	/^	MACH_RCV_OVERWRITE	= 0x1000,$/;"	e	enum:__anon9
MACH_RCV_TIMEOUT	runtime\defs_darwin_386.h	/^	MACH_RCV_TIMEOUT	= 0x100,$/;"	e	enum:__anon9
MACH_SEND_ALWAYS	runtime\defs_darwin_386.h	/^	MACH_SEND_ALWAYS	= 0x10000,$/;"	e	enum:__anon9
MACH_SEND_INTERRUPT	runtime\defs_darwin_386.h	/^	MACH_SEND_INTERRUPT	= 0x40,$/;"	e	enum:__anon9
MACH_SEND_MSG	runtime\defs_darwin_386.h	/^	MACH_SEND_MSG	= 0x1,$/;"	e	enum:__anon9
MACH_SEND_TIMEOUT	runtime\defs_darwin_386.h	/^	MACH_SEND_TIMEOUT	= 0x10,$/;"	e	enum:__anon9
MACH_SEND_TRAILER	runtime\defs_darwin_386.h	/^	MACH_SEND_TRAILER	= 0x20000,$/;"	e	enum:__anon9
MADV_DONTNEED	runtime\defs_darwin_386.h	/^	MADV_DONTNEED	= 0x4,$/;"	e	enum:__anon9
MADV_FREE	runtime\defs_darwin_386.h	/^	MADV_FREE	= 0x5,$/;"	e	enum:__anon9
MAP_ANON	runtime\defs_darwin_386.h	/^	MAP_ANON	= 0x1000,$/;"	e	enum:__anon9
MAP_FIXED	runtime\defs_darwin_386.h	/^	MAP_FIXED	= 0x10,$/;"	e	enum:__anon9
MAP_PRIVATE	runtime\defs_darwin_386.h	/^	MAP_PRIVATE	= 0x2,$/;"	e	enum:__anon9
MachBody	runtime\defs_darwin_386.h	/^struct MachBody {$/;"	s
MachBody	runtime\defs_darwin_386.h	/^typedef struct MachBody MachBody;$/;"	t	typeref:struct:MachBody
MachHeader	runtime\defs_darwin_386.h	/^struct MachHeader {$/;"	s
MachHeader	runtime\defs_darwin_386.h	/^typedef struct MachHeader MachHeader;$/;"	t	typeref:struct:MachHeader
MachNDR	runtime\defs_darwin_386.h	/^struct MachNDR {$/;"	s
MachNDR	runtime\defs_darwin_386.h	/^typedef struct MachNDR MachNDR;$/;"	t	typeref:struct:MachNDR
MachPort	runtime\defs_darwin_386.h	/^struct MachPort {$/;"	s
MachPort	runtime\defs_darwin_386.h	/^typedef struct MachPort MachPort;$/;"	t	typeref:struct:MachPort
Mcontext32	runtime\defs_darwin_386.h	/^struct Mcontext32 {$/;"	s
Mcontext32	runtime\defs_darwin_386.h	/^typedef struct Mcontext32 Mcontext32;$/;"	t	typeref:struct:Mcontext32
Mcontext64	runtime\defs_darwin_386.h	/^struct Mcontext64 {$/;"	s
Mcontext64	runtime\defs_darwin_386.h	/^typedef struct Mcontext64 Mcontext64;$/;"	t	typeref:struct:Mcontext64
NDR_CHAR_ASCII	runtime\defs_darwin_386.h	/^	NDR_CHAR_ASCII		= 0x0,$/;"	e	enum:__anon9
NDR_FLOAT_IEEE	runtime\defs_darwin_386.h	/^	NDR_FLOAT_IEEE		= 0x0,$/;"	e	enum:__anon9
NDR_INT_BIG_ENDIAN	runtime\defs_darwin_386.h	/^	NDR_INT_BIG_ENDIAN	= 0x0,$/;"	e	enum:__anon9
NDR_INT_LITTLE_ENDIAN	runtime\defs_darwin_386.h	/^	NDR_INT_LITTLE_ENDIAN	= 0x1,$/;"	e	enum:__anon9
NDR_PROTOCOL_2_0	runtime\defs_darwin_386.h	/^	NDR_PROTOCOL_2_0	= 0x0,$/;"	e	enum:__anon9
PROT_EXEC	runtime\defs_darwin_386.h	/^	PROT_EXEC	= 0x4,$/;"	e	enum:__anon9
PROT_NONE	runtime\defs_darwin_386.h	/^	PROT_NONE	= 0x0,$/;"	e	enum:__anon9
PROT_READ	runtime\defs_darwin_386.h	/^	PROT_READ	= 0x1,$/;"	e	enum:__anon9
PROT_WRITE	runtime\defs_darwin_386.h	/^	PROT_WRITE	= 0x2,$/;"	e	enum:__anon9
Pad_cgo_0	runtime\defs_darwin_386.h	/^	byte	Pad_cgo_0[2];$/;"	m	struct:FPControl
Pad_cgo_0	runtime\defs_darwin_386.h	/^	byte	Pad_cgo_0[2];$/;"	m	struct:FPStatus
RegMMST	runtime\defs_darwin_386.h	/^struct RegMMST {$/;"	s
RegMMST	runtime\defs_darwin_386.h	/^typedef struct RegMMST RegMMST;$/;"	t	typeref:struct:RegMMST
RegXMM	runtime\defs_darwin_386.h	/^struct RegXMM {$/;"	s
RegXMM	runtime\defs_darwin_386.h	/^typedef struct RegXMM RegXMM;$/;"	t	typeref:struct:RegXMM
Regs32	runtime\defs_darwin_386.h	/^struct Regs32 {$/;"	s
Regs32	runtime\defs_darwin_386.h	/^typedef struct Regs32 Regs32;$/;"	t	typeref:struct:Regs32
Regs64	runtime\defs_darwin_386.h	/^struct Regs64 {$/;"	s
Regs64	runtime\defs_darwin_386.h	/^typedef struct Regs64 Regs64;$/;"	t	typeref:struct:Regs64
SA_64REGSET	runtime\defs_darwin_386.h	/^	SA_64REGSET	= 0x200,$/;"	e	enum:__anon9
SA_ONSTACK	runtime\defs_darwin_386.h	/^	SA_ONSTACK	= 0x1,$/;"	e	enum:__anon9
SA_RESTART	runtime\defs_darwin_386.h	/^	SA_RESTART	= 0x2,$/;"	e	enum:__anon9
SA_SIGINFO	runtime\defs_darwin_386.h	/^	SA_SIGINFO	= 0x40,$/;"	e	enum:__anon9
SA_USERTRAMP	runtime\defs_darwin_386.h	/^	SA_USERTRAMP	= 0x100,$/;"	e	enum:__anon9
SEGV_ACCERR	runtime\defs_darwin_386.h	/^	SEGV_ACCERR	= 0x2,$/;"	e	enum:__anon9
SEGV_MAPERR	runtime\defs_darwin_386.h	/^	SEGV_MAPERR	= 0x1,$/;"	e	enum:__anon9
SIGABRT	runtime\defs_darwin_386.h	/^	SIGABRT		= 0x6,$/;"	e	enum:__anon9
SIGALRM	runtime\defs_darwin_386.h	/^	SIGALRM		= 0xe,$/;"	e	enum:__anon9
SIGBUS	runtime\defs_darwin_386.h	/^	SIGBUS		= 0xa,$/;"	e	enum:__anon9
SIGCHLD	runtime\defs_darwin_386.h	/^	SIGCHLD		= 0x14,$/;"	e	enum:__anon9
SIGCONT	runtime\defs_darwin_386.h	/^	SIGCONT		= 0x13,$/;"	e	enum:__anon9
SIGEMT	runtime\defs_darwin_386.h	/^	SIGEMT		= 0x7,$/;"	e	enum:__anon9
SIGFPE	runtime\defs_darwin_386.h	/^	SIGFPE		= 0x8,$/;"	e	enum:__anon9
SIGHUP	runtime\defs_darwin_386.h	/^	SIGHUP		= 0x1,$/;"	e	enum:__anon9
SIGILL	runtime\defs_darwin_386.h	/^	SIGILL		= 0x4,$/;"	e	enum:__anon9
SIGINFO	runtime\defs_darwin_386.h	/^	SIGINFO		= 0x1d,$/;"	e	enum:__anon9
SIGINT	runtime\defs_darwin_386.h	/^	SIGINT		= 0x2,$/;"	e	enum:__anon9
SIGIO	runtime\defs_darwin_386.h	/^	SIGIO		= 0x17,$/;"	e	enum:__anon9
SIGKILL	runtime\defs_darwin_386.h	/^	SIGKILL		= 0x9,$/;"	e	enum:__anon9
SIGPIPE	runtime\defs_darwin_386.h	/^	SIGPIPE		= 0xd,$/;"	e	enum:__anon9
SIGPROF	runtime\defs_darwin_386.h	/^	SIGPROF		= 0x1b,$/;"	e	enum:__anon9
SIGQUIT	runtime\defs_darwin_386.h	/^	SIGQUIT		= 0x3,$/;"	e	enum:__anon9
SIGSEGV	runtime\defs_darwin_386.h	/^	SIGSEGV		= 0xb,$/;"	e	enum:__anon9
SIGSTOP	runtime\defs_darwin_386.h	/^	SIGSTOP		= 0x11,$/;"	e	enum:__anon9
SIGSYS	runtime\defs_darwin_386.h	/^	SIGSYS		= 0xc,$/;"	e	enum:__anon9
SIGTERM	runtime\defs_darwin_386.h	/^	SIGTERM		= 0xf,$/;"	e	enum:__anon9
SIGTRAP	runtime\defs_darwin_386.h	/^	SIGTRAP		= 0x5,$/;"	e	enum:__anon9
SIGTSTP	runtime\defs_darwin_386.h	/^	SIGTSTP		= 0x12,$/;"	e	enum:__anon9
SIGTTIN	runtime\defs_darwin_386.h	/^	SIGTTIN		= 0x15,$/;"	e	enum:__anon9
SIGTTOU	runtime\defs_darwin_386.h	/^	SIGTTOU		= 0x16,$/;"	e	enum:__anon9
SIGURG	runtime\defs_darwin_386.h	/^	SIGURG		= 0x10,$/;"	e	enum:__anon9
SIGUSR1	runtime\defs_darwin_386.h	/^	SIGUSR1		= 0x1e,$/;"	e	enum:__anon9
SIGUSR2	runtime\defs_darwin_386.h	/^	SIGUSR2		= 0x1f,$/;"	e	enum:__anon9
SIGVTALRM	runtime\defs_darwin_386.h	/^	SIGVTALRM	= 0x1a,$/;"	e	enum:__anon9
SIGWINCH	runtime\defs_darwin_386.h	/^	SIGWINCH	= 0x1c,$/;"	e	enum:__anon9
SIGXCPU	runtime\defs_darwin_386.h	/^	SIGXCPU		= 0x18,$/;"	e	enum:__anon9
SIGXFSZ	runtime\defs_darwin_386.h	/^	SIGXFSZ		= 0x19,$/;"	e	enum:__anon9
Sigaction	runtime\defs_darwin_386.h	/^struct Sigaction {$/;"	s
Sigaction	runtime\defs_darwin_386.h	/^typedef struct Sigaction Sigaction;$/;"	t	typeref:struct:Sigaction
Sighandler	runtime\defs_darwin_386.h	/^typedef	byte	Sighandler[4];$/;"	t
Siginfo	runtime\defs_darwin_386.h	/^struct Siginfo {$/;"	s
Siginfo	runtime\defs_darwin_386.h	/^typedef struct Siginfo Siginfo;$/;"	t	typeref:struct:Siginfo
Sigval	runtime\defs_darwin_386.h	/^typedef	byte	Sigval[4];$/;"	t
StackT	runtime\defs_darwin_386.h	/^struct StackT {$/;"	s
StackT	runtime\defs_darwin_386.h	/^typedef struct StackT StackT;$/;"	t	typeref:struct:StackT
Timespec	runtime\defs_darwin_386.h	/^struct Timespec {$/;"	s
Timespec	runtime\defs_darwin_386.h	/^typedef struct Timespec Timespec;$/;"	t	typeref:struct:Timespec
Timeval	runtime\defs_darwin_386.h	/^struct Timeval {$/;"	s
Timeval	runtime\defs_darwin_386.h	/^typedef struct Timeval Timeval;$/;"	t	typeref:struct:Timeval
Ucontext	runtime\defs_darwin_386.h	/^struct Ucontext {$/;"	s
Ucontext	runtime\defs_darwin_386.h	/^typedef struct Ucontext Ucontext;$/;"	t	typeref:struct:Ucontext
__pad	runtime\defs_darwin_386.h	/^	uint32	__pad[7];$/;"	m	struct:Siginfo
__sigaction_u	runtime\defs_darwin_386.h	/^	byte	__sigaction_u[4];$/;"	m	struct:Sigaction
char_rep	runtime\defs_darwin_386.h	/^	uint8	char_rep;$/;"	m	struct:MachNDR
cpu	runtime\defs_darwin_386.h	/^	uint16	cpu;$/;"	m	struct:ExceptionState32
cpu	runtime\defs_darwin_386.h	/^	uint16	cpu;$/;"	m	struct:ExceptionState64
cs	runtime\defs_darwin_386.h	/^	uint32	cs;$/;"	m	struct:Regs32
cs	runtime\defs_darwin_386.h	/^	uint64	cs;$/;"	m	struct:Regs64
data	runtime\defs_darwin_386.h	/^	int32	data;$/;"	m	struct:Kevent
disposition	runtime\defs_darwin_386.h	/^	uint8	disposition;$/;"	m	struct:MachPort
ds	runtime\defs_darwin_386.h	/^	uint32	ds;$/;"	m	struct:Regs32
eax	runtime\defs_darwin_386.h	/^	uint32	eax;$/;"	m	struct:Regs32
ebp	runtime\defs_darwin_386.h	/^	uint32	ebp;$/;"	m	struct:Regs32
ebx	runtime\defs_darwin_386.h	/^	uint32	ebx;$/;"	m	struct:Regs32
ecx	runtime\defs_darwin_386.h	/^	uint32	ecx;$/;"	m	struct:Regs32
edi	runtime\defs_darwin_386.h	/^	uint32	edi;$/;"	m	struct:Regs32
edx	runtime\defs_darwin_386.h	/^	uint32	edx;$/;"	m	struct:Regs32
eflags	runtime\defs_darwin_386.h	/^	uint32	eflags;$/;"	m	struct:Regs32
eip	runtime\defs_darwin_386.h	/^	uint32	eip;$/;"	m	struct:Regs32
err	runtime\defs_darwin_386.h	/^	uint32	err;$/;"	m	struct:ExceptionState32
err	runtime\defs_darwin_386.h	/^	uint32	err;$/;"	m	struct:ExceptionState64
es	runtime\defs_darwin_386.h	/^	ExceptionState32	es;$/;"	m	struct:Mcontext32
es	runtime\defs_darwin_386.h	/^	ExceptionState64	es;$/;"	m	struct:Mcontext64
es	runtime\defs_darwin_386.h	/^	uint32	es;$/;"	m	struct:Regs32
esi	runtime\defs_darwin_386.h	/^	uint32	esi;$/;"	m	struct:Regs32
esp	runtime\defs_darwin_386.h	/^	uint32	esp;$/;"	m	struct:Regs32
faultvaddr	runtime\defs_darwin_386.h	/^	uint32	faultvaddr;$/;"	m	struct:ExceptionState32
faultvaddr	runtime\defs_darwin_386.h	/^	uint64	faultvaddr;$/;"	m	struct:ExceptionState64
fflags	runtime\defs_darwin_386.h	/^	uint32	fflags;$/;"	m	struct:Kevent
filter	runtime\defs_darwin_386.h	/^	int16	filter;$/;"	m	struct:Kevent
flags	runtime\defs_darwin_386.h	/^	uint16	flags;$/;"	m	struct:Kevent
float_rep	runtime\defs_darwin_386.h	/^	uint8	float_rep;$/;"	m	struct:MachNDR
fpu_cs	runtime\defs_darwin_386.h	/^	uint16	fpu_cs;$/;"	m	struct:FloatState32
fpu_cs	runtime\defs_darwin_386.h	/^	uint16	fpu_cs;$/;"	m	struct:FloatState64
fpu_dp	runtime\defs_darwin_386.h	/^	uint32	fpu_dp;$/;"	m	struct:FloatState32
fpu_dp	runtime\defs_darwin_386.h	/^	uint32	fpu_dp;$/;"	m	struct:FloatState64
fpu_ds	runtime\defs_darwin_386.h	/^	uint16	fpu_ds;$/;"	m	struct:FloatState32
fpu_ds	runtime\defs_darwin_386.h	/^	uint16	fpu_ds;$/;"	m	struct:FloatState64
fpu_fcw	runtime\defs_darwin_386.h	/^	FPControl	fpu_fcw;$/;"	m	struct:FloatState32
fpu_fcw	runtime\defs_darwin_386.h	/^	FPControl	fpu_fcw;$/;"	m	struct:FloatState64
fpu_fop	runtime\defs_darwin_386.h	/^	uint16	fpu_fop;$/;"	m	struct:FloatState32
fpu_fop	runtime\defs_darwin_386.h	/^	uint16	fpu_fop;$/;"	m	struct:FloatState64
fpu_fsw	runtime\defs_darwin_386.h	/^	FPStatus	fpu_fsw;$/;"	m	struct:FloatState32
fpu_fsw	runtime\defs_darwin_386.h	/^	FPStatus	fpu_fsw;$/;"	m	struct:FloatState64
fpu_ftw	runtime\defs_darwin_386.h	/^	uint8	fpu_ftw;$/;"	m	struct:FloatState32
fpu_ftw	runtime\defs_darwin_386.h	/^	uint8	fpu_ftw;$/;"	m	struct:FloatState64
fpu_ip	runtime\defs_darwin_386.h	/^	uint32	fpu_ip;$/;"	m	struct:FloatState32
fpu_ip	runtime\defs_darwin_386.h	/^	uint32	fpu_ip;$/;"	m	struct:FloatState64
fpu_mxcsr	runtime\defs_darwin_386.h	/^	uint32	fpu_mxcsr;$/;"	m	struct:FloatState32
fpu_mxcsr	runtime\defs_darwin_386.h	/^	uint32	fpu_mxcsr;$/;"	m	struct:FloatState64
fpu_mxcsrmask	runtime\defs_darwin_386.h	/^	uint32	fpu_mxcsrmask;$/;"	m	struct:FloatState32
fpu_mxcsrmask	runtime\defs_darwin_386.h	/^	uint32	fpu_mxcsrmask;$/;"	m	struct:FloatState64
fpu_reserved	runtime\defs_darwin_386.h	/^	int32	fpu_reserved[2];$/;"	m	struct:FloatState32
fpu_reserved	runtime\defs_darwin_386.h	/^	int32	fpu_reserved[2];$/;"	m	struct:FloatState64
fpu_reserved1	runtime\defs_darwin_386.h	/^	int32	fpu_reserved1;$/;"	m	struct:FloatState32
fpu_reserved1	runtime\defs_darwin_386.h	/^	int32	fpu_reserved1;$/;"	m	struct:FloatState64
fpu_rsrv1	runtime\defs_darwin_386.h	/^	uint8	fpu_rsrv1;$/;"	m	struct:FloatState32
fpu_rsrv1	runtime\defs_darwin_386.h	/^	uint8	fpu_rsrv1;$/;"	m	struct:FloatState64
fpu_rsrv2	runtime\defs_darwin_386.h	/^	uint16	fpu_rsrv2;$/;"	m	struct:FloatState32
fpu_rsrv2	runtime\defs_darwin_386.h	/^	uint16	fpu_rsrv2;$/;"	m	struct:FloatState64
fpu_rsrv3	runtime\defs_darwin_386.h	/^	uint16	fpu_rsrv3;$/;"	m	struct:FloatState32
fpu_rsrv3	runtime\defs_darwin_386.h	/^	uint16	fpu_rsrv3;$/;"	m	struct:FloatState64
fpu_rsrv4	runtime\defs_darwin_386.h	/^	int8	fpu_rsrv4[224];$/;"	m	struct:FloatState32
fpu_rsrv4	runtime\defs_darwin_386.h	/^	int8	fpu_rsrv4[96];$/;"	m	struct:FloatState64
fpu_stmm0	runtime\defs_darwin_386.h	/^	RegMMST	fpu_stmm0;$/;"	m	struct:FloatState32
fpu_stmm0	runtime\defs_darwin_386.h	/^	RegMMST	fpu_stmm0;$/;"	m	struct:FloatState64
fpu_stmm1	runtime\defs_darwin_386.h	/^	RegMMST	fpu_stmm1;$/;"	m	struct:FloatState32
fpu_stmm1	runtime\defs_darwin_386.h	/^	RegMMST	fpu_stmm1;$/;"	m	struct:FloatState64
fpu_stmm2	runtime\defs_darwin_386.h	/^	RegMMST	fpu_stmm2;$/;"	m	struct:FloatState32
fpu_stmm2	runtime\defs_darwin_386.h	/^	RegMMST	fpu_stmm2;$/;"	m	struct:FloatState64
fpu_stmm3	runtime\defs_darwin_386.h	/^	RegMMST	fpu_stmm3;$/;"	m	struct:FloatState32
fpu_stmm3	runtime\defs_darwin_386.h	/^	RegMMST	fpu_stmm3;$/;"	m	struct:FloatState64
fpu_stmm4	runtime\defs_darwin_386.h	/^	RegMMST	fpu_stmm4;$/;"	m	struct:FloatState32
fpu_stmm4	runtime\defs_darwin_386.h	/^	RegMMST	fpu_stmm4;$/;"	m	struct:FloatState64
fpu_stmm5	runtime\defs_darwin_386.h	/^	RegMMST	fpu_stmm5;$/;"	m	struct:FloatState32
fpu_stmm5	runtime\defs_darwin_386.h	/^	RegMMST	fpu_stmm5;$/;"	m	struct:FloatState64
fpu_stmm6	runtime\defs_darwin_386.h	/^	RegMMST	fpu_stmm6;$/;"	m	struct:FloatState32
fpu_stmm6	runtime\defs_darwin_386.h	/^	RegMMST	fpu_stmm6;$/;"	m	struct:FloatState64
fpu_stmm7	runtime\defs_darwin_386.h	/^	RegMMST	fpu_stmm7;$/;"	m	struct:FloatState32
fpu_stmm7	runtime\defs_darwin_386.h	/^	RegMMST	fpu_stmm7;$/;"	m	struct:FloatState64
fpu_xmm0	runtime\defs_darwin_386.h	/^	RegXMM	fpu_xmm0;$/;"	m	struct:FloatState32
fpu_xmm0	runtime\defs_darwin_386.h	/^	RegXMM	fpu_xmm0;$/;"	m	struct:FloatState64
fpu_xmm1	runtime\defs_darwin_386.h	/^	RegXMM	fpu_xmm1;$/;"	m	struct:FloatState32
fpu_xmm1	runtime\defs_darwin_386.h	/^	RegXMM	fpu_xmm1;$/;"	m	struct:FloatState64
fpu_xmm10	runtime\defs_darwin_386.h	/^	RegXMM	fpu_xmm10;$/;"	m	struct:FloatState64
fpu_xmm11	runtime\defs_darwin_386.h	/^	RegXMM	fpu_xmm11;$/;"	m	struct:FloatState64
fpu_xmm12	runtime\defs_darwin_386.h	/^	RegXMM	fpu_xmm12;$/;"	m	struct:FloatState64
fpu_xmm13	runtime\defs_darwin_386.h	/^	RegXMM	fpu_xmm13;$/;"	m	struct:FloatState64
fpu_xmm14	runtime\defs_darwin_386.h	/^	RegXMM	fpu_xmm14;$/;"	m	struct:FloatState64
fpu_xmm15	runtime\defs_darwin_386.h	/^	RegXMM	fpu_xmm15;$/;"	m	struct:FloatState64
fpu_xmm2	runtime\defs_darwin_386.h	/^	RegXMM	fpu_xmm2;$/;"	m	struct:FloatState32
fpu_xmm2	runtime\defs_darwin_386.h	/^	RegXMM	fpu_xmm2;$/;"	m	struct:FloatState64
fpu_xmm3	runtime\defs_darwin_386.h	/^	RegXMM	fpu_xmm3;$/;"	m	struct:FloatState32
fpu_xmm3	runtime\defs_darwin_386.h	/^	RegXMM	fpu_xmm3;$/;"	m	struct:FloatState64
fpu_xmm4	runtime\defs_darwin_386.h	/^	RegXMM	fpu_xmm4;$/;"	m	struct:FloatState32
fpu_xmm4	runtime\defs_darwin_386.h	/^	RegXMM	fpu_xmm4;$/;"	m	struct:FloatState64
fpu_xmm5	runtime\defs_darwin_386.h	/^	RegXMM	fpu_xmm5;$/;"	m	struct:FloatState32
fpu_xmm5	runtime\defs_darwin_386.h	/^	RegXMM	fpu_xmm5;$/;"	m	struct:FloatState64
fpu_xmm6	runtime\defs_darwin_386.h	/^	RegXMM	fpu_xmm6;$/;"	m	struct:FloatState32
fpu_xmm6	runtime\defs_darwin_386.h	/^	RegXMM	fpu_xmm6;$/;"	m	struct:FloatState64
fpu_xmm7	runtime\defs_darwin_386.h	/^	RegXMM	fpu_xmm7;$/;"	m	struct:FloatState32
fpu_xmm7	runtime\defs_darwin_386.h	/^	RegXMM	fpu_xmm7;$/;"	m	struct:FloatState64
fpu_xmm8	runtime\defs_darwin_386.h	/^	RegXMM	fpu_xmm8;$/;"	m	struct:FloatState64
fpu_xmm9	runtime\defs_darwin_386.h	/^	RegXMM	fpu_xmm9;$/;"	m	struct:FloatState64
fs	runtime\defs_darwin_386.h	/^	FloatState32	fs;$/;"	m	struct:Mcontext32
fs	runtime\defs_darwin_386.h	/^	FloatState64	fs;$/;"	m	struct:Mcontext64
fs	runtime\defs_darwin_386.h	/^	uint32	fs;$/;"	m	struct:Regs32
fs	runtime\defs_darwin_386.h	/^	uint64	fs;$/;"	m	struct:Regs64
gs	runtime\defs_darwin_386.h	/^	uint32	gs;$/;"	m	struct:Regs32
gs	runtime\defs_darwin_386.h	/^	uint64	gs;$/;"	m	struct:Regs64
ident	runtime\defs_darwin_386.h	/^	uint32	ident;$/;"	m	struct:Kevent
if_vers	runtime\defs_darwin_386.h	/^	uint8	if_vers;$/;"	m	struct:MachNDR
int_rep	runtime\defs_darwin_386.h	/^	uint8	int_rep;$/;"	m	struct:MachNDR
it_interval	runtime\defs_darwin_386.h	/^	Timeval	it_interval;$/;"	m	struct:Itimerval
it_value	runtime\defs_darwin_386.h	/^	Timeval	it_value;$/;"	m	struct:Itimerval
mig_encoding	runtime\defs_darwin_386.h	/^	uint8	mig_encoding;$/;"	m	struct:MachNDR
mig_vers	runtime\defs_darwin_386.h	/^	uint8	mig_vers;$/;"	m	struct:MachNDR
mmst_reg	runtime\defs_darwin_386.h	/^	int8	mmst_reg[10];$/;"	m	struct:RegMMST
mmst_rsrv	runtime\defs_darwin_386.h	/^	int8	mmst_rsrv[6];$/;"	m	struct:RegMMST
msgh_bits	runtime\defs_darwin_386.h	/^	uint32	msgh_bits;$/;"	m	struct:MachHeader
msgh_descriptor_count	runtime\defs_darwin_386.h	/^	uint32	msgh_descriptor_count;$/;"	m	struct:MachBody
msgh_id	runtime\defs_darwin_386.h	/^	int32	msgh_id;$/;"	m	struct:MachHeader
msgh_local_port	runtime\defs_darwin_386.h	/^	uint32	msgh_local_port;$/;"	m	struct:MachHeader
msgh_remote_port	runtime\defs_darwin_386.h	/^	uint32	msgh_remote_port;$/;"	m	struct:MachHeader
msgh_reserved	runtime\defs_darwin_386.h	/^	uint32	msgh_reserved;$/;"	m	struct:MachHeader
msgh_size	runtime\defs_darwin_386.h	/^	uint32	msgh_size;$/;"	m	struct:MachHeader
name	runtime\defs_darwin_386.h	/^	uint32	name;$/;"	m	struct:MachPort
pad1	runtime\defs_darwin_386.h	/^	uint32	pad1;$/;"	m	struct:MachPort
pad2	runtime\defs_darwin_386.h	/^	uint16	pad2;$/;"	m	struct:MachPort
r10	runtime\defs_darwin_386.h	/^	uint64	r10;$/;"	m	struct:Regs64
r11	runtime\defs_darwin_386.h	/^	uint64	r11;$/;"	m	struct:Regs64
r12	runtime\defs_darwin_386.h	/^	uint64	r12;$/;"	m	struct:Regs64
r13	runtime\defs_darwin_386.h	/^	uint64	r13;$/;"	m	struct:Regs64
r14	runtime\defs_darwin_386.h	/^	uint64	r14;$/;"	m	struct:Regs64
r15	runtime\defs_darwin_386.h	/^	uint64	r15;$/;"	m	struct:Regs64
r8	runtime\defs_darwin_386.h	/^	uint64	r8;$/;"	m	struct:Regs64
r9	runtime\defs_darwin_386.h	/^	uint64	r9;$/;"	m	struct:Regs64
rax	runtime\defs_darwin_386.h	/^	uint64	rax;$/;"	m	struct:Regs64
rbp	runtime\defs_darwin_386.h	/^	uint64	rbp;$/;"	m	struct:Regs64
rbx	runtime\defs_darwin_386.h	/^	uint64	rbx;$/;"	m	struct:Regs64
rcx	runtime\defs_darwin_386.h	/^	uint64	rcx;$/;"	m	struct:Regs64
rdi	runtime\defs_darwin_386.h	/^	uint64	rdi;$/;"	m	struct:Regs64
rdx	runtime\defs_darwin_386.h	/^	uint64	rdx;$/;"	m	struct:Regs64
reserved1	runtime\defs_darwin_386.h	/^	uint8	reserved1;$/;"	m	struct:MachNDR
reserved2	runtime\defs_darwin_386.h	/^	uint8	reserved2;$/;"	m	struct:MachNDR
rflags	runtime\defs_darwin_386.h	/^	uint64	rflags;$/;"	m	struct:Regs64
rip	runtime\defs_darwin_386.h	/^	uint64	rip;$/;"	m	struct:Regs64
rsi	runtime\defs_darwin_386.h	/^	uint64	rsi;$/;"	m	struct:Regs64
rsp	runtime\defs_darwin_386.h	/^	uint64	rsp;$/;"	m	struct:Regs64
sa_flags	runtime\defs_darwin_386.h	/^	int32	sa_flags;$/;"	m	struct:Sigaction
sa_mask	runtime\defs_darwin_386.h	/^	uint32	sa_mask;$/;"	m	struct:Sigaction
sa_tramp	runtime\defs_darwin_386.h	/^	void	*sa_tramp;$/;"	m	struct:Sigaction
si_addr	runtime\defs_darwin_386.h	/^	byte	*si_addr;$/;"	m	struct:Siginfo
si_band	runtime\defs_darwin_386.h	/^	int32	si_band;$/;"	m	struct:Siginfo
si_code	runtime\defs_darwin_386.h	/^	int32	si_code;$/;"	m	struct:Siginfo
si_errno	runtime\defs_darwin_386.h	/^	int32	si_errno;$/;"	m	struct:Siginfo
si_pid	runtime\defs_darwin_386.h	/^	int32	si_pid;$/;"	m	struct:Siginfo
si_signo	runtime\defs_darwin_386.h	/^	int32	si_signo;$/;"	m	struct:Siginfo
si_status	runtime\defs_darwin_386.h	/^	int32	si_status;$/;"	m	struct:Siginfo
si_uid	runtime\defs_darwin_386.h	/^	uint32	si_uid;$/;"	m	struct:Siginfo
si_value	runtime\defs_darwin_386.h	/^	byte	si_value[4];$/;"	m	struct:Siginfo
ss	runtime\defs_darwin_386.h	/^	Regs32	ss;$/;"	m	struct:Mcontext32
ss	runtime\defs_darwin_386.h	/^	Regs64	ss;$/;"	m	struct:Mcontext64
ss	runtime\defs_darwin_386.h	/^	uint32	ss;$/;"	m	struct:Regs32
ss_flags	runtime\defs_darwin_386.h	/^	int32	ss_flags;$/;"	m	struct:StackT
ss_size	runtime\defs_darwin_386.h	/^	uint32	ss_size;$/;"	m	struct:StackT
ss_sp	runtime\defs_darwin_386.h	/^	byte	*ss_sp;$/;"	m	struct:StackT
trapno	runtime\defs_darwin_386.h	/^	uint16	trapno;$/;"	m	struct:ExceptionState32
trapno	runtime\defs_darwin_386.h	/^	uint16	trapno;$/;"	m	struct:ExceptionState64
tv_nsec	runtime\defs_darwin_386.h	/^	int32	tv_nsec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_darwin_386.h	/^	int32	tv_sec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_darwin_386.h	/^	int32	tv_sec;$/;"	m	struct:Timeval
tv_usec	runtime\defs_darwin_386.h	/^	int32	tv_usec;$/;"	m	struct:Timeval
type	runtime\defs_darwin_386.h	/^	uint8	type;$/;"	m	struct:MachPort
uc_link	runtime\defs_darwin_386.h	/^	Ucontext	*uc_link;$/;"	m	struct:Ucontext
uc_mcontext	runtime\defs_darwin_386.h	/^	Mcontext32	*uc_mcontext;$/;"	m	struct:Ucontext
uc_mcsize	runtime\defs_darwin_386.h	/^	uint32	uc_mcsize;$/;"	m	struct:Ucontext
uc_onstack	runtime\defs_darwin_386.h	/^	int32	uc_onstack;$/;"	m	struct:Ucontext
uc_sigmask	runtime\defs_darwin_386.h	/^	uint32	uc_sigmask;$/;"	m	struct:Ucontext
uc_stack	runtime\defs_darwin_386.h	/^	StackT	uc_stack;$/;"	m	struct:Ucontext
udata	runtime\defs_darwin_386.h	/^	byte	*udata;$/;"	m	struct:Kevent
xmm_reg	runtime\defs_darwin_386.h	/^	int8	xmm_reg[16];$/;"	m	struct:RegXMM
BUS_ADRALN	runtime\defs_darwin_amd64.h	/^	BUS_ADRALN	= 0x1,$/;"	e	enum:__anon10
BUS_ADRERR	runtime\defs_darwin_amd64.h	/^	BUS_ADRERR	= 0x2,$/;"	e	enum:__anon10
BUS_OBJERR	runtime\defs_darwin_amd64.h	/^	BUS_OBJERR	= 0x3,$/;"	e	enum:__anon10
EFAULT	runtime\defs_darwin_amd64.h	/^	EFAULT	= 0xe,$/;"	e	enum:__anon10
EINTR	runtime\defs_darwin_amd64.h	/^	EINTR	= 0x4,$/;"	e	enum:__anon10
EVFILT_READ	runtime\defs_darwin_amd64.h	/^	EVFILT_READ	= -0x1,$/;"	e	enum:__anon10
EVFILT_WRITE	runtime\defs_darwin_amd64.h	/^	EVFILT_WRITE	= -0x2,$/;"	e	enum:__anon10
EV_ADD	runtime\defs_darwin_amd64.h	/^	EV_ADD		= 0x1,$/;"	e	enum:__anon10
EV_CLEAR	runtime\defs_darwin_amd64.h	/^	EV_CLEAR	= 0x20,$/;"	e	enum:__anon10
EV_DELETE	runtime\defs_darwin_amd64.h	/^	EV_DELETE	= 0x2,$/;"	e	enum:__anon10
EV_ERROR	runtime\defs_darwin_amd64.h	/^	EV_ERROR	= 0x4000,$/;"	e	enum:__anon10
EV_RECEIPT	runtime\defs_darwin_amd64.h	/^	EV_RECEIPT	= 0x40,$/;"	e	enum:__anon10
ExceptionState32	runtime\defs_darwin_amd64.h	/^struct ExceptionState32 {$/;"	s
ExceptionState32	runtime\defs_darwin_amd64.h	/^typedef struct ExceptionState32 ExceptionState32;$/;"	t	typeref:struct:ExceptionState32
ExceptionState64	runtime\defs_darwin_amd64.h	/^struct ExceptionState64 {$/;"	s
ExceptionState64	runtime\defs_darwin_amd64.h	/^typedef struct ExceptionState64 ExceptionState64;$/;"	t	typeref:struct:ExceptionState64
FPControl	runtime\defs_darwin_amd64.h	/^struct FPControl {$/;"	s
FPControl	runtime\defs_darwin_amd64.h	/^typedef struct FPControl FPControl;$/;"	t	typeref:struct:FPControl
FPE_FLTDIV	runtime\defs_darwin_amd64.h	/^	FPE_FLTDIV	= 0x1,$/;"	e	enum:__anon10
FPE_FLTINV	runtime\defs_darwin_amd64.h	/^	FPE_FLTINV	= 0x5,$/;"	e	enum:__anon10
FPE_FLTOVF	runtime\defs_darwin_amd64.h	/^	FPE_FLTOVF	= 0x2,$/;"	e	enum:__anon10
FPE_FLTRES	runtime\defs_darwin_amd64.h	/^	FPE_FLTRES	= 0x4,$/;"	e	enum:__anon10
FPE_FLTSUB	runtime\defs_darwin_amd64.h	/^	FPE_FLTSUB	= 0x6,$/;"	e	enum:__anon10
FPE_FLTUND	runtime\defs_darwin_amd64.h	/^	FPE_FLTUND	= 0x3,$/;"	e	enum:__anon10
FPE_INTDIV	runtime\defs_darwin_amd64.h	/^	FPE_INTDIV	= 0x7,$/;"	e	enum:__anon10
FPE_INTOVF	runtime\defs_darwin_amd64.h	/^	FPE_INTOVF	= 0x8,$/;"	e	enum:__anon10
FPStatus	runtime\defs_darwin_amd64.h	/^struct FPStatus {$/;"	s
FPStatus	runtime\defs_darwin_amd64.h	/^typedef struct FPStatus FPStatus;$/;"	t	typeref:struct:FPStatus
FloatState32	runtime\defs_darwin_amd64.h	/^struct FloatState32 {$/;"	s
FloatState32	runtime\defs_darwin_amd64.h	/^typedef struct FloatState32 FloatState32;$/;"	t	typeref:struct:FloatState32
FloatState64	runtime\defs_darwin_amd64.h	/^struct FloatState64 {$/;"	s
FloatState64	runtime\defs_darwin_amd64.h	/^typedef struct FloatState64 FloatState64;$/;"	t	typeref:struct:FloatState64
ITIMER_PROF	runtime\defs_darwin_amd64.h	/^	ITIMER_PROF	= 0x2,$/;"	e	enum:__anon10
ITIMER_REAL	runtime\defs_darwin_amd64.h	/^	ITIMER_REAL	= 0x0,$/;"	e	enum:__anon10
ITIMER_VIRTUAL	runtime\defs_darwin_amd64.h	/^	ITIMER_VIRTUAL	= 0x1,$/;"	e	enum:__anon10
Itimerval	runtime\defs_darwin_amd64.h	/^struct Itimerval {$/;"	s
Itimerval	runtime\defs_darwin_amd64.h	/^typedef struct Itimerval Itimerval;$/;"	t	typeref:struct:Itimerval
Kevent	runtime\defs_darwin_amd64.h	/^struct Kevent {$/;"	s
Kevent	runtime\defs_darwin_amd64.h	/^typedef struct Kevent Kevent;$/;"	t	typeref:struct:Kevent
MACH_MSGH_BITS_COMPLEX	runtime\defs_darwin_amd64.h	/^	MACH_MSGH_BITS_COMPLEX	= 0x80000000,$/;"	e	enum:__anon10
MACH_MSG_OOL_DESCRIPTOR	runtime\defs_darwin_amd64.h	/^	MACH_MSG_OOL_DESCRIPTOR			= 0x1,$/;"	e	enum:__anon10
MACH_MSG_OOL_PORTS_DESCRIPTOR	runtime\defs_darwin_amd64.h	/^	MACH_MSG_OOL_PORTS_DESCRIPTOR		= 0x2,$/;"	e	enum:__anon10
MACH_MSG_OOL_VOLATILE_DESCRIPTOR	runtime\defs_darwin_amd64.h	/^	MACH_MSG_OOL_VOLATILE_DESCRIPTOR	= 0x3,$/;"	e	enum:__anon10
MACH_MSG_PORT_DESCRIPTOR	runtime\defs_darwin_amd64.h	/^	MACH_MSG_PORT_DESCRIPTOR		= 0x0,$/;"	e	enum:__anon10
MACH_MSG_TYPE_COPY_RECEIVE	runtime\defs_darwin_amd64.h	/^	MACH_MSG_TYPE_COPY_RECEIVE	= 0x16,$/;"	e	enum:__anon10
MACH_MSG_TYPE_COPY_SEND	runtime\defs_darwin_amd64.h	/^	MACH_MSG_TYPE_COPY_SEND		= 0x13,$/;"	e	enum:__anon10
MACH_MSG_TYPE_MAKE_SEND	runtime\defs_darwin_amd64.h	/^	MACH_MSG_TYPE_MAKE_SEND		= 0x14,$/;"	e	enum:__anon10
MACH_MSG_TYPE_MAKE_SEND_ONCE	runtime\defs_darwin_amd64.h	/^	MACH_MSG_TYPE_MAKE_SEND_ONCE	= 0x15,$/;"	e	enum:__anon10
MACH_MSG_TYPE_MOVE_RECEIVE	runtime\defs_darwin_amd64.h	/^	MACH_MSG_TYPE_MOVE_RECEIVE	= 0x10,$/;"	e	enum:__anon10
MACH_MSG_TYPE_MOVE_SEND	runtime\defs_darwin_amd64.h	/^	MACH_MSG_TYPE_MOVE_SEND		= 0x11,$/;"	e	enum:__anon10
MACH_MSG_TYPE_MOVE_SEND_ONCE	runtime\defs_darwin_amd64.h	/^	MACH_MSG_TYPE_MOVE_SEND_ONCE	= 0x12,$/;"	e	enum:__anon10
MACH_RCV_INTERRUPT	runtime\defs_darwin_amd64.h	/^	MACH_RCV_INTERRUPT	= 0x400,$/;"	e	enum:__anon10
MACH_RCV_LARGE	runtime\defs_darwin_amd64.h	/^	MACH_RCV_LARGE	= 0x4,$/;"	e	enum:__anon10
MACH_RCV_MSG	runtime\defs_darwin_amd64.h	/^	MACH_RCV_MSG	= 0x2,$/;"	e	enum:__anon10
MACH_RCV_NOTIFY	runtime\defs_darwin_amd64.h	/^	MACH_RCV_NOTIFY		= 0x200,$/;"	e	enum:__anon10
MACH_RCV_OVERWRITE	runtime\defs_darwin_amd64.h	/^	MACH_RCV_OVERWRITE	= 0x1000,$/;"	e	enum:__anon10
MACH_RCV_TIMEOUT	runtime\defs_darwin_amd64.h	/^	MACH_RCV_TIMEOUT	= 0x100,$/;"	e	enum:__anon10
MACH_SEND_ALWAYS	runtime\defs_darwin_amd64.h	/^	MACH_SEND_ALWAYS	= 0x10000,$/;"	e	enum:__anon10
MACH_SEND_INTERRUPT	runtime\defs_darwin_amd64.h	/^	MACH_SEND_INTERRUPT	= 0x40,$/;"	e	enum:__anon10
MACH_SEND_MSG	runtime\defs_darwin_amd64.h	/^	MACH_SEND_MSG	= 0x1,$/;"	e	enum:__anon10
MACH_SEND_TIMEOUT	runtime\defs_darwin_amd64.h	/^	MACH_SEND_TIMEOUT	= 0x10,$/;"	e	enum:__anon10
MACH_SEND_TRAILER	runtime\defs_darwin_amd64.h	/^	MACH_SEND_TRAILER	= 0x20000,$/;"	e	enum:__anon10
MADV_DONTNEED	runtime\defs_darwin_amd64.h	/^	MADV_DONTNEED	= 0x4,$/;"	e	enum:__anon10
MADV_FREE	runtime\defs_darwin_amd64.h	/^	MADV_FREE	= 0x5,$/;"	e	enum:__anon10
MAP_ANON	runtime\defs_darwin_amd64.h	/^	MAP_ANON	= 0x1000,$/;"	e	enum:__anon10
MAP_FIXED	runtime\defs_darwin_amd64.h	/^	MAP_FIXED	= 0x10,$/;"	e	enum:__anon10
MAP_PRIVATE	runtime\defs_darwin_amd64.h	/^	MAP_PRIVATE	= 0x2,$/;"	e	enum:__anon10
MachBody	runtime\defs_darwin_amd64.h	/^struct MachBody {$/;"	s
MachBody	runtime\defs_darwin_amd64.h	/^typedef struct MachBody MachBody;$/;"	t	typeref:struct:MachBody
MachHeader	runtime\defs_darwin_amd64.h	/^struct MachHeader {$/;"	s
MachHeader	runtime\defs_darwin_amd64.h	/^typedef struct MachHeader MachHeader;$/;"	t	typeref:struct:MachHeader
MachNDR	runtime\defs_darwin_amd64.h	/^struct MachNDR {$/;"	s
MachNDR	runtime\defs_darwin_amd64.h	/^typedef struct MachNDR MachNDR;$/;"	t	typeref:struct:MachNDR
MachPort	runtime\defs_darwin_amd64.h	/^struct MachPort {$/;"	s
MachPort	runtime\defs_darwin_amd64.h	/^typedef struct MachPort MachPort;$/;"	t	typeref:struct:MachPort
Mcontext32	runtime\defs_darwin_amd64.h	/^struct Mcontext32 {$/;"	s
Mcontext32	runtime\defs_darwin_amd64.h	/^typedef struct Mcontext32 Mcontext32;$/;"	t	typeref:struct:Mcontext32
Mcontext64	runtime\defs_darwin_amd64.h	/^struct Mcontext64 {$/;"	s
Mcontext64	runtime\defs_darwin_amd64.h	/^typedef struct Mcontext64 Mcontext64;$/;"	t	typeref:struct:Mcontext64
NDR_CHAR_ASCII	runtime\defs_darwin_amd64.h	/^	NDR_CHAR_ASCII		= 0x0,$/;"	e	enum:__anon10
NDR_FLOAT_IEEE	runtime\defs_darwin_amd64.h	/^	NDR_FLOAT_IEEE		= 0x0,$/;"	e	enum:__anon10
NDR_INT_BIG_ENDIAN	runtime\defs_darwin_amd64.h	/^	NDR_INT_BIG_ENDIAN	= 0x0,$/;"	e	enum:__anon10
NDR_INT_LITTLE_ENDIAN	runtime\defs_darwin_amd64.h	/^	NDR_INT_LITTLE_ENDIAN	= 0x1,$/;"	e	enum:__anon10
NDR_PROTOCOL_2_0	runtime\defs_darwin_amd64.h	/^	NDR_PROTOCOL_2_0	= 0x0,$/;"	e	enum:__anon10
PROT_EXEC	runtime\defs_darwin_amd64.h	/^	PROT_EXEC	= 0x4,$/;"	e	enum:__anon10
PROT_NONE	runtime\defs_darwin_amd64.h	/^	PROT_NONE	= 0x0,$/;"	e	enum:__anon10
PROT_READ	runtime\defs_darwin_amd64.h	/^	PROT_READ	= 0x1,$/;"	e	enum:__anon10
PROT_WRITE	runtime\defs_darwin_amd64.h	/^	PROT_WRITE	= 0x2,$/;"	e	enum:__anon10
Pad_cgo_0	runtime\defs_darwin_amd64.h	/^	byte	Pad_cgo_0[2];$/;"	m	struct:FPControl
Pad_cgo_0	runtime\defs_darwin_amd64.h	/^	byte	Pad_cgo_0[2];$/;"	m	struct:FPStatus
Pad_cgo_0	runtime\defs_darwin_amd64.h	/^	byte	Pad_cgo_0[4];$/;"	m	struct:Mcontext64
Pad_cgo_0	runtime\defs_darwin_amd64.h	/^	byte	Pad_cgo_0[4];$/;"	m	struct:StackT
Pad_cgo_0	runtime\defs_darwin_amd64.h	/^	byte	Pad_cgo_0[4];$/;"	m	struct:Timeval
RegMMST	runtime\defs_darwin_amd64.h	/^struct RegMMST {$/;"	s
RegMMST	runtime\defs_darwin_amd64.h	/^typedef struct RegMMST RegMMST;$/;"	t	typeref:struct:RegMMST
RegXMM	runtime\defs_darwin_amd64.h	/^struct RegXMM {$/;"	s
RegXMM	runtime\defs_darwin_amd64.h	/^typedef struct RegXMM RegXMM;$/;"	t	typeref:struct:RegXMM
Regs32	runtime\defs_darwin_amd64.h	/^struct Regs32 {$/;"	s
Regs32	runtime\defs_darwin_amd64.h	/^typedef struct Regs32 Regs32;$/;"	t	typeref:struct:Regs32
Regs64	runtime\defs_darwin_amd64.h	/^struct Regs64 {$/;"	s
Regs64	runtime\defs_darwin_amd64.h	/^typedef struct Regs64 Regs64;$/;"	t	typeref:struct:Regs64
SA_64REGSET	runtime\defs_darwin_amd64.h	/^	SA_64REGSET	= 0x200,$/;"	e	enum:__anon10
SA_ONSTACK	runtime\defs_darwin_amd64.h	/^	SA_ONSTACK	= 0x1,$/;"	e	enum:__anon10
SA_RESTART	runtime\defs_darwin_amd64.h	/^	SA_RESTART	= 0x2,$/;"	e	enum:__anon10
SA_SIGINFO	runtime\defs_darwin_amd64.h	/^	SA_SIGINFO	= 0x40,$/;"	e	enum:__anon10
SA_USERTRAMP	runtime\defs_darwin_amd64.h	/^	SA_USERTRAMP	= 0x100,$/;"	e	enum:__anon10
SEGV_ACCERR	runtime\defs_darwin_amd64.h	/^	SEGV_ACCERR	= 0x2,$/;"	e	enum:__anon10
SEGV_MAPERR	runtime\defs_darwin_amd64.h	/^	SEGV_MAPERR	= 0x1,$/;"	e	enum:__anon10
SIGABRT	runtime\defs_darwin_amd64.h	/^	SIGABRT		= 0x6,$/;"	e	enum:__anon10
SIGALRM	runtime\defs_darwin_amd64.h	/^	SIGALRM		= 0xe,$/;"	e	enum:__anon10
SIGBUS	runtime\defs_darwin_amd64.h	/^	SIGBUS		= 0xa,$/;"	e	enum:__anon10
SIGCHLD	runtime\defs_darwin_amd64.h	/^	SIGCHLD		= 0x14,$/;"	e	enum:__anon10
SIGCONT	runtime\defs_darwin_amd64.h	/^	SIGCONT		= 0x13,$/;"	e	enum:__anon10
SIGEMT	runtime\defs_darwin_amd64.h	/^	SIGEMT		= 0x7,$/;"	e	enum:__anon10
SIGFPE	runtime\defs_darwin_amd64.h	/^	SIGFPE		= 0x8,$/;"	e	enum:__anon10
SIGHUP	runtime\defs_darwin_amd64.h	/^	SIGHUP		= 0x1,$/;"	e	enum:__anon10
SIGILL	runtime\defs_darwin_amd64.h	/^	SIGILL		= 0x4,$/;"	e	enum:__anon10
SIGINFO	runtime\defs_darwin_amd64.h	/^	SIGINFO		= 0x1d,$/;"	e	enum:__anon10
SIGINT	runtime\defs_darwin_amd64.h	/^	SIGINT		= 0x2,$/;"	e	enum:__anon10
SIGIO	runtime\defs_darwin_amd64.h	/^	SIGIO		= 0x17,$/;"	e	enum:__anon10
SIGKILL	runtime\defs_darwin_amd64.h	/^	SIGKILL		= 0x9,$/;"	e	enum:__anon10
SIGPIPE	runtime\defs_darwin_amd64.h	/^	SIGPIPE		= 0xd,$/;"	e	enum:__anon10
SIGPROF	runtime\defs_darwin_amd64.h	/^	SIGPROF		= 0x1b,$/;"	e	enum:__anon10
SIGQUIT	runtime\defs_darwin_amd64.h	/^	SIGQUIT		= 0x3,$/;"	e	enum:__anon10
SIGSEGV	runtime\defs_darwin_amd64.h	/^	SIGSEGV		= 0xb,$/;"	e	enum:__anon10
SIGSTOP	runtime\defs_darwin_amd64.h	/^	SIGSTOP		= 0x11,$/;"	e	enum:__anon10
SIGSYS	runtime\defs_darwin_amd64.h	/^	SIGSYS		= 0xc,$/;"	e	enum:__anon10
SIGTERM	runtime\defs_darwin_amd64.h	/^	SIGTERM		= 0xf,$/;"	e	enum:__anon10
SIGTRAP	runtime\defs_darwin_amd64.h	/^	SIGTRAP		= 0x5,$/;"	e	enum:__anon10
SIGTSTP	runtime\defs_darwin_amd64.h	/^	SIGTSTP		= 0x12,$/;"	e	enum:__anon10
SIGTTIN	runtime\defs_darwin_amd64.h	/^	SIGTTIN		= 0x15,$/;"	e	enum:__anon10
SIGTTOU	runtime\defs_darwin_amd64.h	/^	SIGTTOU		= 0x16,$/;"	e	enum:__anon10
SIGURG	runtime\defs_darwin_amd64.h	/^	SIGURG		= 0x10,$/;"	e	enum:__anon10
SIGUSR1	runtime\defs_darwin_amd64.h	/^	SIGUSR1		= 0x1e,$/;"	e	enum:__anon10
SIGUSR2	runtime\defs_darwin_amd64.h	/^	SIGUSR2		= 0x1f,$/;"	e	enum:__anon10
SIGVTALRM	runtime\defs_darwin_amd64.h	/^	SIGVTALRM	= 0x1a,$/;"	e	enum:__anon10
SIGWINCH	runtime\defs_darwin_amd64.h	/^	SIGWINCH	= 0x1c,$/;"	e	enum:__anon10
SIGXCPU	runtime\defs_darwin_amd64.h	/^	SIGXCPU		= 0x18,$/;"	e	enum:__anon10
SIGXFSZ	runtime\defs_darwin_amd64.h	/^	SIGXFSZ		= 0x19,$/;"	e	enum:__anon10
Sigaction	runtime\defs_darwin_amd64.h	/^struct Sigaction {$/;"	s
Sigaction	runtime\defs_darwin_amd64.h	/^typedef struct Sigaction Sigaction;$/;"	t	typeref:struct:Sigaction
Sighandler	runtime\defs_darwin_amd64.h	/^typedef	byte	Sighandler[8];$/;"	t
Siginfo	runtime\defs_darwin_amd64.h	/^struct Siginfo {$/;"	s
Siginfo	runtime\defs_darwin_amd64.h	/^typedef struct Siginfo Siginfo;$/;"	t	typeref:struct:Siginfo
Sigval	runtime\defs_darwin_amd64.h	/^typedef	byte	Sigval[8];$/;"	t
StackT	runtime\defs_darwin_amd64.h	/^struct StackT {$/;"	s
StackT	runtime\defs_darwin_amd64.h	/^typedef struct StackT StackT;$/;"	t	typeref:struct:StackT
Timespec	runtime\defs_darwin_amd64.h	/^struct Timespec {$/;"	s
Timespec	runtime\defs_darwin_amd64.h	/^typedef struct Timespec Timespec;$/;"	t	typeref:struct:Timespec
Timeval	runtime\defs_darwin_amd64.h	/^struct Timeval {$/;"	s
Timeval	runtime\defs_darwin_amd64.h	/^typedef struct Timeval Timeval;$/;"	t	typeref:struct:Timeval
Ucontext	runtime\defs_darwin_amd64.h	/^struct Ucontext {$/;"	s
Ucontext	runtime\defs_darwin_amd64.h	/^typedef struct Ucontext Ucontext;$/;"	t	typeref:struct:Ucontext
__pad	runtime\defs_darwin_amd64.h	/^	uint64	__pad[7];$/;"	m	struct:Siginfo
__sigaction_u	runtime\defs_darwin_amd64.h	/^	byte	__sigaction_u[8];$/;"	m	struct:Sigaction
char_rep	runtime\defs_darwin_amd64.h	/^	uint8	char_rep;$/;"	m	struct:MachNDR
cpu	runtime\defs_darwin_amd64.h	/^	uint16	cpu;$/;"	m	struct:ExceptionState32
cpu	runtime\defs_darwin_amd64.h	/^	uint16	cpu;$/;"	m	struct:ExceptionState64
cs	runtime\defs_darwin_amd64.h	/^	uint32	cs;$/;"	m	struct:Regs32
cs	runtime\defs_darwin_amd64.h	/^	uint64	cs;$/;"	m	struct:Regs64
data	runtime\defs_darwin_amd64.h	/^	int64	data;$/;"	m	struct:Kevent
disposition	runtime\defs_darwin_amd64.h	/^	uint8	disposition;$/;"	m	struct:MachPort
ds	runtime\defs_darwin_amd64.h	/^	uint32	ds;$/;"	m	struct:Regs32
eax	runtime\defs_darwin_amd64.h	/^	uint32	eax;$/;"	m	struct:Regs32
ebp	runtime\defs_darwin_amd64.h	/^	uint32	ebp;$/;"	m	struct:Regs32
ebx	runtime\defs_darwin_amd64.h	/^	uint32	ebx;$/;"	m	struct:Regs32
ecx	runtime\defs_darwin_amd64.h	/^	uint32	ecx;$/;"	m	struct:Regs32
edi	runtime\defs_darwin_amd64.h	/^	uint32	edi;$/;"	m	struct:Regs32
edx	runtime\defs_darwin_amd64.h	/^	uint32	edx;$/;"	m	struct:Regs32
eflags	runtime\defs_darwin_amd64.h	/^	uint32	eflags;$/;"	m	struct:Regs32
eip	runtime\defs_darwin_amd64.h	/^	uint32	eip;$/;"	m	struct:Regs32
err	runtime\defs_darwin_amd64.h	/^	uint32	err;$/;"	m	struct:ExceptionState32
err	runtime\defs_darwin_amd64.h	/^	uint32	err;$/;"	m	struct:ExceptionState64
es	runtime\defs_darwin_amd64.h	/^	ExceptionState32	es;$/;"	m	struct:Mcontext32
es	runtime\defs_darwin_amd64.h	/^	ExceptionState64	es;$/;"	m	struct:Mcontext64
es	runtime\defs_darwin_amd64.h	/^	uint32	es;$/;"	m	struct:Regs32
esi	runtime\defs_darwin_amd64.h	/^	uint32	esi;$/;"	m	struct:Regs32
esp	runtime\defs_darwin_amd64.h	/^	uint32	esp;$/;"	m	struct:Regs32
faultvaddr	runtime\defs_darwin_amd64.h	/^	uint32	faultvaddr;$/;"	m	struct:ExceptionState32
faultvaddr	runtime\defs_darwin_amd64.h	/^	uint64	faultvaddr;$/;"	m	struct:ExceptionState64
fflags	runtime\defs_darwin_amd64.h	/^	uint32	fflags;$/;"	m	struct:Kevent
filter	runtime\defs_darwin_amd64.h	/^	int16	filter;$/;"	m	struct:Kevent
flags	runtime\defs_darwin_amd64.h	/^	uint16	flags;$/;"	m	struct:Kevent
float_rep	runtime\defs_darwin_amd64.h	/^	uint8	float_rep;$/;"	m	struct:MachNDR
fpu_cs	runtime\defs_darwin_amd64.h	/^	uint16	fpu_cs;$/;"	m	struct:FloatState32
fpu_cs	runtime\defs_darwin_amd64.h	/^	uint16	fpu_cs;$/;"	m	struct:FloatState64
fpu_dp	runtime\defs_darwin_amd64.h	/^	uint32	fpu_dp;$/;"	m	struct:FloatState32
fpu_dp	runtime\defs_darwin_amd64.h	/^	uint32	fpu_dp;$/;"	m	struct:FloatState64
fpu_ds	runtime\defs_darwin_amd64.h	/^	uint16	fpu_ds;$/;"	m	struct:FloatState32
fpu_ds	runtime\defs_darwin_amd64.h	/^	uint16	fpu_ds;$/;"	m	struct:FloatState64
fpu_fcw	runtime\defs_darwin_amd64.h	/^	FPControl	fpu_fcw;$/;"	m	struct:FloatState32
fpu_fcw	runtime\defs_darwin_amd64.h	/^	FPControl	fpu_fcw;$/;"	m	struct:FloatState64
fpu_fop	runtime\defs_darwin_amd64.h	/^	uint16	fpu_fop;$/;"	m	struct:FloatState32
fpu_fop	runtime\defs_darwin_amd64.h	/^	uint16	fpu_fop;$/;"	m	struct:FloatState64
fpu_fsw	runtime\defs_darwin_amd64.h	/^	FPStatus	fpu_fsw;$/;"	m	struct:FloatState32
fpu_fsw	runtime\defs_darwin_amd64.h	/^	FPStatus	fpu_fsw;$/;"	m	struct:FloatState64
fpu_ftw	runtime\defs_darwin_amd64.h	/^	uint8	fpu_ftw;$/;"	m	struct:FloatState32
fpu_ftw	runtime\defs_darwin_amd64.h	/^	uint8	fpu_ftw;$/;"	m	struct:FloatState64
fpu_ip	runtime\defs_darwin_amd64.h	/^	uint32	fpu_ip;$/;"	m	struct:FloatState32
fpu_ip	runtime\defs_darwin_amd64.h	/^	uint32	fpu_ip;$/;"	m	struct:FloatState64
fpu_mxcsr	runtime\defs_darwin_amd64.h	/^	uint32	fpu_mxcsr;$/;"	m	struct:FloatState32
fpu_mxcsr	runtime\defs_darwin_amd64.h	/^	uint32	fpu_mxcsr;$/;"	m	struct:FloatState64
fpu_mxcsrmask	runtime\defs_darwin_amd64.h	/^	uint32	fpu_mxcsrmask;$/;"	m	struct:FloatState32
fpu_mxcsrmask	runtime\defs_darwin_amd64.h	/^	uint32	fpu_mxcsrmask;$/;"	m	struct:FloatState64
fpu_reserved	runtime\defs_darwin_amd64.h	/^	int32	fpu_reserved[2];$/;"	m	struct:FloatState32
fpu_reserved	runtime\defs_darwin_amd64.h	/^	int32	fpu_reserved[2];$/;"	m	struct:FloatState64
fpu_reserved1	runtime\defs_darwin_amd64.h	/^	int32	fpu_reserved1;$/;"	m	struct:FloatState32
fpu_reserved1	runtime\defs_darwin_amd64.h	/^	int32	fpu_reserved1;$/;"	m	struct:FloatState64
fpu_rsrv1	runtime\defs_darwin_amd64.h	/^	uint8	fpu_rsrv1;$/;"	m	struct:FloatState32
fpu_rsrv1	runtime\defs_darwin_amd64.h	/^	uint8	fpu_rsrv1;$/;"	m	struct:FloatState64
fpu_rsrv2	runtime\defs_darwin_amd64.h	/^	uint16	fpu_rsrv2;$/;"	m	struct:FloatState32
fpu_rsrv2	runtime\defs_darwin_amd64.h	/^	uint16	fpu_rsrv2;$/;"	m	struct:FloatState64
fpu_rsrv3	runtime\defs_darwin_amd64.h	/^	uint16	fpu_rsrv3;$/;"	m	struct:FloatState32
fpu_rsrv3	runtime\defs_darwin_amd64.h	/^	uint16	fpu_rsrv3;$/;"	m	struct:FloatState64
fpu_rsrv4	runtime\defs_darwin_amd64.h	/^	int8	fpu_rsrv4[224];$/;"	m	struct:FloatState32
fpu_rsrv4	runtime\defs_darwin_amd64.h	/^	int8	fpu_rsrv4[96];$/;"	m	struct:FloatState64
fpu_stmm0	runtime\defs_darwin_amd64.h	/^	RegMMST	fpu_stmm0;$/;"	m	struct:FloatState32
fpu_stmm0	runtime\defs_darwin_amd64.h	/^	RegMMST	fpu_stmm0;$/;"	m	struct:FloatState64
fpu_stmm1	runtime\defs_darwin_amd64.h	/^	RegMMST	fpu_stmm1;$/;"	m	struct:FloatState32
fpu_stmm1	runtime\defs_darwin_amd64.h	/^	RegMMST	fpu_stmm1;$/;"	m	struct:FloatState64
fpu_stmm2	runtime\defs_darwin_amd64.h	/^	RegMMST	fpu_stmm2;$/;"	m	struct:FloatState32
fpu_stmm2	runtime\defs_darwin_amd64.h	/^	RegMMST	fpu_stmm2;$/;"	m	struct:FloatState64
fpu_stmm3	runtime\defs_darwin_amd64.h	/^	RegMMST	fpu_stmm3;$/;"	m	struct:FloatState32
fpu_stmm3	runtime\defs_darwin_amd64.h	/^	RegMMST	fpu_stmm3;$/;"	m	struct:FloatState64
fpu_stmm4	runtime\defs_darwin_amd64.h	/^	RegMMST	fpu_stmm4;$/;"	m	struct:FloatState32
fpu_stmm4	runtime\defs_darwin_amd64.h	/^	RegMMST	fpu_stmm4;$/;"	m	struct:FloatState64
fpu_stmm5	runtime\defs_darwin_amd64.h	/^	RegMMST	fpu_stmm5;$/;"	m	struct:FloatState32
fpu_stmm5	runtime\defs_darwin_amd64.h	/^	RegMMST	fpu_stmm5;$/;"	m	struct:FloatState64
fpu_stmm6	runtime\defs_darwin_amd64.h	/^	RegMMST	fpu_stmm6;$/;"	m	struct:FloatState32
fpu_stmm6	runtime\defs_darwin_amd64.h	/^	RegMMST	fpu_stmm6;$/;"	m	struct:FloatState64
fpu_stmm7	runtime\defs_darwin_amd64.h	/^	RegMMST	fpu_stmm7;$/;"	m	struct:FloatState32
fpu_stmm7	runtime\defs_darwin_amd64.h	/^	RegMMST	fpu_stmm7;$/;"	m	struct:FloatState64
fpu_xmm0	runtime\defs_darwin_amd64.h	/^	RegXMM	fpu_xmm0;$/;"	m	struct:FloatState32
fpu_xmm0	runtime\defs_darwin_amd64.h	/^	RegXMM	fpu_xmm0;$/;"	m	struct:FloatState64
fpu_xmm1	runtime\defs_darwin_amd64.h	/^	RegXMM	fpu_xmm1;$/;"	m	struct:FloatState32
fpu_xmm1	runtime\defs_darwin_amd64.h	/^	RegXMM	fpu_xmm1;$/;"	m	struct:FloatState64
fpu_xmm10	runtime\defs_darwin_amd64.h	/^	RegXMM	fpu_xmm10;$/;"	m	struct:FloatState64
fpu_xmm11	runtime\defs_darwin_amd64.h	/^	RegXMM	fpu_xmm11;$/;"	m	struct:FloatState64
fpu_xmm12	runtime\defs_darwin_amd64.h	/^	RegXMM	fpu_xmm12;$/;"	m	struct:FloatState64
fpu_xmm13	runtime\defs_darwin_amd64.h	/^	RegXMM	fpu_xmm13;$/;"	m	struct:FloatState64
fpu_xmm14	runtime\defs_darwin_amd64.h	/^	RegXMM	fpu_xmm14;$/;"	m	struct:FloatState64
fpu_xmm15	runtime\defs_darwin_amd64.h	/^	RegXMM	fpu_xmm15;$/;"	m	struct:FloatState64
fpu_xmm2	runtime\defs_darwin_amd64.h	/^	RegXMM	fpu_xmm2;$/;"	m	struct:FloatState32
fpu_xmm2	runtime\defs_darwin_amd64.h	/^	RegXMM	fpu_xmm2;$/;"	m	struct:FloatState64
fpu_xmm3	runtime\defs_darwin_amd64.h	/^	RegXMM	fpu_xmm3;$/;"	m	struct:FloatState32
fpu_xmm3	runtime\defs_darwin_amd64.h	/^	RegXMM	fpu_xmm3;$/;"	m	struct:FloatState64
fpu_xmm4	runtime\defs_darwin_amd64.h	/^	RegXMM	fpu_xmm4;$/;"	m	struct:FloatState32
fpu_xmm4	runtime\defs_darwin_amd64.h	/^	RegXMM	fpu_xmm4;$/;"	m	struct:FloatState64
fpu_xmm5	runtime\defs_darwin_amd64.h	/^	RegXMM	fpu_xmm5;$/;"	m	struct:FloatState32
fpu_xmm5	runtime\defs_darwin_amd64.h	/^	RegXMM	fpu_xmm5;$/;"	m	struct:FloatState64
fpu_xmm6	runtime\defs_darwin_amd64.h	/^	RegXMM	fpu_xmm6;$/;"	m	struct:FloatState32
fpu_xmm6	runtime\defs_darwin_amd64.h	/^	RegXMM	fpu_xmm6;$/;"	m	struct:FloatState64
fpu_xmm7	runtime\defs_darwin_amd64.h	/^	RegXMM	fpu_xmm7;$/;"	m	struct:FloatState32
fpu_xmm7	runtime\defs_darwin_amd64.h	/^	RegXMM	fpu_xmm7;$/;"	m	struct:FloatState64
fpu_xmm8	runtime\defs_darwin_amd64.h	/^	RegXMM	fpu_xmm8;$/;"	m	struct:FloatState64
fpu_xmm9	runtime\defs_darwin_amd64.h	/^	RegXMM	fpu_xmm9;$/;"	m	struct:FloatState64
fs	runtime\defs_darwin_amd64.h	/^	FloatState32	fs;$/;"	m	struct:Mcontext32
fs	runtime\defs_darwin_amd64.h	/^	FloatState64	fs;$/;"	m	struct:Mcontext64
fs	runtime\defs_darwin_amd64.h	/^	uint32	fs;$/;"	m	struct:Regs32
fs	runtime\defs_darwin_amd64.h	/^	uint64	fs;$/;"	m	struct:Regs64
gs	runtime\defs_darwin_amd64.h	/^	uint32	gs;$/;"	m	struct:Regs32
gs	runtime\defs_darwin_amd64.h	/^	uint64	gs;$/;"	m	struct:Regs64
ident	runtime\defs_darwin_amd64.h	/^	uint64	ident;$/;"	m	struct:Kevent
if_vers	runtime\defs_darwin_amd64.h	/^	uint8	if_vers;$/;"	m	struct:MachNDR
int_rep	runtime\defs_darwin_amd64.h	/^	uint8	int_rep;$/;"	m	struct:MachNDR
it_interval	runtime\defs_darwin_amd64.h	/^	Timeval	it_interval;$/;"	m	struct:Itimerval
it_value	runtime\defs_darwin_amd64.h	/^	Timeval	it_value;$/;"	m	struct:Itimerval
mig_encoding	runtime\defs_darwin_amd64.h	/^	uint8	mig_encoding;$/;"	m	struct:MachNDR
mig_vers	runtime\defs_darwin_amd64.h	/^	uint8	mig_vers;$/;"	m	struct:MachNDR
mmst_reg	runtime\defs_darwin_amd64.h	/^	int8	mmst_reg[10];$/;"	m	struct:RegMMST
mmst_rsrv	runtime\defs_darwin_amd64.h	/^	int8	mmst_rsrv[6];$/;"	m	struct:RegMMST
msgh_bits	runtime\defs_darwin_amd64.h	/^	uint32	msgh_bits;$/;"	m	struct:MachHeader
msgh_descriptor_count	runtime\defs_darwin_amd64.h	/^	uint32	msgh_descriptor_count;$/;"	m	struct:MachBody
msgh_id	runtime\defs_darwin_amd64.h	/^	int32	msgh_id;$/;"	m	struct:MachHeader
msgh_local_port	runtime\defs_darwin_amd64.h	/^	uint32	msgh_local_port;$/;"	m	struct:MachHeader
msgh_remote_port	runtime\defs_darwin_amd64.h	/^	uint32	msgh_remote_port;$/;"	m	struct:MachHeader
msgh_reserved	runtime\defs_darwin_amd64.h	/^	uint32	msgh_reserved;$/;"	m	struct:MachHeader
msgh_size	runtime\defs_darwin_amd64.h	/^	uint32	msgh_size;$/;"	m	struct:MachHeader
name	runtime\defs_darwin_amd64.h	/^	uint32	name;$/;"	m	struct:MachPort
pad1	runtime\defs_darwin_amd64.h	/^	uint32	pad1;$/;"	m	struct:MachPort
pad2	runtime\defs_darwin_amd64.h	/^	uint16	pad2;$/;"	m	struct:MachPort
r10	runtime\defs_darwin_amd64.h	/^	uint64	r10;$/;"	m	struct:Regs64
r11	runtime\defs_darwin_amd64.h	/^	uint64	r11;$/;"	m	struct:Regs64
r12	runtime\defs_darwin_amd64.h	/^	uint64	r12;$/;"	m	struct:Regs64
r13	runtime\defs_darwin_amd64.h	/^	uint64	r13;$/;"	m	struct:Regs64
r14	runtime\defs_darwin_amd64.h	/^	uint64	r14;$/;"	m	struct:Regs64
r15	runtime\defs_darwin_amd64.h	/^	uint64	r15;$/;"	m	struct:Regs64
r8	runtime\defs_darwin_amd64.h	/^	uint64	r8;$/;"	m	struct:Regs64
r9	runtime\defs_darwin_amd64.h	/^	uint64	r9;$/;"	m	struct:Regs64
rax	runtime\defs_darwin_amd64.h	/^	uint64	rax;$/;"	m	struct:Regs64
rbp	runtime\defs_darwin_amd64.h	/^	uint64	rbp;$/;"	m	struct:Regs64
rbx	runtime\defs_darwin_amd64.h	/^	uint64	rbx;$/;"	m	struct:Regs64
rcx	runtime\defs_darwin_amd64.h	/^	uint64	rcx;$/;"	m	struct:Regs64
rdi	runtime\defs_darwin_amd64.h	/^	uint64	rdi;$/;"	m	struct:Regs64
rdx	runtime\defs_darwin_amd64.h	/^	uint64	rdx;$/;"	m	struct:Regs64
reserved1	runtime\defs_darwin_amd64.h	/^	uint8	reserved1;$/;"	m	struct:MachNDR
reserved2	runtime\defs_darwin_amd64.h	/^	uint8	reserved2;$/;"	m	struct:MachNDR
rflags	runtime\defs_darwin_amd64.h	/^	uint64	rflags;$/;"	m	struct:Regs64
rip	runtime\defs_darwin_amd64.h	/^	uint64	rip;$/;"	m	struct:Regs64
rsi	runtime\defs_darwin_amd64.h	/^	uint64	rsi;$/;"	m	struct:Regs64
rsp	runtime\defs_darwin_amd64.h	/^	uint64	rsp;$/;"	m	struct:Regs64
sa_flags	runtime\defs_darwin_amd64.h	/^	int32	sa_flags;$/;"	m	struct:Sigaction
sa_mask	runtime\defs_darwin_amd64.h	/^	uint32	sa_mask;$/;"	m	struct:Sigaction
sa_tramp	runtime\defs_darwin_amd64.h	/^	void	*sa_tramp;$/;"	m	struct:Sigaction
si_addr	runtime\defs_darwin_amd64.h	/^	byte	*si_addr;$/;"	m	struct:Siginfo
si_band	runtime\defs_darwin_amd64.h	/^	int64	si_band;$/;"	m	struct:Siginfo
si_code	runtime\defs_darwin_amd64.h	/^	int32	si_code;$/;"	m	struct:Siginfo
si_errno	runtime\defs_darwin_amd64.h	/^	int32	si_errno;$/;"	m	struct:Siginfo
si_pid	runtime\defs_darwin_amd64.h	/^	int32	si_pid;$/;"	m	struct:Siginfo
si_signo	runtime\defs_darwin_amd64.h	/^	int32	si_signo;$/;"	m	struct:Siginfo
si_status	runtime\defs_darwin_amd64.h	/^	int32	si_status;$/;"	m	struct:Siginfo
si_uid	runtime\defs_darwin_amd64.h	/^	uint32	si_uid;$/;"	m	struct:Siginfo
si_value	runtime\defs_darwin_amd64.h	/^	byte	si_value[8];$/;"	m	struct:Siginfo
ss	runtime\defs_darwin_amd64.h	/^	Regs32	ss;$/;"	m	struct:Mcontext32
ss	runtime\defs_darwin_amd64.h	/^	Regs64	ss;$/;"	m	struct:Mcontext64
ss	runtime\defs_darwin_amd64.h	/^	uint32	ss;$/;"	m	struct:Regs32
ss_flags	runtime\defs_darwin_amd64.h	/^	int32	ss_flags;$/;"	m	struct:StackT
ss_size	runtime\defs_darwin_amd64.h	/^	uint64	ss_size;$/;"	m	struct:StackT
ss_sp	runtime\defs_darwin_amd64.h	/^	byte	*ss_sp;$/;"	m	struct:StackT
trapno	runtime\defs_darwin_amd64.h	/^	uint16	trapno;$/;"	m	struct:ExceptionState32
trapno	runtime\defs_darwin_amd64.h	/^	uint16	trapno;$/;"	m	struct:ExceptionState64
tv_nsec	runtime\defs_darwin_amd64.h	/^	int64	tv_nsec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_darwin_amd64.h	/^	int64	tv_sec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_darwin_amd64.h	/^	int64	tv_sec;$/;"	m	struct:Timeval
tv_usec	runtime\defs_darwin_amd64.h	/^	int32	tv_usec;$/;"	m	struct:Timeval
type	runtime\defs_darwin_amd64.h	/^	uint8	type;$/;"	m	struct:MachPort
uc_link	runtime\defs_darwin_amd64.h	/^	Ucontext	*uc_link;$/;"	m	struct:Ucontext
uc_mcontext	runtime\defs_darwin_amd64.h	/^	Mcontext64	*uc_mcontext;$/;"	m	struct:Ucontext
uc_mcsize	runtime\defs_darwin_amd64.h	/^	uint64	uc_mcsize;$/;"	m	struct:Ucontext
uc_onstack	runtime\defs_darwin_amd64.h	/^	int32	uc_onstack;$/;"	m	struct:Ucontext
uc_sigmask	runtime\defs_darwin_amd64.h	/^	uint32	uc_sigmask;$/;"	m	struct:Ucontext
uc_stack	runtime\defs_darwin_amd64.h	/^	StackT	uc_stack;$/;"	m	struct:Ucontext
udata	runtime\defs_darwin_amd64.h	/^	byte	*udata;$/;"	m	struct:Kevent
xmm_reg	runtime\defs_darwin_amd64.h	/^	int8	xmm_reg[16];$/;"	m	struct:RegXMM
BUS_ADRALN	runtime\defs_dragonfly_386.h	/^	BUS_ADRALN	= 0x1,$/;"	e	enum:__anon11
BUS_ADRERR	runtime\defs_dragonfly_386.h	/^	BUS_ADRERR	= 0x2,$/;"	e	enum:__anon11
BUS_OBJERR	runtime\defs_dragonfly_386.h	/^	BUS_OBJERR	= 0x3,$/;"	e	enum:__anon11
EAGAIN	runtime\defs_dragonfly_386.h	/^	EAGAIN	= 0x23,$/;"	e	enum:__anon11
EBUSY	runtime\defs_dragonfly_386.h	/^	EBUSY	= 0x10,$/;"	e	enum:__anon11
EFAULT	runtime\defs_dragonfly_386.h	/^	EFAULT	= 0xe,$/;"	e	enum:__anon11
EINTR	runtime\defs_dragonfly_386.h	/^	EINTR	= 0x4,$/;"	e	enum:__anon11
EVFILT_READ	runtime\defs_dragonfly_386.h	/^	EVFILT_READ	= -0x1,$/;"	e	enum:__anon11
EVFILT_WRITE	runtime\defs_dragonfly_386.h	/^	EVFILT_WRITE	= -0x2,$/;"	e	enum:__anon11
EV_ADD	runtime\defs_dragonfly_386.h	/^	EV_ADD		= 0x1,$/;"	e	enum:__anon11
EV_CLEAR	runtime\defs_dragonfly_386.h	/^	EV_CLEAR	= 0x20,$/;"	e	enum:__anon11
EV_DELETE	runtime\defs_dragonfly_386.h	/^	EV_DELETE	= 0x2,$/;"	e	enum:__anon11
EV_ERROR	runtime\defs_dragonfly_386.h	/^	EV_ERROR	= 0x4000,$/;"	e	enum:__anon11
FPE_FLTDIV	runtime\defs_dragonfly_386.h	/^	FPE_FLTDIV	= 0x3,$/;"	e	enum:__anon11
FPE_FLTINV	runtime\defs_dragonfly_386.h	/^	FPE_FLTINV	= 0x7,$/;"	e	enum:__anon11
FPE_FLTOVF	runtime\defs_dragonfly_386.h	/^	FPE_FLTOVF	= 0x4,$/;"	e	enum:__anon11
FPE_FLTRES	runtime\defs_dragonfly_386.h	/^	FPE_FLTRES	= 0x6,$/;"	e	enum:__anon11
FPE_FLTSUB	runtime\defs_dragonfly_386.h	/^	FPE_FLTSUB	= 0x8,$/;"	e	enum:__anon11
FPE_FLTUND	runtime\defs_dragonfly_386.h	/^	FPE_FLTUND	= 0x5,$/;"	e	enum:__anon11
FPE_INTDIV	runtime\defs_dragonfly_386.h	/^	FPE_INTDIV	= 0x2,$/;"	e	enum:__anon11
FPE_INTOVF	runtime\defs_dragonfly_386.h	/^	FPE_INTOVF	= 0x1,$/;"	e	enum:__anon11
ITIMER_PROF	runtime\defs_dragonfly_386.h	/^	ITIMER_PROF	= 0x2,$/;"	e	enum:__anon11
ITIMER_REAL	runtime\defs_dragonfly_386.h	/^	ITIMER_REAL	= 0x0,$/;"	e	enum:__anon11
ITIMER_VIRTUAL	runtime\defs_dragonfly_386.h	/^	ITIMER_VIRTUAL	= 0x1,$/;"	e	enum:__anon11
Itimerval	runtime\defs_dragonfly_386.h	/^struct Itimerval {$/;"	s
Itimerval	runtime\defs_dragonfly_386.h	/^typedef struct Itimerval Itimerval;$/;"	t	typeref:struct:Itimerval
Kevent	runtime\defs_dragonfly_386.h	/^struct Kevent {$/;"	s
Kevent	runtime\defs_dragonfly_386.h	/^typedef struct Kevent Kevent;$/;"	t	typeref:struct:Kevent
Lwpparams	runtime\defs_dragonfly_386.h	/^struct Lwpparams {$/;"	s
Lwpparams	runtime\defs_dragonfly_386.h	/^typedef struct Lwpparams Lwpparams;$/;"	t	typeref:struct:Lwpparams
MADV_FREE	runtime\defs_dragonfly_386.h	/^	MADV_FREE	= 0x5,$/;"	e	enum:__anon11
MAP_ANON	runtime\defs_dragonfly_386.h	/^	MAP_ANON	= 0x1000,$/;"	e	enum:__anon11
MAP_FIXED	runtime\defs_dragonfly_386.h	/^	MAP_FIXED	= 0x10,$/;"	e	enum:__anon11
MAP_PRIVATE	runtime\defs_dragonfly_386.h	/^	MAP_PRIVATE	= 0x2,$/;"	e	enum:__anon11
Mcontext	runtime\defs_dragonfly_386.h	/^struct Mcontext {$/;"	s
Mcontext	runtime\defs_dragonfly_386.h	/^typedef struct Mcontext Mcontext;$/;"	t	typeref:struct:Mcontext
PROT_EXEC	runtime\defs_dragonfly_386.h	/^	PROT_EXEC	= 0x4,$/;"	e	enum:__anon11
PROT_NONE	runtime\defs_dragonfly_386.h	/^	PROT_NONE	= 0x0,$/;"	e	enum:__anon11
PROT_READ	runtime\defs_dragonfly_386.h	/^	PROT_READ	= 0x1,$/;"	e	enum:__anon11
PROT_WRITE	runtime\defs_dragonfly_386.h	/^	PROT_WRITE	= 0x2,$/;"	e	enum:__anon11
Rtprio	runtime\defs_dragonfly_386.h	/^struct Rtprio {$/;"	s
Rtprio	runtime\defs_dragonfly_386.h	/^typedef struct Rtprio Rtprio;$/;"	t	typeref:struct:Rtprio
SA_ONSTACK	runtime\defs_dragonfly_386.h	/^	SA_ONSTACK	= 0x1,$/;"	e	enum:__anon11
SA_RESTART	runtime\defs_dragonfly_386.h	/^	SA_RESTART	= 0x2,$/;"	e	enum:__anon11
SA_SIGINFO	runtime\defs_dragonfly_386.h	/^	SA_SIGINFO	= 0x40,$/;"	e	enum:__anon11
SEGV_ACCERR	runtime\defs_dragonfly_386.h	/^	SEGV_ACCERR	= 0x2,$/;"	e	enum:__anon11
SEGV_MAPERR	runtime\defs_dragonfly_386.h	/^	SEGV_MAPERR	= 0x1,$/;"	e	enum:__anon11
SIGABRT	runtime\defs_dragonfly_386.h	/^	SIGABRT		= 0x6,$/;"	e	enum:__anon11
SIGALRM	runtime\defs_dragonfly_386.h	/^	SIGALRM		= 0xe,$/;"	e	enum:__anon11
SIGBUS	runtime\defs_dragonfly_386.h	/^	SIGBUS		= 0xa,$/;"	e	enum:__anon11
SIGCHLD	runtime\defs_dragonfly_386.h	/^	SIGCHLD		= 0x14,$/;"	e	enum:__anon11
SIGCONT	runtime\defs_dragonfly_386.h	/^	SIGCONT		= 0x13,$/;"	e	enum:__anon11
SIGEMT	runtime\defs_dragonfly_386.h	/^	SIGEMT		= 0x7,$/;"	e	enum:__anon11
SIGFPE	runtime\defs_dragonfly_386.h	/^	SIGFPE		= 0x8,$/;"	e	enum:__anon11
SIGHUP	runtime\defs_dragonfly_386.h	/^	SIGHUP		= 0x1,$/;"	e	enum:__anon11
SIGILL	runtime\defs_dragonfly_386.h	/^	SIGILL		= 0x4,$/;"	e	enum:__anon11
SIGINFO	runtime\defs_dragonfly_386.h	/^	SIGINFO		= 0x1d,$/;"	e	enum:__anon11
SIGINT	runtime\defs_dragonfly_386.h	/^	SIGINT		= 0x2,$/;"	e	enum:__anon11
SIGIO	runtime\defs_dragonfly_386.h	/^	SIGIO		= 0x17,$/;"	e	enum:__anon11
SIGKILL	runtime\defs_dragonfly_386.h	/^	SIGKILL		= 0x9,$/;"	e	enum:__anon11
SIGPIPE	runtime\defs_dragonfly_386.h	/^	SIGPIPE		= 0xd,$/;"	e	enum:__anon11
SIGPROF	runtime\defs_dragonfly_386.h	/^	SIGPROF		= 0x1b,$/;"	e	enum:__anon11
SIGQUIT	runtime\defs_dragonfly_386.h	/^	SIGQUIT		= 0x3,$/;"	e	enum:__anon11
SIGSEGV	runtime\defs_dragonfly_386.h	/^	SIGSEGV		= 0xb,$/;"	e	enum:__anon11
SIGSTOP	runtime\defs_dragonfly_386.h	/^	SIGSTOP		= 0x11,$/;"	e	enum:__anon11
SIGSYS	runtime\defs_dragonfly_386.h	/^	SIGSYS		= 0xc,$/;"	e	enum:__anon11
SIGTERM	runtime\defs_dragonfly_386.h	/^	SIGTERM		= 0xf,$/;"	e	enum:__anon11
SIGTRAP	runtime\defs_dragonfly_386.h	/^	SIGTRAP		= 0x5,$/;"	e	enum:__anon11
SIGTSTP	runtime\defs_dragonfly_386.h	/^	SIGTSTP		= 0x12,$/;"	e	enum:__anon11
SIGTTIN	runtime\defs_dragonfly_386.h	/^	SIGTTIN		= 0x15,$/;"	e	enum:__anon11
SIGTTOU	runtime\defs_dragonfly_386.h	/^	SIGTTOU		= 0x16,$/;"	e	enum:__anon11
SIGURG	runtime\defs_dragonfly_386.h	/^	SIGURG		= 0x10,$/;"	e	enum:__anon11
SIGUSR1	runtime\defs_dragonfly_386.h	/^	SIGUSR1		= 0x1e,$/;"	e	enum:__anon11
SIGUSR2	runtime\defs_dragonfly_386.h	/^	SIGUSR2		= 0x1f,$/;"	e	enum:__anon11
SIGVTALRM	runtime\defs_dragonfly_386.h	/^	SIGVTALRM	= 0x1a,$/;"	e	enum:__anon11
SIGWINCH	runtime\defs_dragonfly_386.h	/^	SIGWINCH	= 0x1c,$/;"	e	enum:__anon11
SIGXCPU	runtime\defs_dragonfly_386.h	/^	SIGXCPU		= 0x18,$/;"	e	enum:__anon11
SIGXFSZ	runtime\defs_dragonfly_386.h	/^	SIGXFSZ		= 0x19,$/;"	e	enum:__anon11
Sigaltstack	runtime\defs_dragonfly_386.h	/^struct Sigaltstack {$/;"	s
Sigaltstack	runtime\defs_dragonfly_386.h	/^typedef struct Sigaltstack Sigaltstack;$/;"	t	typeref:struct:Sigaltstack
Siginfo	runtime\defs_dragonfly_386.h	/^struct Siginfo {$/;"	s
Siginfo	runtime\defs_dragonfly_386.h	/^typedef struct Siginfo Siginfo;$/;"	t	typeref:struct:Siginfo
Sigset	runtime\defs_dragonfly_386.h	/^struct Sigset {$/;"	s
Sigset	runtime\defs_dragonfly_386.h	/^typedef struct Sigset Sigset;$/;"	t	typeref:struct:Sigset
StackT	runtime\defs_dragonfly_386.h	/^struct StackT {$/;"	s
StackT	runtime\defs_dragonfly_386.h	/^typedef struct StackT StackT;$/;"	t	typeref:struct:StackT
Timespec	runtime\defs_dragonfly_386.h	/^struct Timespec {$/;"	s
Timespec	runtime\defs_dragonfly_386.h	/^typedef struct Timespec Timespec;$/;"	t	typeref:struct:Timespec
Timeval	runtime\defs_dragonfly_386.h	/^struct Timeval {$/;"	s
Timeval	runtime\defs_dragonfly_386.h	/^typedef struct Timeval Timeval;$/;"	t	typeref:struct:Timeval
Ucontext	runtime\defs_dragonfly_386.h	/^struct Ucontext {$/;"	s
Ucontext	runtime\defs_dragonfly_386.h	/^typedef struct Ucontext Ucontext;$/;"	t	typeref:struct:Ucontext
__bits	runtime\defs_dragonfly_386.h	/^	uint32	__bits[4];$/;"	m	struct:Sigset
__spare__	runtime\defs_dragonfly_386.h	/^	int32	__spare__[16];$/;"	m	struct:Mcontext
__spare__	runtime\defs_dragonfly_386.h	/^	int32	__spare__[7];$/;"	m	struct:Siginfo
__spare__	runtime\defs_dragonfly_386.h	/^	int32	__spare__[8];$/;"	m	struct:Ucontext
arg	runtime\defs_dragonfly_386.h	/^	byte	*arg;$/;"	m	struct:Lwpparams
data	runtime\defs_dragonfly_386.h	/^	int32	data;$/;"	m	struct:Kevent
fflags	runtime\defs_dragonfly_386.h	/^	uint32	fflags;$/;"	m	struct:Kevent
filter	runtime\defs_dragonfly_386.h	/^	int16	filter;$/;"	m	struct:Kevent
flags	runtime\defs_dragonfly_386.h	/^	uint16	flags;$/;"	m	struct:Kevent
func	runtime\defs_dragonfly_386.h	/^	void	*func;$/;"	m	struct:Lwpparams
ident	runtime\defs_dragonfly_386.h	/^	uint32	ident;$/;"	m	struct:Kevent
it_interval	runtime\defs_dragonfly_386.h	/^	Timeval	it_interval;$/;"	m	struct:Itimerval
it_value	runtime\defs_dragonfly_386.h	/^	Timeval	it_value;$/;"	m	struct:Itimerval
mc_cs	runtime\defs_dragonfly_386.h	/^	int32	mc_cs;$/;"	m	struct:Mcontext
mc_ds	runtime\defs_dragonfly_386.h	/^	int32	mc_ds;$/;"	m	struct:Mcontext
mc_eax	runtime\defs_dragonfly_386.h	/^	int32	mc_eax;$/;"	m	struct:Mcontext
mc_ebp	runtime\defs_dragonfly_386.h	/^	int32	mc_ebp;$/;"	m	struct:Mcontext
mc_ebx	runtime\defs_dragonfly_386.h	/^	int32	mc_ebx;$/;"	m	struct:Mcontext
mc_ecx	runtime\defs_dragonfly_386.h	/^	int32	mc_ecx;$/;"	m	struct:Mcontext
mc_edi	runtime\defs_dragonfly_386.h	/^	int32	mc_edi;$/;"	m	struct:Mcontext
mc_edx	runtime\defs_dragonfly_386.h	/^	int32	mc_edx;$/;"	m	struct:Mcontext
mc_eflags	runtime\defs_dragonfly_386.h	/^	int32	mc_eflags;$/;"	m	struct:Mcontext
mc_eip	runtime\defs_dragonfly_386.h	/^	int32	mc_eip;$/;"	m	struct:Mcontext
mc_err	runtime\defs_dragonfly_386.h	/^	int32	mc_err;$/;"	m	struct:Mcontext
mc_es	runtime\defs_dragonfly_386.h	/^	int32	mc_es;$/;"	m	struct:Mcontext
mc_esi	runtime\defs_dragonfly_386.h	/^	int32	mc_esi;$/;"	m	struct:Mcontext
mc_esp	runtime\defs_dragonfly_386.h	/^	int32	mc_esp;$/;"	m	struct:Mcontext
mc_fpformat	runtime\defs_dragonfly_386.h	/^	int32	mc_fpformat;$/;"	m	struct:Mcontext
mc_fpregs	runtime\defs_dragonfly_386.h	/^	int32	mc_fpregs[128];$/;"	m	struct:Mcontext
mc_fs	runtime\defs_dragonfly_386.h	/^	int32	mc_fs;$/;"	m	struct:Mcontext
mc_gs	runtime\defs_dragonfly_386.h	/^	int32	mc_gs;$/;"	m	struct:Mcontext
mc_isp	runtime\defs_dragonfly_386.h	/^	int32	mc_isp;$/;"	m	struct:Mcontext
mc_len	runtime\defs_dragonfly_386.h	/^	int32	mc_len;$/;"	m	struct:Mcontext
mc_onstack	runtime\defs_dragonfly_386.h	/^	int32	mc_onstack;$/;"	m	struct:Mcontext
mc_ownedfp	runtime\defs_dragonfly_386.h	/^	int32	mc_ownedfp;$/;"	m	struct:Mcontext
mc_ss	runtime\defs_dragonfly_386.h	/^	int32	mc_ss;$/;"	m	struct:Mcontext
mc_trapno	runtime\defs_dragonfly_386.h	/^	int32	mc_trapno;$/;"	m	struct:Mcontext
mc_xflags	runtime\defs_dragonfly_386.h	/^	int32	mc_xflags;$/;"	m	struct:Mcontext
prio	runtime\defs_dragonfly_386.h	/^	uint16	prio;$/;"	m	struct:Rtprio
si_addr	runtime\defs_dragonfly_386.h	/^	byte	*si_addr;$/;"	m	struct:Siginfo
si_band	runtime\defs_dragonfly_386.h	/^	int32	si_band;$/;"	m	struct:Siginfo
si_code	runtime\defs_dragonfly_386.h	/^	int32	si_code;$/;"	m	struct:Siginfo
si_errno	runtime\defs_dragonfly_386.h	/^	int32	si_errno;$/;"	m	struct:Siginfo
si_pid	runtime\defs_dragonfly_386.h	/^	int32	si_pid;$/;"	m	struct:Siginfo
si_signo	runtime\defs_dragonfly_386.h	/^	int32	si_signo;$/;"	m	struct:Siginfo
si_status	runtime\defs_dragonfly_386.h	/^	int32	si_status;$/;"	m	struct:Siginfo
si_uid	runtime\defs_dragonfly_386.h	/^	uint32	si_uid;$/;"	m	struct:Siginfo
si_value	runtime\defs_dragonfly_386.h	/^	byte	si_value[4];$/;"	m	struct:Siginfo
ss_flags	runtime\defs_dragonfly_386.h	/^	int32	ss_flags;$/;"	m	struct:Sigaltstack
ss_flags	runtime\defs_dragonfly_386.h	/^	int32	ss_flags;$/;"	m	struct:StackT
ss_size	runtime\defs_dragonfly_386.h	/^	uint32	ss_size;$/;"	m	struct:Sigaltstack
ss_size	runtime\defs_dragonfly_386.h	/^	uint32	ss_size;$/;"	m	struct:StackT
ss_sp	runtime\defs_dragonfly_386.h	/^	int8	*ss_sp;$/;"	m	struct:Sigaltstack
ss_sp	runtime\defs_dragonfly_386.h	/^	int8	*ss_sp;$/;"	m	struct:StackT
stack	runtime\defs_dragonfly_386.h	/^	byte	*stack;$/;"	m	struct:Lwpparams
tid1	runtime\defs_dragonfly_386.h	/^	int32	*tid1;$/;"	m	struct:Lwpparams
tid2	runtime\defs_dragonfly_386.h	/^	int32	*tid2;$/;"	m	struct:Lwpparams
tv_nsec	runtime\defs_dragonfly_386.h	/^	int32	tv_nsec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_dragonfly_386.h	/^	int32	tv_sec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_dragonfly_386.h	/^	int32	tv_sec;$/;"	m	struct:Timeval
tv_usec	runtime\defs_dragonfly_386.h	/^	int32	tv_usec;$/;"	m	struct:Timeval
type	runtime\defs_dragonfly_386.h	/^	uint16	type;$/;"	m	struct:Rtprio
uc_link	runtime\defs_dragonfly_386.h	/^	Ucontext	*uc_link;$/;"	m	struct:Ucontext
uc_mcontext	runtime\defs_dragonfly_386.h	/^	Mcontext	uc_mcontext;$/;"	m	struct:Ucontext
uc_sigmask	runtime\defs_dragonfly_386.h	/^	Sigset	uc_sigmask;$/;"	m	struct:Ucontext
uc_stack	runtime\defs_dragonfly_386.h	/^	StackT	uc_stack;$/;"	m	struct:Ucontext
udata	runtime\defs_dragonfly_386.h	/^	byte	*udata;$/;"	m	struct:Kevent
BUS_ADRALN	runtime\defs_dragonfly_amd64.h	/^	BUS_ADRALN	= 0x1,$/;"	e	enum:__anon12
BUS_ADRERR	runtime\defs_dragonfly_amd64.h	/^	BUS_ADRERR	= 0x2,$/;"	e	enum:__anon12
BUS_OBJERR	runtime\defs_dragonfly_amd64.h	/^	BUS_OBJERR	= 0x3,$/;"	e	enum:__anon12
EAGAIN	runtime\defs_dragonfly_amd64.h	/^	EAGAIN	= 0x23,$/;"	e	enum:__anon12
EBUSY	runtime\defs_dragonfly_amd64.h	/^	EBUSY	= 0x10,$/;"	e	enum:__anon12
EFAULT	runtime\defs_dragonfly_amd64.h	/^	EFAULT	= 0xe,$/;"	e	enum:__anon12
EINTR	runtime\defs_dragonfly_amd64.h	/^	EINTR	= 0x4,$/;"	e	enum:__anon12
EVFILT_READ	runtime\defs_dragonfly_amd64.h	/^	EVFILT_READ	= -0x1,$/;"	e	enum:__anon12
EVFILT_WRITE	runtime\defs_dragonfly_amd64.h	/^	EVFILT_WRITE	= -0x2,$/;"	e	enum:__anon12
EV_ADD	runtime\defs_dragonfly_amd64.h	/^	EV_ADD		= 0x1,$/;"	e	enum:__anon12
EV_CLEAR	runtime\defs_dragonfly_amd64.h	/^	EV_CLEAR	= 0x20,$/;"	e	enum:__anon12
EV_DELETE	runtime\defs_dragonfly_amd64.h	/^	EV_DELETE	= 0x2,$/;"	e	enum:__anon12
EV_ERROR	runtime\defs_dragonfly_amd64.h	/^	EV_ERROR	= 0x4000,$/;"	e	enum:__anon12
FPE_FLTDIV	runtime\defs_dragonfly_amd64.h	/^	FPE_FLTDIV	= 0x3,$/;"	e	enum:__anon12
FPE_FLTINV	runtime\defs_dragonfly_amd64.h	/^	FPE_FLTINV	= 0x7,$/;"	e	enum:__anon12
FPE_FLTOVF	runtime\defs_dragonfly_amd64.h	/^	FPE_FLTOVF	= 0x4,$/;"	e	enum:__anon12
FPE_FLTRES	runtime\defs_dragonfly_amd64.h	/^	FPE_FLTRES	= 0x6,$/;"	e	enum:__anon12
FPE_FLTSUB	runtime\defs_dragonfly_amd64.h	/^	FPE_FLTSUB	= 0x8,$/;"	e	enum:__anon12
FPE_FLTUND	runtime\defs_dragonfly_amd64.h	/^	FPE_FLTUND	= 0x5,$/;"	e	enum:__anon12
FPE_INTDIV	runtime\defs_dragonfly_amd64.h	/^	FPE_INTDIV	= 0x2,$/;"	e	enum:__anon12
FPE_INTOVF	runtime\defs_dragonfly_amd64.h	/^	FPE_INTOVF	= 0x1,$/;"	e	enum:__anon12
ITIMER_PROF	runtime\defs_dragonfly_amd64.h	/^	ITIMER_PROF	= 0x2,$/;"	e	enum:__anon12
ITIMER_REAL	runtime\defs_dragonfly_amd64.h	/^	ITIMER_REAL	= 0x0,$/;"	e	enum:__anon12
ITIMER_VIRTUAL	runtime\defs_dragonfly_amd64.h	/^	ITIMER_VIRTUAL	= 0x1,$/;"	e	enum:__anon12
Itimerval	runtime\defs_dragonfly_amd64.h	/^struct Itimerval {$/;"	s
Itimerval	runtime\defs_dragonfly_amd64.h	/^typedef struct Itimerval Itimerval;$/;"	t	typeref:struct:Itimerval
Kevent	runtime\defs_dragonfly_amd64.h	/^struct Kevent {$/;"	s
Kevent	runtime\defs_dragonfly_amd64.h	/^typedef struct Kevent Kevent;$/;"	t	typeref:struct:Kevent
Lwpparams	runtime\defs_dragonfly_amd64.h	/^struct Lwpparams {$/;"	s
Lwpparams	runtime\defs_dragonfly_amd64.h	/^typedef struct Lwpparams Lwpparams;$/;"	t	typeref:struct:Lwpparams
MADV_FREE	runtime\defs_dragonfly_amd64.h	/^	MADV_FREE	= 0x5,$/;"	e	enum:__anon12
MAP_ANON	runtime\defs_dragonfly_amd64.h	/^	MAP_ANON	= 0x1000,$/;"	e	enum:__anon12
MAP_FIXED	runtime\defs_dragonfly_amd64.h	/^	MAP_FIXED	= 0x10,$/;"	e	enum:__anon12
MAP_PRIVATE	runtime\defs_dragonfly_amd64.h	/^	MAP_PRIVATE	= 0x2,$/;"	e	enum:__anon12
Mcontext	runtime\defs_dragonfly_amd64.h	/^struct Mcontext {$/;"	s
Mcontext	runtime\defs_dragonfly_amd64.h	/^typedef struct Mcontext Mcontext;$/;"	t	typeref:struct:Mcontext
PROT_EXEC	runtime\defs_dragonfly_amd64.h	/^	PROT_EXEC	= 0x4,$/;"	e	enum:__anon12
PROT_NONE	runtime\defs_dragonfly_amd64.h	/^	PROT_NONE	= 0x0,$/;"	e	enum:__anon12
PROT_READ	runtime\defs_dragonfly_amd64.h	/^	PROT_READ	= 0x1,$/;"	e	enum:__anon12
PROT_WRITE	runtime\defs_dragonfly_amd64.h	/^	PROT_WRITE	= 0x2,$/;"	e	enum:__anon12
Pad_cgo_0	runtime\defs_dragonfly_amd64.h	/^	byte	Pad_cgo_0[48];$/;"	m	struct:Ucontext
Pad_cgo_0	runtime\defs_dragonfly_amd64.h	/^	byte	Pad_cgo_0[4];$/;"	m	struct:Sigaltstack
Pad_cgo_0	runtime\defs_dragonfly_amd64.h	/^	byte	Pad_cgo_0[4];$/;"	m	struct:Siginfo
Pad_cgo_0	runtime\defs_dragonfly_amd64.h	/^	byte	Pad_cgo_0[4];$/;"	m	struct:StackT
Rtprio	runtime\defs_dragonfly_amd64.h	/^struct Rtprio {$/;"	s
Rtprio	runtime\defs_dragonfly_amd64.h	/^typedef struct Rtprio Rtprio;$/;"	t	typeref:struct:Rtprio
SA_ONSTACK	runtime\defs_dragonfly_amd64.h	/^	SA_ONSTACK	= 0x1,$/;"	e	enum:__anon12
SA_RESTART	runtime\defs_dragonfly_amd64.h	/^	SA_RESTART	= 0x2,$/;"	e	enum:__anon12
SA_SIGINFO	runtime\defs_dragonfly_amd64.h	/^	SA_SIGINFO	= 0x40,$/;"	e	enum:__anon12
SEGV_ACCERR	runtime\defs_dragonfly_amd64.h	/^	SEGV_ACCERR	= 0x2,$/;"	e	enum:__anon12
SEGV_MAPERR	runtime\defs_dragonfly_amd64.h	/^	SEGV_MAPERR	= 0x1,$/;"	e	enum:__anon12
SIGABRT	runtime\defs_dragonfly_amd64.h	/^	SIGABRT		= 0x6,$/;"	e	enum:__anon12
SIGALRM	runtime\defs_dragonfly_amd64.h	/^	SIGALRM		= 0xe,$/;"	e	enum:__anon12
SIGBUS	runtime\defs_dragonfly_amd64.h	/^	SIGBUS		= 0xa,$/;"	e	enum:__anon12
SIGCHLD	runtime\defs_dragonfly_amd64.h	/^	SIGCHLD		= 0x14,$/;"	e	enum:__anon12
SIGCONT	runtime\defs_dragonfly_amd64.h	/^	SIGCONT		= 0x13,$/;"	e	enum:__anon12
SIGEMT	runtime\defs_dragonfly_amd64.h	/^	SIGEMT		= 0x7,$/;"	e	enum:__anon12
SIGFPE	runtime\defs_dragonfly_amd64.h	/^	SIGFPE		= 0x8,$/;"	e	enum:__anon12
SIGHUP	runtime\defs_dragonfly_amd64.h	/^	SIGHUP		= 0x1,$/;"	e	enum:__anon12
SIGILL	runtime\defs_dragonfly_amd64.h	/^	SIGILL		= 0x4,$/;"	e	enum:__anon12
SIGINFO	runtime\defs_dragonfly_amd64.h	/^	SIGINFO		= 0x1d,$/;"	e	enum:__anon12
SIGINT	runtime\defs_dragonfly_amd64.h	/^	SIGINT		= 0x2,$/;"	e	enum:__anon12
SIGIO	runtime\defs_dragonfly_amd64.h	/^	SIGIO		= 0x17,$/;"	e	enum:__anon12
SIGKILL	runtime\defs_dragonfly_amd64.h	/^	SIGKILL		= 0x9,$/;"	e	enum:__anon12
SIGPIPE	runtime\defs_dragonfly_amd64.h	/^	SIGPIPE		= 0xd,$/;"	e	enum:__anon12
SIGPROF	runtime\defs_dragonfly_amd64.h	/^	SIGPROF		= 0x1b,$/;"	e	enum:__anon12
SIGQUIT	runtime\defs_dragonfly_amd64.h	/^	SIGQUIT		= 0x3,$/;"	e	enum:__anon12
SIGSEGV	runtime\defs_dragonfly_amd64.h	/^	SIGSEGV		= 0xb,$/;"	e	enum:__anon12
SIGSTOP	runtime\defs_dragonfly_amd64.h	/^	SIGSTOP		= 0x11,$/;"	e	enum:__anon12
SIGSYS	runtime\defs_dragonfly_amd64.h	/^	SIGSYS		= 0xc,$/;"	e	enum:__anon12
SIGTERM	runtime\defs_dragonfly_amd64.h	/^	SIGTERM		= 0xf,$/;"	e	enum:__anon12
SIGTRAP	runtime\defs_dragonfly_amd64.h	/^	SIGTRAP		= 0x5,$/;"	e	enum:__anon12
SIGTSTP	runtime\defs_dragonfly_amd64.h	/^	SIGTSTP		= 0x12,$/;"	e	enum:__anon12
SIGTTIN	runtime\defs_dragonfly_amd64.h	/^	SIGTTIN		= 0x15,$/;"	e	enum:__anon12
SIGTTOU	runtime\defs_dragonfly_amd64.h	/^	SIGTTOU		= 0x16,$/;"	e	enum:__anon12
SIGURG	runtime\defs_dragonfly_amd64.h	/^	SIGURG		= 0x10,$/;"	e	enum:__anon12
SIGUSR1	runtime\defs_dragonfly_amd64.h	/^	SIGUSR1		= 0x1e,$/;"	e	enum:__anon12
SIGUSR2	runtime\defs_dragonfly_amd64.h	/^	SIGUSR2		= 0x1f,$/;"	e	enum:__anon12
SIGVTALRM	runtime\defs_dragonfly_amd64.h	/^	SIGVTALRM	= 0x1a,$/;"	e	enum:__anon12
SIGWINCH	runtime\defs_dragonfly_amd64.h	/^	SIGWINCH	= 0x1c,$/;"	e	enum:__anon12
SIGXCPU	runtime\defs_dragonfly_amd64.h	/^	SIGXCPU		= 0x18,$/;"	e	enum:__anon12
SIGXFSZ	runtime\defs_dragonfly_amd64.h	/^	SIGXFSZ		= 0x19,$/;"	e	enum:__anon12
Sigaltstack	runtime\defs_dragonfly_amd64.h	/^struct Sigaltstack {$/;"	s
Sigaltstack	runtime\defs_dragonfly_amd64.h	/^typedef struct Sigaltstack Sigaltstack;$/;"	t	typeref:struct:Sigaltstack
Siginfo	runtime\defs_dragonfly_amd64.h	/^struct Siginfo {$/;"	s
Siginfo	runtime\defs_dragonfly_amd64.h	/^typedef struct Siginfo Siginfo;$/;"	t	typeref:struct:Siginfo
Sigset	runtime\defs_dragonfly_amd64.h	/^struct Sigset {$/;"	s
Sigset	runtime\defs_dragonfly_amd64.h	/^typedef struct Sigset Sigset;$/;"	t	typeref:struct:Sigset
StackT	runtime\defs_dragonfly_amd64.h	/^struct StackT {$/;"	s
StackT	runtime\defs_dragonfly_amd64.h	/^typedef struct StackT StackT;$/;"	t	typeref:struct:StackT
Timespec	runtime\defs_dragonfly_amd64.h	/^struct Timespec {$/;"	s
Timespec	runtime\defs_dragonfly_amd64.h	/^typedef struct Timespec Timespec;$/;"	t	typeref:struct:Timespec
Timeval	runtime\defs_dragonfly_amd64.h	/^struct Timeval {$/;"	s
Timeval	runtime\defs_dragonfly_amd64.h	/^typedef struct Timeval Timeval;$/;"	t	typeref:struct:Timeval
Ucontext	runtime\defs_dragonfly_amd64.h	/^struct Ucontext {$/;"	s
Ucontext	runtime\defs_dragonfly_amd64.h	/^typedef struct Ucontext Ucontext;$/;"	t	typeref:struct:Ucontext
__bits	runtime\defs_dragonfly_amd64.h	/^	uint32	__bits[4];$/;"	m	struct:Sigset
__spare__	runtime\defs_dragonfly_amd64.h	/^	int32	__spare__[7];$/;"	m	struct:Siginfo
__spare__	runtime\defs_dragonfly_amd64.h	/^	int32	__spare__[8];$/;"	m	struct:Ucontext
arg	runtime\defs_dragonfly_amd64.h	/^	byte	*arg;$/;"	m	struct:Lwpparams
data	runtime\defs_dragonfly_amd64.h	/^	int64	data;$/;"	m	struct:Kevent
fflags	runtime\defs_dragonfly_amd64.h	/^	uint32	fflags;$/;"	m	struct:Kevent
filter	runtime\defs_dragonfly_amd64.h	/^	int16	filter;$/;"	m	struct:Kevent
flags	runtime\defs_dragonfly_amd64.h	/^	uint16	flags;$/;"	m	struct:Kevent
func	runtime\defs_dragonfly_amd64.h	/^	void	*func;$/;"	m	struct:Lwpparams
ident	runtime\defs_dragonfly_amd64.h	/^	uint64	ident;$/;"	m	struct:Kevent
it_interval	runtime\defs_dragonfly_amd64.h	/^	Timeval	it_interval;$/;"	m	struct:Itimerval
it_value	runtime\defs_dragonfly_amd64.h	/^	Timeval	it_value;$/;"	m	struct:Itimerval
mc_addr	runtime\defs_dragonfly_amd64.h	/^	int64	mc_addr;$/;"	m	struct:Mcontext
mc_cs	runtime\defs_dragonfly_amd64.h	/^	int64	mc_cs;$/;"	m	struct:Mcontext
mc_err	runtime\defs_dragonfly_amd64.h	/^	int64	mc_err;$/;"	m	struct:Mcontext
mc_flags	runtime\defs_dragonfly_amd64.h	/^	int64	mc_flags;$/;"	m	struct:Mcontext
mc_fpformat	runtime\defs_dragonfly_amd64.h	/^	uint32	mc_fpformat;$/;"	m	struct:Mcontext
mc_fpregs	runtime\defs_dragonfly_amd64.h	/^	int32	mc_fpregs[256];$/;"	m	struct:Mcontext
mc_len	runtime\defs_dragonfly_amd64.h	/^	uint32	mc_len;$/;"	m	struct:Mcontext
mc_onstack	runtime\defs_dragonfly_amd64.h	/^	int64	mc_onstack;$/;"	m	struct:Mcontext
mc_ownedfp	runtime\defs_dragonfly_amd64.h	/^	uint32	mc_ownedfp;$/;"	m	struct:Mcontext
mc_r10	runtime\defs_dragonfly_amd64.h	/^	int64	mc_r10;$/;"	m	struct:Mcontext
mc_r11	runtime\defs_dragonfly_amd64.h	/^	int64	mc_r11;$/;"	m	struct:Mcontext
mc_r12	runtime\defs_dragonfly_amd64.h	/^	int64	mc_r12;$/;"	m	struct:Mcontext
mc_r13	runtime\defs_dragonfly_amd64.h	/^	int64	mc_r13;$/;"	m	struct:Mcontext
mc_r14	runtime\defs_dragonfly_amd64.h	/^	int64	mc_r14;$/;"	m	struct:Mcontext
mc_r15	runtime\defs_dragonfly_amd64.h	/^	int64	mc_r15;$/;"	m	struct:Mcontext
mc_r8	runtime\defs_dragonfly_amd64.h	/^	int64	mc_r8;$/;"	m	struct:Mcontext
mc_r9	runtime\defs_dragonfly_amd64.h	/^	int64	mc_r9;$/;"	m	struct:Mcontext
mc_rax	runtime\defs_dragonfly_amd64.h	/^	int64	mc_rax;$/;"	m	struct:Mcontext
mc_rbp	runtime\defs_dragonfly_amd64.h	/^	int64	mc_rbp;$/;"	m	struct:Mcontext
mc_rbx	runtime\defs_dragonfly_amd64.h	/^	int64	mc_rbx;$/;"	m	struct:Mcontext
mc_rcx	runtime\defs_dragonfly_amd64.h	/^	int64	mc_rcx;$/;"	m	struct:Mcontext
mc_rdi	runtime\defs_dragonfly_amd64.h	/^	int64	mc_rdi;$/;"	m	struct:Mcontext
mc_rdx	runtime\defs_dragonfly_amd64.h	/^	int64	mc_rdx;$/;"	m	struct:Mcontext
mc_reserved	runtime\defs_dragonfly_amd64.h	/^	uint32	mc_reserved;$/;"	m	struct:Mcontext
mc_rflags	runtime\defs_dragonfly_amd64.h	/^	int64	mc_rflags;$/;"	m	struct:Mcontext
mc_rip	runtime\defs_dragonfly_amd64.h	/^	int64	mc_rip;$/;"	m	struct:Mcontext
mc_rsi	runtime\defs_dragonfly_amd64.h	/^	int64	mc_rsi;$/;"	m	struct:Mcontext
mc_rsp	runtime\defs_dragonfly_amd64.h	/^	int64	mc_rsp;$/;"	m	struct:Mcontext
mc_ss	runtime\defs_dragonfly_amd64.h	/^	int64	mc_ss;$/;"	m	struct:Mcontext
mc_trapno	runtime\defs_dragonfly_amd64.h	/^	int64	mc_trapno;$/;"	m	struct:Mcontext
mc_unused	runtime\defs_dragonfly_amd64.h	/^	uint32	mc_unused[8];$/;"	m	struct:Mcontext
mc_xflags	runtime\defs_dragonfly_amd64.h	/^	int64	mc_xflags;$/;"	m	struct:Mcontext
prio	runtime\defs_dragonfly_amd64.h	/^	uint16	prio;$/;"	m	struct:Rtprio
si_addr	runtime\defs_dragonfly_amd64.h	/^	byte	*si_addr;$/;"	m	struct:Siginfo
si_band	runtime\defs_dragonfly_amd64.h	/^	int64	si_band;$/;"	m	struct:Siginfo
si_code	runtime\defs_dragonfly_amd64.h	/^	int32	si_code;$/;"	m	struct:Siginfo
si_errno	runtime\defs_dragonfly_amd64.h	/^	int32	si_errno;$/;"	m	struct:Siginfo
si_pid	runtime\defs_dragonfly_amd64.h	/^	int32	si_pid;$/;"	m	struct:Siginfo
si_signo	runtime\defs_dragonfly_amd64.h	/^	int32	si_signo;$/;"	m	struct:Siginfo
si_status	runtime\defs_dragonfly_amd64.h	/^	int32	si_status;$/;"	m	struct:Siginfo
si_uid	runtime\defs_dragonfly_amd64.h	/^	uint32	si_uid;$/;"	m	struct:Siginfo
si_value	runtime\defs_dragonfly_amd64.h	/^	byte	si_value[8];$/;"	m	struct:Siginfo
ss_flags	runtime\defs_dragonfly_amd64.h	/^	int32	ss_flags;$/;"	m	struct:Sigaltstack
ss_flags	runtime\defs_dragonfly_amd64.h	/^	int32	ss_flags;$/;"	m	struct:StackT
ss_size	runtime\defs_dragonfly_amd64.h	/^	uint64	ss_size;$/;"	m	struct:Sigaltstack
ss_size	runtime\defs_dragonfly_amd64.h	/^	uint64	ss_size;$/;"	m	struct:StackT
ss_sp	runtime\defs_dragonfly_amd64.h	/^	int8	*ss_sp;$/;"	m	struct:Sigaltstack
ss_sp	runtime\defs_dragonfly_amd64.h	/^	int8	*ss_sp;$/;"	m	struct:StackT
stack	runtime\defs_dragonfly_amd64.h	/^	byte	*stack;$/;"	m	struct:Lwpparams
tid1	runtime\defs_dragonfly_amd64.h	/^	int32	*tid1;$/;"	m	struct:Lwpparams
tid2	runtime\defs_dragonfly_amd64.h	/^	int32	*tid2;$/;"	m	struct:Lwpparams
tv_nsec	runtime\defs_dragonfly_amd64.h	/^	int64	tv_nsec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_dragonfly_amd64.h	/^	int64	tv_sec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_dragonfly_amd64.h	/^	int64	tv_sec;$/;"	m	struct:Timeval
tv_usec	runtime\defs_dragonfly_amd64.h	/^	int64	tv_usec;$/;"	m	struct:Timeval
type	runtime\defs_dragonfly_amd64.h	/^	uint16	type;$/;"	m	struct:Rtprio
uc_link	runtime\defs_dragonfly_amd64.h	/^	Ucontext	*uc_link;$/;"	m	struct:Ucontext
uc_mcontext	runtime\defs_dragonfly_amd64.h	/^	Mcontext	uc_mcontext;$/;"	m	struct:Ucontext
uc_sigmask	runtime\defs_dragonfly_amd64.h	/^	Sigset	uc_sigmask;$/;"	m	struct:Ucontext
uc_stack	runtime\defs_dragonfly_amd64.h	/^	StackT	uc_stack;$/;"	m	struct:Ucontext
udata	runtime\defs_dragonfly_amd64.h	/^	byte	*udata;$/;"	m	struct:Kevent
BUS_ADRALN	runtime\defs_freebsd_386.h	/^	BUS_ADRALN	= 0x1,$/;"	e	enum:__anon13
BUS_ADRERR	runtime\defs_freebsd_386.h	/^	BUS_ADRERR	= 0x2,$/;"	e	enum:__anon13
BUS_OBJERR	runtime\defs_freebsd_386.h	/^	BUS_OBJERR	= 0x3,$/;"	e	enum:__anon13
EFAULT	runtime\defs_freebsd_386.h	/^	EFAULT	= 0xe,$/;"	e	enum:__anon13
EINTR	runtime\defs_freebsd_386.h	/^	EINTR	= 0x4,$/;"	e	enum:__anon13
EVFILT_READ	runtime\defs_freebsd_386.h	/^	EVFILT_READ	= -0x1,$/;"	e	enum:__anon13
EVFILT_WRITE	runtime\defs_freebsd_386.h	/^	EVFILT_WRITE	= -0x2,$/;"	e	enum:__anon13
EV_ADD	runtime\defs_freebsd_386.h	/^	EV_ADD		= 0x1,$/;"	e	enum:__anon13
EV_CLEAR	runtime\defs_freebsd_386.h	/^	EV_CLEAR	= 0x20,$/;"	e	enum:__anon13
EV_DELETE	runtime\defs_freebsd_386.h	/^	EV_DELETE	= 0x2,$/;"	e	enum:__anon13
EV_ERROR	runtime\defs_freebsd_386.h	/^	EV_ERROR	= 0x4000,$/;"	e	enum:__anon13
EV_RECEIPT	runtime\defs_freebsd_386.h	/^	EV_RECEIPT	= 0x40,$/;"	e	enum:__anon13
FPE_FLTDIV	runtime\defs_freebsd_386.h	/^	FPE_FLTDIV	= 0x3,$/;"	e	enum:__anon13
FPE_FLTINV	runtime\defs_freebsd_386.h	/^	FPE_FLTINV	= 0x7,$/;"	e	enum:__anon13
FPE_FLTOVF	runtime\defs_freebsd_386.h	/^	FPE_FLTOVF	= 0x4,$/;"	e	enum:__anon13
FPE_FLTRES	runtime\defs_freebsd_386.h	/^	FPE_FLTRES	= 0x6,$/;"	e	enum:__anon13
FPE_FLTSUB	runtime\defs_freebsd_386.h	/^	FPE_FLTSUB	= 0x8,$/;"	e	enum:__anon13
FPE_FLTUND	runtime\defs_freebsd_386.h	/^	FPE_FLTUND	= 0x5,$/;"	e	enum:__anon13
FPE_INTDIV	runtime\defs_freebsd_386.h	/^	FPE_INTDIV	= 0x2,$/;"	e	enum:__anon13
FPE_INTOVF	runtime\defs_freebsd_386.h	/^	FPE_INTOVF	= 0x1,$/;"	e	enum:__anon13
ITIMER_PROF	runtime\defs_freebsd_386.h	/^	ITIMER_PROF	= 0x2,$/;"	e	enum:__anon13
ITIMER_REAL	runtime\defs_freebsd_386.h	/^	ITIMER_REAL	= 0x0,$/;"	e	enum:__anon13
ITIMER_VIRTUAL	runtime\defs_freebsd_386.h	/^	ITIMER_VIRTUAL	= 0x1,$/;"	e	enum:__anon13
Itimerval	runtime\defs_freebsd_386.h	/^struct Itimerval {$/;"	s
Itimerval	runtime\defs_freebsd_386.h	/^typedef struct Itimerval Itimerval;$/;"	t	typeref:struct:Itimerval
Kevent	runtime\defs_freebsd_386.h	/^struct Kevent {$/;"	s
Kevent	runtime\defs_freebsd_386.h	/^typedef struct Kevent Kevent;$/;"	t	typeref:struct:Kevent
MADV_FREE	runtime\defs_freebsd_386.h	/^	MADV_FREE	= 0x5,$/;"	e	enum:__anon13
MAP_ANON	runtime\defs_freebsd_386.h	/^	MAP_ANON	= 0x1000,$/;"	e	enum:__anon13
MAP_FIXED	runtime\defs_freebsd_386.h	/^	MAP_FIXED	= 0x10,$/;"	e	enum:__anon13
MAP_PRIVATE	runtime\defs_freebsd_386.h	/^	MAP_PRIVATE	= 0x2,$/;"	e	enum:__anon13
Mcontext	runtime\defs_freebsd_386.h	/^struct Mcontext {$/;"	s
Mcontext	runtime\defs_freebsd_386.h	/^typedef struct Mcontext Mcontext;$/;"	t	typeref:struct:Mcontext
PROT_EXEC	runtime\defs_freebsd_386.h	/^	PROT_EXEC	= 0x4,$/;"	e	enum:__anon13
PROT_NONE	runtime\defs_freebsd_386.h	/^	PROT_NONE	= 0x0,$/;"	e	enum:__anon13
PROT_READ	runtime\defs_freebsd_386.h	/^	PROT_READ	= 0x1,$/;"	e	enum:__anon13
PROT_WRITE	runtime\defs_freebsd_386.h	/^	PROT_WRITE	= 0x2,$/;"	e	enum:__anon13
Pad_cgo_0	runtime\defs_freebsd_386.h	/^	byte	Pad_cgo_0[12];$/;"	m	struct:Ucontext
Rtprio	runtime\defs_freebsd_386.h	/^struct Rtprio {$/;"	s
Rtprio	runtime\defs_freebsd_386.h	/^typedef struct Rtprio Rtprio;$/;"	t	typeref:struct:Rtprio
SA_ONSTACK	runtime\defs_freebsd_386.h	/^	SA_ONSTACK	= 0x1,$/;"	e	enum:__anon13
SA_RESTART	runtime\defs_freebsd_386.h	/^	SA_RESTART	= 0x2,$/;"	e	enum:__anon13
SA_SIGINFO	runtime\defs_freebsd_386.h	/^	SA_SIGINFO	= 0x40,$/;"	e	enum:__anon13
SEGV_ACCERR	runtime\defs_freebsd_386.h	/^	SEGV_ACCERR	= 0x2,$/;"	e	enum:__anon13
SEGV_MAPERR	runtime\defs_freebsd_386.h	/^	SEGV_MAPERR	= 0x1,$/;"	e	enum:__anon13
SIGABRT	runtime\defs_freebsd_386.h	/^	SIGABRT		= 0x6,$/;"	e	enum:__anon13
SIGALRM	runtime\defs_freebsd_386.h	/^	SIGALRM		= 0xe,$/;"	e	enum:__anon13
SIGBUS	runtime\defs_freebsd_386.h	/^	SIGBUS		= 0xa,$/;"	e	enum:__anon13
SIGCHLD	runtime\defs_freebsd_386.h	/^	SIGCHLD		= 0x14,$/;"	e	enum:__anon13
SIGCONT	runtime\defs_freebsd_386.h	/^	SIGCONT		= 0x13,$/;"	e	enum:__anon13
SIGEMT	runtime\defs_freebsd_386.h	/^	SIGEMT		= 0x7,$/;"	e	enum:__anon13
SIGFPE	runtime\defs_freebsd_386.h	/^	SIGFPE		= 0x8,$/;"	e	enum:__anon13
SIGHUP	runtime\defs_freebsd_386.h	/^	SIGHUP		= 0x1,$/;"	e	enum:__anon13
SIGILL	runtime\defs_freebsd_386.h	/^	SIGILL		= 0x4,$/;"	e	enum:__anon13
SIGINFO	runtime\defs_freebsd_386.h	/^	SIGINFO		= 0x1d,$/;"	e	enum:__anon13
SIGINT	runtime\defs_freebsd_386.h	/^	SIGINT		= 0x2,$/;"	e	enum:__anon13
SIGIO	runtime\defs_freebsd_386.h	/^	SIGIO		= 0x17,$/;"	e	enum:__anon13
SIGKILL	runtime\defs_freebsd_386.h	/^	SIGKILL		= 0x9,$/;"	e	enum:__anon13
SIGPIPE	runtime\defs_freebsd_386.h	/^	SIGPIPE		= 0xd,$/;"	e	enum:__anon13
SIGPROF	runtime\defs_freebsd_386.h	/^	SIGPROF		= 0x1b,$/;"	e	enum:__anon13
SIGQUIT	runtime\defs_freebsd_386.h	/^	SIGQUIT		= 0x3,$/;"	e	enum:__anon13
SIGSEGV	runtime\defs_freebsd_386.h	/^	SIGSEGV		= 0xb,$/;"	e	enum:__anon13
SIGSTOP	runtime\defs_freebsd_386.h	/^	SIGSTOP		= 0x11,$/;"	e	enum:__anon13
SIGSYS	runtime\defs_freebsd_386.h	/^	SIGSYS		= 0xc,$/;"	e	enum:__anon13
SIGTERM	runtime\defs_freebsd_386.h	/^	SIGTERM		= 0xf,$/;"	e	enum:__anon13
SIGTRAP	runtime\defs_freebsd_386.h	/^	SIGTRAP		= 0x5,$/;"	e	enum:__anon13
SIGTSTP	runtime\defs_freebsd_386.h	/^	SIGTSTP		= 0x12,$/;"	e	enum:__anon13
SIGTTIN	runtime\defs_freebsd_386.h	/^	SIGTTIN		= 0x15,$/;"	e	enum:__anon13
SIGTTOU	runtime\defs_freebsd_386.h	/^	SIGTTOU		= 0x16,$/;"	e	enum:__anon13
SIGURG	runtime\defs_freebsd_386.h	/^	SIGURG		= 0x10,$/;"	e	enum:__anon13
SIGUSR1	runtime\defs_freebsd_386.h	/^	SIGUSR1		= 0x1e,$/;"	e	enum:__anon13
SIGUSR2	runtime\defs_freebsd_386.h	/^	SIGUSR2		= 0x1f,$/;"	e	enum:__anon13
SIGVTALRM	runtime\defs_freebsd_386.h	/^	SIGVTALRM	= 0x1a,$/;"	e	enum:__anon13
SIGWINCH	runtime\defs_freebsd_386.h	/^	SIGWINCH	= 0x1c,$/;"	e	enum:__anon13
SIGXCPU	runtime\defs_freebsd_386.h	/^	SIGXCPU		= 0x18,$/;"	e	enum:__anon13
SIGXFSZ	runtime\defs_freebsd_386.h	/^	SIGXFSZ		= 0x19,$/;"	e	enum:__anon13
Sigaltstack	runtime\defs_freebsd_386.h	/^struct Sigaltstack {$/;"	s
Sigaltstack	runtime\defs_freebsd_386.h	/^typedef struct Sigaltstack Sigaltstack;$/;"	t	typeref:struct:Sigaltstack
Siginfo	runtime\defs_freebsd_386.h	/^struct Siginfo {$/;"	s
Siginfo	runtime\defs_freebsd_386.h	/^typedef struct Siginfo Siginfo;$/;"	t	typeref:struct:Siginfo
Sigset	runtime\defs_freebsd_386.h	/^struct Sigset {$/;"	s
Sigset	runtime\defs_freebsd_386.h	/^typedef struct Sigset Sigset;$/;"	t	typeref:struct:Sigset
StackT	runtime\defs_freebsd_386.h	/^struct StackT {$/;"	s
StackT	runtime\defs_freebsd_386.h	/^typedef struct StackT StackT;$/;"	t	typeref:struct:StackT
ThrParam	runtime\defs_freebsd_386.h	/^struct ThrParam {$/;"	s
ThrParam	runtime\defs_freebsd_386.h	/^typedef struct ThrParam ThrParam;$/;"	t	typeref:struct:ThrParam
Timespec	runtime\defs_freebsd_386.h	/^struct Timespec {$/;"	s
Timespec	runtime\defs_freebsd_386.h	/^typedef struct Timespec Timespec;$/;"	t	typeref:struct:Timespec
Timeval	runtime\defs_freebsd_386.h	/^struct Timeval {$/;"	s
Timeval	runtime\defs_freebsd_386.h	/^typedef struct Timeval Timeval;$/;"	t	typeref:struct:Timeval
UMTX_OP_WAIT_UINT	runtime\defs_freebsd_386.h	/^	UMTX_OP_WAIT_UINT	= 0xb,$/;"	e	enum:__anon13
UMTX_OP_WAKE	runtime\defs_freebsd_386.h	/^	UMTX_OP_WAKE		= 0x3,$/;"	e	enum:__anon13
Ucontext	runtime\defs_freebsd_386.h	/^struct Ucontext {$/;"	s
Ucontext	runtime\defs_freebsd_386.h	/^typedef struct Ucontext Ucontext;$/;"	t	typeref:struct:Ucontext
__bits	runtime\defs_freebsd_386.h	/^	uint32	__bits[4];$/;"	m	struct:Sigset
__spare__	runtime\defs_freebsd_386.h	/^	int32	__spare__[4];$/;"	m	struct:Ucontext
_reason	runtime\defs_freebsd_386.h	/^	byte	_reason[32];$/;"	m	struct:Siginfo
arg	runtime\defs_freebsd_386.h	/^	byte	*arg;$/;"	m	struct:ThrParam
child_tid	runtime\defs_freebsd_386.h	/^	int32	*child_tid;$/;"	m	struct:ThrParam
data	runtime\defs_freebsd_386.h	/^	int32	data;$/;"	m	struct:Kevent
fflags	runtime\defs_freebsd_386.h	/^	uint32	fflags;$/;"	m	struct:Kevent
filter	runtime\defs_freebsd_386.h	/^	int16	filter;$/;"	m	struct:Kevent
flags	runtime\defs_freebsd_386.h	/^	int32	flags;$/;"	m	struct:ThrParam
flags	runtime\defs_freebsd_386.h	/^	uint16	flags;$/;"	m	struct:Kevent
ident	runtime\defs_freebsd_386.h	/^	uint32	ident;$/;"	m	struct:Kevent
it_interval	runtime\defs_freebsd_386.h	/^	Timeval	it_interval;$/;"	m	struct:Itimerval
it_value	runtime\defs_freebsd_386.h	/^	Timeval	it_value;$/;"	m	struct:Itimerval
mc_cs	runtime\defs_freebsd_386.h	/^	int32	mc_cs;$/;"	m	struct:Mcontext
mc_ds	runtime\defs_freebsd_386.h	/^	int32	mc_ds;$/;"	m	struct:Mcontext
mc_eax	runtime\defs_freebsd_386.h	/^	int32	mc_eax;$/;"	m	struct:Mcontext
mc_ebp	runtime\defs_freebsd_386.h	/^	int32	mc_ebp;$/;"	m	struct:Mcontext
mc_ebx	runtime\defs_freebsd_386.h	/^	int32	mc_ebx;$/;"	m	struct:Mcontext
mc_ecx	runtime\defs_freebsd_386.h	/^	int32	mc_ecx;$/;"	m	struct:Mcontext
mc_edi	runtime\defs_freebsd_386.h	/^	int32	mc_edi;$/;"	m	struct:Mcontext
mc_edx	runtime\defs_freebsd_386.h	/^	int32	mc_edx;$/;"	m	struct:Mcontext
mc_eflags	runtime\defs_freebsd_386.h	/^	int32	mc_eflags;$/;"	m	struct:Mcontext
mc_eip	runtime\defs_freebsd_386.h	/^	int32	mc_eip;$/;"	m	struct:Mcontext
mc_err	runtime\defs_freebsd_386.h	/^	int32	mc_err;$/;"	m	struct:Mcontext
mc_es	runtime\defs_freebsd_386.h	/^	int32	mc_es;$/;"	m	struct:Mcontext
mc_esi	runtime\defs_freebsd_386.h	/^	int32	mc_esi;$/;"	m	struct:Mcontext
mc_esp	runtime\defs_freebsd_386.h	/^	int32	mc_esp;$/;"	m	struct:Mcontext
mc_flags	runtime\defs_freebsd_386.h	/^	int32	mc_flags;$/;"	m	struct:Mcontext
mc_fpformat	runtime\defs_freebsd_386.h	/^	int32	mc_fpformat;$/;"	m	struct:Mcontext
mc_fpstate	runtime\defs_freebsd_386.h	/^	int32	mc_fpstate[128];$/;"	m	struct:Mcontext
mc_fs	runtime\defs_freebsd_386.h	/^	int32	mc_fs;$/;"	m	struct:Mcontext
mc_fsbase	runtime\defs_freebsd_386.h	/^	int32	mc_fsbase;$/;"	m	struct:Mcontext
mc_gs	runtime\defs_freebsd_386.h	/^	int32	mc_gs;$/;"	m	struct:Mcontext
mc_gsbase	runtime\defs_freebsd_386.h	/^	int32	mc_gsbase;$/;"	m	struct:Mcontext
mc_isp	runtime\defs_freebsd_386.h	/^	int32	mc_isp;$/;"	m	struct:Mcontext
mc_len	runtime\defs_freebsd_386.h	/^	int32	mc_len;$/;"	m	struct:Mcontext
mc_onstack	runtime\defs_freebsd_386.h	/^	int32	mc_onstack;$/;"	m	struct:Mcontext
mc_ownedfp	runtime\defs_freebsd_386.h	/^	int32	mc_ownedfp;$/;"	m	struct:Mcontext
mc_spare2	runtime\defs_freebsd_386.h	/^	int32	mc_spare2[4];$/;"	m	struct:Mcontext
mc_ss	runtime\defs_freebsd_386.h	/^	int32	mc_ss;$/;"	m	struct:Mcontext
mc_trapno	runtime\defs_freebsd_386.h	/^	int32	mc_trapno;$/;"	m	struct:Mcontext
mc_xfpustate	runtime\defs_freebsd_386.h	/^	int32	mc_xfpustate;$/;"	m	struct:Mcontext
mc_xfpustate_len	runtime\defs_freebsd_386.h	/^	int32	mc_xfpustate_len;$/;"	m	struct:Mcontext
parent_tid	runtime\defs_freebsd_386.h	/^	int32	*parent_tid;$/;"	m	struct:ThrParam
prio	runtime\defs_freebsd_386.h	/^	uint16	prio;$/;"	m	struct:Rtprio
rtp	runtime\defs_freebsd_386.h	/^	Rtprio	*rtp;$/;"	m	struct:ThrParam
si_addr	runtime\defs_freebsd_386.h	/^	byte	*si_addr;$/;"	m	struct:Siginfo
si_code	runtime\defs_freebsd_386.h	/^	int32	si_code;$/;"	m	struct:Siginfo
si_errno	runtime\defs_freebsd_386.h	/^	int32	si_errno;$/;"	m	struct:Siginfo
si_pid	runtime\defs_freebsd_386.h	/^	int32	si_pid;$/;"	m	struct:Siginfo
si_signo	runtime\defs_freebsd_386.h	/^	int32	si_signo;$/;"	m	struct:Siginfo
si_status	runtime\defs_freebsd_386.h	/^	int32	si_status;$/;"	m	struct:Siginfo
si_uid	runtime\defs_freebsd_386.h	/^	uint32	si_uid;$/;"	m	struct:Siginfo
si_value	runtime\defs_freebsd_386.h	/^	byte	si_value[4];$/;"	m	struct:Siginfo
spare	runtime\defs_freebsd_386.h	/^	void	*spare[3];$/;"	m	struct:ThrParam
ss_flags	runtime\defs_freebsd_386.h	/^	int32	ss_flags;$/;"	m	struct:Sigaltstack
ss_flags	runtime\defs_freebsd_386.h	/^	int32	ss_flags;$/;"	m	struct:StackT
ss_size	runtime\defs_freebsd_386.h	/^	uint32	ss_size;$/;"	m	struct:Sigaltstack
ss_size	runtime\defs_freebsd_386.h	/^	uint32	ss_size;$/;"	m	struct:StackT
ss_sp	runtime\defs_freebsd_386.h	/^	int8	*ss_sp;$/;"	m	struct:Sigaltstack
ss_sp	runtime\defs_freebsd_386.h	/^	int8	*ss_sp;$/;"	m	struct:StackT
stack_base	runtime\defs_freebsd_386.h	/^	int8	*stack_base;$/;"	m	struct:ThrParam
stack_size	runtime\defs_freebsd_386.h	/^	uint32	stack_size;$/;"	m	struct:ThrParam
start_func	runtime\defs_freebsd_386.h	/^	void	*start_func;$/;"	m	struct:ThrParam
tls_base	runtime\defs_freebsd_386.h	/^	int8	*tls_base;$/;"	m	struct:ThrParam
tls_size	runtime\defs_freebsd_386.h	/^	uint32	tls_size;$/;"	m	struct:ThrParam
tv_nsec	runtime\defs_freebsd_386.h	/^	int32	tv_nsec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_freebsd_386.h	/^	int32	tv_sec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_freebsd_386.h	/^	int32	tv_sec;$/;"	m	struct:Timeval
tv_usec	runtime\defs_freebsd_386.h	/^	int32	tv_usec;$/;"	m	struct:Timeval
type	runtime\defs_freebsd_386.h	/^	uint16	type;$/;"	m	struct:Rtprio
uc_flags	runtime\defs_freebsd_386.h	/^	int32	uc_flags;$/;"	m	struct:Ucontext
uc_link	runtime\defs_freebsd_386.h	/^	Ucontext	*uc_link;$/;"	m	struct:Ucontext
uc_mcontext	runtime\defs_freebsd_386.h	/^	Mcontext	uc_mcontext;$/;"	m	struct:Ucontext
uc_sigmask	runtime\defs_freebsd_386.h	/^	Sigset	uc_sigmask;$/;"	m	struct:Ucontext
uc_stack	runtime\defs_freebsd_386.h	/^	StackT	uc_stack;$/;"	m	struct:Ucontext
udata	runtime\defs_freebsd_386.h	/^	byte	*udata;$/;"	m	struct:Kevent
BUS_ADRALN	runtime\defs_freebsd_amd64.h	/^	BUS_ADRALN	= 0x1,$/;"	e	enum:__anon14
BUS_ADRERR	runtime\defs_freebsd_amd64.h	/^	BUS_ADRERR	= 0x2,$/;"	e	enum:__anon14
BUS_OBJERR	runtime\defs_freebsd_amd64.h	/^	BUS_OBJERR	= 0x3,$/;"	e	enum:__anon14
EFAULT	runtime\defs_freebsd_amd64.h	/^	EFAULT	= 0xe,$/;"	e	enum:__anon14
EINTR	runtime\defs_freebsd_amd64.h	/^	EINTR	= 0x4,$/;"	e	enum:__anon14
EVFILT_READ	runtime\defs_freebsd_amd64.h	/^	EVFILT_READ	= -0x1,$/;"	e	enum:__anon14
EVFILT_WRITE	runtime\defs_freebsd_amd64.h	/^	EVFILT_WRITE	= -0x2,$/;"	e	enum:__anon14
EV_ADD	runtime\defs_freebsd_amd64.h	/^	EV_ADD		= 0x1,$/;"	e	enum:__anon14
EV_CLEAR	runtime\defs_freebsd_amd64.h	/^	EV_CLEAR	= 0x20,$/;"	e	enum:__anon14
EV_DELETE	runtime\defs_freebsd_amd64.h	/^	EV_DELETE	= 0x2,$/;"	e	enum:__anon14
EV_ERROR	runtime\defs_freebsd_amd64.h	/^	EV_ERROR	= 0x4000,$/;"	e	enum:__anon14
EV_RECEIPT	runtime\defs_freebsd_amd64.h	/^	EV_RECEIPT	= 0x40,$/;"	e	enum:__anon14
FPE_FLTDIV	runtime\defs_freebsd_amd64.h	/^	FPE_FLTDIV	= 0x3,$/;"	e	enum:__anon14
FPE_FLTINV	runtime\defs_freebsd_amd64.h	/^	FPE_FLTINV	= 0x7,$/;"	e	enum:__anon14
FPE_FLTOVF	runtime\defs_freebsd_amd64.h	/^	FPE_FLTOVF	= 0x4,$/;"	e	enum:__anon14
FPE_FLTRES	runtime\defs_freebsd_amd64.h	/^	FPE_FLTRES	= 0x6,$/;"	e	enum:__anon14
FPE_FLTSUB	runtime\defs_freebsd_amd64.h	/^	FPE_FLTSUB	= 0x8,$/;"	e	enum:__anon14
FPE_FLTUND	runtime\defs_freebsd_amd64.h	/^	FPE_FLTUND	= 0x5,$/;"	e	enum:__anon14
FPE_INTDIV	runtime\defs_freebsd_amd64.h	/^	FPE_INTDIV	= 0x2,$/;"	e	enum:__anon14
FPE_INTOVF	runtime\defs_freebsd_amd64.h	/^	FPE_INTOVF	= 0x1,$/;"	e	enum:__anon14
ITIMER_PROF	runtime\defs_freebsd_amd64.h	/^	ITIMER_PROF	= 0x2,$/;"	e	enum:__anon14
ITIMER_REAL	runtime\defs_freebsd_amd64.h	/^	ITIMER_REAL	= 0x0,$/;"	e	enum:__anon14
ITIMER_VIRTUAL	runtime\defs_freebsd_amd64.h	/^	ITIMER_VIRTUAL	= 0x1,$/;"	e	enum:__anon14
Itimerval	runtime\defs_freebsd_amd64.h	/^struct Itimerval {$/;"	s
Itimerval	runtime\defs_freebsd_amd64.h	/^typedef struct Itimerval Itimerval;$/;"	t	typeref:struct:Itimerval
Kevent	runtime\defs_freebsd_amd64.h	/^struct Kevent {$/;"	s
Kevent	runtime\defs_freebsd_amd64.h	/^typedef struct Kevent Kevent;$/;"	t	typeref:struct:Kevent
MADV_FREE	runtime\defs_freebsd_amd64.h	/^	MADV_FREE	= 0x5,$/;"	e	enum:__anon14
MAP_ANON	runtime\defs_freebsd_amd64.h	/^	MAP_ANON	= 0x1000,$/;"	e	enum:__anon14
MAP_FIXED	runtime\defs_freebsd_amd64.h	/^	MAP_FIXED	= 0x10,$/;"	e	enum:__anon14
MAP_PRIVATE	runtime\defs_freebsd_amd64.h	/^	MAP_PRIVATE	= 0x2,$/;"	e	enum:__anon14
Mcontext	runtime\defs_freebsd_amd64.h	/^struct Mcontext {$/;"	s
Mcontext	runtime\defs_freebsd_amd64.h	/^typedef struct Mcontext Mcontext;$/;"	t	typeref:struct:Mcontext
PROT_EXEC	runtime\defs_freebsd_amd64.h	/^	PROT_EXEC	= 0x4,$/;"	e	enum:__anon14
PROT_NONE	runtime\defs_freebsd_amd64.h	/^	PROT_NONE	= 0x0,$/;"	e	enum:__anon14
PROT_READ	runtime\defs_freebsd_amd64.h	/^	PROT_READ	= 0x1,$/;"	e	enum:__anon14
PROT_WRITE	runtime\defs_freebsd_amd64.h	/^	PROT_WRITE	= 0x2,$/;"	e	enum:__anon14
Pad_cgo_0	runtime\defs_freebsd_amd64.h	/^	byte	Pad_cgo_0[12];$/;"	m	struct:Ucontext
Pad_cgo_0	runtime\defs_freebsd_amd64.h	/^	byte	Pad_cgo_0[4];$/;"	m	struct:Sigaltstack
Pad_cgo_0	runtime\defs_freebsd_amd64.h	/^	byte	Pad_cgo_0[4];$/;"	m	struct:StackT
Pad_cgo_0	runtime\defs_freebsd_amd64.h	/^	byte	Pad_cgo_0[4];$/;"	m	struct:ThrParam
Rtprio	runtime\defs_freebsd_amd64.h	/^struct Rtprio {$/;"	s
Rtprio	runtime\defs_freebsd_amd64.h	/^typedef struct Rtprio Rtprio;$/;"	t	typeref:struct:Rtprio
SA_ONSTACK	runtime\defs_freebsd_amd64.h	/^	SA_ONSTACK	= 0x1,$/;"	e	enum:__anon14
SA_RESTART	runtime\defs_freebsd_amd64.h	/^	SA_RESTART	= 0x2,$/;"	e	enum:__anon14
SA_SIGINFO	runtime\defs_freebsd_amd64.h	/^	SA_SIGINFO	= 0x40,$/;"	e	enum:__anon14
SEGV_ACCERR	runtime\defs_freebsd_amd64.h	/^	SEGV_ACCERR	= 0x2,$/;"	e	enum:__anon14
SEGV_MAPERR	runtime\defs_freebsd_amd64.h	/^	SEGV_MAPERR	= 0x1,$/;"	e	enum:__anon14
SIGABRT	runtime\defs_freebsd_amd64.h	/^	SIGABRT		= 0x6,$/;"	e	enum:__anon14
SIGALRM	runtime\defs_freebsd_amd64.h	/^	SIGALRM		= 0xe,$/;"	e	enum:__anon14
SIGBUS	runtime\defs_freebsd_amd64.h	/^	SIGBUS		= 0xa,$/;"	e	enum:__anon14
SIGCHLD	runtime\defs_freebsd_amd64.h	/^	SIGCHLD		= 0x14,$/;"	e	enum:__anon14
SIGCONT	runtime\defs_freebsd_amd64.h	/^	SIGCONT		= 0x13,$/;"	e	enum:__anon14
SIGEMT	runtime\defs_freebsd_amd64.h	/^	SIGEMT		= 0x7,$/;"	e	enum:__anon14
SIGFPE	runtime\defs_freebsd_amd64.h	/^	SIGFPE		= 0x8,$/;"	e	enum:__anon14
SIGHUP	runtime\defs_freebsd_amd64.h	/^	SIGHUP		= 0x1,$/;"	e	enum:__anon14
SIGILL	runtime\defs_freebsd_amd64.h	/^	SIGILL		= 0x4,$/;"	e	enum:__anon14
SIGINFO	runtime\defs_freebsd_amd64.h	/^	SIGINFO		= 0x1d,$/;"	e	enum:__anon14
SIGINT	runtime\defs_freebsd_amd64.h	/^	SIGINT		= 0x2,$/;"	e	enum:__anon14
SIGIO	runtime\defs_freebsd_amd64.h	/^	SIGIO		= 0x17,$/;"	e	enum:__anon14
SIGKILL	runtime\defs_freebsd_amd64.h	/^	SIGKILL		= 0x9,$/;"	e	enum:__anon14
SIGPIPE	runtime\defs_freebsd_amd64.h	/^	SIGPIPE		= 0xd,$/;"	e	enum:__anon14
SIGPROF	runtime\defs_freebsd_amd64.h	/^	SIGPROF		= 0x1b,$/;"	e	enum:__anon14
SIGQUIT	runtime\defs_freebsd_amd64.h	/^	SIGQUIT		= 0x3,$/;"	e	enum:__anon14
SIGSEGV	runtime\defs_freebsd_amd64.h	/^	SIGSEGV		= 0xb,$/;"	e	enum:__anon14
SIGSTOP	runtime\defs_freebsd_amd64.h	/^	SIGSTOP		= 0x11,$/;"	e	enum:__anon14
SIGSYS	runtime\defs_freebsd_amd64.h	/^	SIGSYS		= 0xc,$/;"	e	enum:__anon14
SIGTERM	runtime\defs_freebsd_amd64.h	/^	SIGTERM		= 0xf,$/;"	e	enum:__anon14
SIGTRAP	runtime\defs_freebsd_amd64.h	/^	SIGTRAP		= 0x5,$/;"	e	enum:__anon14
SIGTSTP	runtime\defs_freebsd_amd64.h	/^	SIGTSTP		= 0x12,$/;"	e	enum:__anon14
SIGTTIN	runtime\defs_freebsd_amd64.h	/^	SIGTTIN		= 0x15,$/;"	e	enum:__anon14
SIGTTOU	runtime\defs_freebsd_amd64.h	/^	SIGTTOU		= 0x16,$/;"	e	enum:__anon14
SIGURG	runtime\defs_freebsd_amd64.h	/^	SIGURG		= 0x10,$/;"	e	enum:__anon14
SIGUSR1	runtime\defs_freebsd_amd64.h	/^	SIGUSR1		= 0x1e,$/;"	e	enum:__anon14
SIGUSR2	runtime\defs_freebsd_amd64.h	/^	SIGUSR2		= 0x1f,$/;"	e	enum:__anon14
SIGVTALRM	runtime\defs_freebsd_amd64.h	/^	SIGVTALRM	= 0x1a,$/;"	e	enum:__anon14
SIGWINCH	runtime\defs_freebsd_amd64.h	/^	SIGWINCH	= 0x1c,$/;"	e	enum:__anon14
SIGXCPU	runtime\defs_freebsd_amd64.h	/^	SIGXCPU		= 0x18,$/;"	e	enum:__anon14
SIGXFSZ	runtime\defs_freebsd_amd64.h	/^	SIGXFSZ		= 0x19,$/;"	e	enum:__anon14
Sigaltstack	runtime\defs_freebsd_amd64.h	/^struct Sigaltstack {$/;"	s
Sigaltstack	runtime\defs_freebsd_amd64.h	/^typedef struct Sigaltstack Sigaltstack;$/;"	t	typeref:struct:Sigaltstack
Siginfo	runtime\defs_freebsd_amd64.h	/^struct Siginfo {$/;"	s
Siginfo	runtime\defs_freebsd_amd64.h	/^typedef struct Siginfo Siginfo;$/;"	t	typeref:struct:Siginfo
Sigset	runtime\defs_freebsd_amd64.h	/^struct Sigset {$/;"	s
Sigset	runtime\defs_freebsd_amd64.h	/^typedef struct Sigset Sigset;$/;"	t	typeref:struct:Sigset
StackT	runtime\defs_freebsd_amd64.h	/^struct StackT {$/;"	s
StackT	runtime\defs_freebsd_amd64.h	/^typedef struct StackT StackT;$/;"	t	typeref:struct:StackT
ThrParam	runtime\defs_freebsd_amd64.h	/^struct ThrParam {$/;"	s
ThrParam	runtime\defs_freebsd_amd64.h	/^typedef struct ThrParam ThrParam;$/;"	t	typeref:struct:ThrParam
Timespec	runtime\defs_freebsd_amd64.h	/^struct Timespec {$/;"	s
Timespec	runtime\defs_freebsd_amd64.h	/^typedef struct Timespec Timespec;$/;"	t	typeref:struct:Timespec
Timeval	runtime\defs_freebsd_amd64.h	/^struct Timeval {$/;"	s
Timeval	runtime\defs_freebsd_amd64.h	/^typedef struct Timeval Timeval;$/;"	t	typeref:struct:Timeval
UMTX_OP_WAIT_UINT	runtime\defs_freebsd_amd64.h	/^	UMTX_OP_WAIT_UINT	= 0xb,$/;"	e	enum:__anon14
UMTX_OP_WAKE	runtime\defs_freebsd_amd64.h	/^	UMTX_OP_WAKE		= 0x3,$/;"	e	enum:__anon14
Ucontext	runtime\defs_freebsd_amd64.h	/^struct Ucontext {$/;"	s
Ucontext	runtime\defs_freebsd_amd64.h	/^typedef struct Ucontext Ucontext;$/;"	t	typeref:struct:Ucontext
__bits	runtime\defs_freebsd_amd64.h	/^	uint32	__bits[4];$/;"	m	struct:Sigset
__spare__	runtime\defs_freebsd_amd64.h	/^	int32	__spare__[4];$/;"	m	struct:Ucontext
_reason	runtime\defs_freebsd_amd64.h	/^	byte	_reason[40];$/;"	m	struct:Siginfo
arg	runtime\defs_freebsd_amd64.h	/^	byte	*arg;$/;"	m	struct:ThrParam
child_tid	runtime\defs_freebsd_amd64.h	/^	int64	*child_tid;$/;"	m	struct:ThrParam
data	runtime\defs_freebsd_amd64.h	/^	int64	data;$/;"	m	struct:Kevent
fflags	runtime\defs_freebsd_amd64.h	/^	uint32	fflags;$/;"	m	struct:Kevent
filter	runtime\defs_freebsd_amd64.h	/^	int16	filter;$/;"	m	struct:Kevent
flags	runtime\defs_freebsd_amd64.h	/^	int32	flags;$/;"	m	struct:ThrParam
flags	runtime\defs_freebsd_amd64.h	/^	uint16	flags;$/;"	m	struct:Kevent
ident	runtime\defs_freebsd_amd64.h	/^	uint64	ident;$/;"	m	struct:Kevent
it_interval	runtime\defs_freebsd_amd64.h	/^	Timeval	it_interval;$/;"	m	struct:Itimerval
it_value	runtime\defs_freebsd_amd64.h	/^	Timeval	it_value;$/;"	m	struct:Itimerval
mc_addr	runtime\defs_freebsd_amd64.h	/^	int64	mc_addr;$/;"	m	struct:Mcontext
mc_cs	runtime\defs_freebsd_amd64.h	/^	int64	mc_cs;$/;"	m	struct:Mcontext
mc_ds	runtime\defs_freebsd_amd64.h	/^	uint16	mc_ds;$/;"	m	struct:Mcontext
mc_err	runtime\defs_freebsd_amd64.h	/^	int64	mc_err;$/;"	m	struct:Mcontext
mc_es	runtime\defs_freebsd_amd64.h	/^	uint16	mc_es;$/;"	m	struct:Mcontext
mc_flags	runtime\defs_freebsd_amd64.h	/^	uint32	mc_flags;$/;"	m	struct:Mcontext
mc_fpformat	runtime\defs_freebsd_amd64.h	/^	int64	mc_fpformat;$/;"	m	struct:Mcontext
mc_fpstate	runtime\defs_freebsd_amd64.h	/^	int64	mc_fpstate[64];$/;"	m	struct:Mcontext
mc_fs	runtime\defs_freebsd_amd64.h	/^	uint16	mc_fs;$/;"	m	struct:Mcontext
mc_fsbase	runtime\defs_freebsd_amd64.h	/^	int64	mc_fsbase;$/;"	m	struct:Mcontext
mc_gs	runtime\defs_freebsd_amd64.h	/^	uint16	mc_gs;$/;"	m	struct:Mcontext
mc_gsbase	runtime\defs_freebsd_amd64.h	/^	int64	mc_gsbase;$/;"	m	struct:Mcontext
mc_len	runtime\defs_freebsd_amd64.h	/^	int64	mc_len;$/;"	m	struct:Mcontext
mc_onstack	runtime\defs_freebsd_amd64.h	/^	int64	mc_onstack;$/;"	m	struct:Mcontext
mc_ownedfp	runtime\defs_freebsd_amd64.h	/^	int64	mc_ownedfp;$/;"	m	struct:Mcontext
mc_r10	runtime\defs_freebsd_amd64.h	/^	int64	mc_r10;$/;"	m	struct:Mcontext
mc_r11	runtime\defs_freebsd_amd64.h	/^	int64	mc_r11;$/;"	m	struct:Mcontext
mc_r12	runtime\defs_freebsd_amd64.h	/^	int64	mc_r12;$/;"	m	struct:Mcontext
mc_r13	runtime\defs_freebsd_amd64.h	/^	int64	mc_r13;$/;"	m	struct:Mcontext
mc_r14	runtime\defs_freebsd_amd64.h	/^	int64	mc_r14;$/;"	m	struct:Mcontext
mc_r15	runtime\defs_freebsd_amd64.h	/^	int64	mc_r15;$/;"	m	struct:Mcontext
mc_r8	runtime\defs_freebsd_amd64.h	/^	int64	mc_r8;$/;"	m	struct:Mcontext
mc_r9	runtime\defs_freebsd_amd64.h	/^	int64	mc_r9;$/;"	m	struct:Mcontext
mc_rax	runtime\defs_freebsd_amd64.h	/^	int64	mc_rax;$/;"	m	struct:Mcontext
mc_rbp	runtime\defs_freebsd_amd64.h	/^	int64	mc_rbp;$/;"	m	struct:Mcontext
mc_rbx	runtime\defs_freebsd_amd64.h	/^	int64	mc_rbx;$/;"	m	struct:Mcontext
mc_rcx	runtime\defs_freebsd_amd64.h	/^	int64	mc_rcx;$/;"	m	struct:Mcontext
mc_rdi	runtime\defs_freebsd_amd64.h	/^	int64	mc_rdi;$/;"	m	struct:Mcontext
mc_rdx	runtime\defs_freebsd_amd64.h	/^	int64	mc_rdx;$/;"	m	struct:Mcontext
mc_rflags	runtime\defs_freebsd_amd64.h	/^	int64	mc_rflags;$/;"	m	struct:Mcontext
mc_rip	runtime\defs_freebsd_amd64.h	/^	int64	mc_rip;$/;"	m	struct:Mcontext
mc_rsi	runtime\defs_freebsd_amd64.h	/^	int64	mc_rsi;$/;"	m	struct:Mcontext
mc_rsp	runtime\defs_freebsd_amd64.h	/^	int64	mc_rsp;$/;"	m	struct:Mcontext
mc_spare	runtime\defs_freebsd_amd64.h	/^	int64	mc_spare[4];$/;"	m	struct:Mcontext
mc_ss	runtime\defs_freebsd_amd64.h	/^	int64	mc_ss;$/;"	m	struct:Mcontext
mc_trapno	runtime\defs_freebsd_amd64.h	/^	uint32	mc_trapno;$/;"	m	struct:Mcontext
mc_xfpustate	runtime\defs_freebsd_amd64.h	/^	int64	mc_xfpustate;$/;"	m	struct:Mcontext
mc_xfpustate_len	runtime\defs_freebsd_amd64.h	/^	int64	mc_xfpustate_len;$/;"	m	struct:Mcontext
parent_tid	runtime\defs_freebsd_amd64.h	/^	int64	*parent_tid;$/;"	m	struct:ThrParam
prio	runtime\defs_freebsd_amd64.h	/^	uint16	prio;$/;"	m	struct:Rtprio
rtp	runtime\defs_freebsd_amd64.h	/^	Rtprio	*rtp;$/;"	m	struct:ThrParam
si_addr	runtime\defs_freebsd_amd64.h	/^	byte	*si_addr;$/;"	m	struct:Siginfo
si_code	runtime\defs_freebsd_amd64.h	/^	int32	si_code;$/;"	m	struct:Siginfo
si_errno	runtime\defs_freebsd_amd64.h	/^	int32	si_errno;$/;"	m	struct:Siginfo
si_pid	runtime\defs_freebsd_amd64.h	/^	int32	si_pid;$/;"	m	struct:Siginfo
si_signo	runtime\defs_freebsd_amd64.h	/^	int32	si_signo;$/;"	m	struct:Siginfo
si_status	runtime\defs_freebsd_amd64.h	/^	int32	si_status;$/;"	m	struct:Siginfo
si_uid	runtime\defs_freebsd_amd64.h	/^	uint32	si_uid;$/;"	m	struct:Siginfo
si_value	runtime\defs_freebsd_amd64.h	/^	byte	si_value[8];$/;"	m	struct:Siginfo
spare	runtime\defs_freebsd_amd64.h	/^	void	*spare[3];$/;"	m	struct:ThrParam
ss_flags	runtime\defs_freebsd_amd64.h	/^	int32	ss_flags;$/;"	m	struct:Sigaltstack
ss_flags	runtime\defs_freebsd_amd64.h	/^	int32	ss_flags;$/;"	m	struct:StackT
ss_size	runtime\defs_freebsd_amd64.h	/^	uint64	ss_size;$/;"	m	struct:Sigaltstack
ss_size	runtime\defs_freebsd_amd64.h	/^	uint64	ss_size;$/;"	m	struct:StackT
ss_sp	runtime\defs_freebsd_amd64.h	/^	int8	*ss_sp;$/;"	m	struct:Sigaltstack
ss_sp	runtime\defs_freebsd_amd64.h	/^	int8	*ss_sp;$/;"	m	struct:StackT
stack_base	runtime\defs_freebsd_amd64.h	/^	int8	*stack_base;$/;"	m	struct:ThrParam
stack_size	runtime\defs_freebsd_amd64.h	/^	uint64	stack_size;$/;"	m	struct:ThrParam
start_func	runtime\defs_freebsd_amd64.h	/^	void	*start_func;$/;"	m	struct:ThrParam
tls_base	runtime\defs_freebsd_amd64.h	/^	int8	*tls_base;$/;"	m	struct:ThrParam
tls_size	runtime\defs_freebsd_amd64.h	/^	uint64	tls_size;$/;"	m	struct:ThrParam
tv_nsec	runtime\defs_freebsd_amd64.h	/^	int64	tv_nsec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_freebsd_amd64.h	/^	int64	tv_sec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_freebsd_amd64.h	/^	int64	tv_sec;$/;"	m	struct:Timeval
tv_usec	runtime\defs_freebsd_amd64.h	/^	int64	tv_usec;$/;"	m	struct:Timeval
type	runtime\defs_freebsd_amd64.h	/^	uint16	type;$/;"	m	struct:Rtprio
uc_flags	runtime\defs_freebsd_amd64.h	/^	int32	uc_flags;$/;"	m	struct:Ucontext
uc_link	runtime\defs_freebsd_amd64.h	/^	Ucontext	*uc_link;$/;"	m	struct:Ucontext
uc_mcontext	runtime\defs_freebsd_amd64.h	/^	Mcontext	uc_mcontext;$/;"	m	struct:Ucontext
uc_sigmask	runtime\defs_freebsd_amd64.h	/^	Sigset	uc_sigmask;$/;"	m	struct:Ucontext
uc_stack	runtime\defs_freebsd_amd64.h	/^	StackT	uc_stack;$/;"	m	struct:Ucontext
udata	runtime\defs_freebsd_amd64.h	/^	byte	*udata;$/;"	m	struct:Kevent
BUS_ADRALN	runtime\defs_freebsd_arm.h	/^	BUS_ADRALN	= 0x1,$/;"	e	enum:__anon15
BUS_ADRERR	runtime\defs_freebsd_arm.h	/^	BUS_ADRERR	= 0x2,$/;"	e	enum:__anon15
BUS_OBJERR	runtime\defs_freebsd_arm.h	/^	BUS_OBJERR	= 0x3,$/;"	e	enum:__anon15
EFAULT	runtime\defs_freebsd_arm.h	/^	EFAULT  = 0xe,$/;"	e	enum:__anon15
EINTR	runtime\defs_freebsd_arm.h	/^	EINTR	= 0x4,$/;"	e	enum:__anon15
EVFILT_READ	runtime\defs_freebsd_arm.h	/^	EVFILT_READ     = -0x1,$/;"	e	enum:__anon15
EVFILT_WRITE	runtime\defs_freebsd_arm.h	/^	EVFILT_WRITE    = -0x2,$/;"	e	enum:__anon15
EV_ADD	runtime\defs_freebsd_arm.h	/^	EV_ADD          = 0x1,$/;"	e	enum:__anon15
EV_CLEAR	runtime\defs_freebsd_arm.h	/^	EV_CLEAR        = 0x20,$/;"	e	enum:__anon15
EV_DELETE	runtime\defs_freebsd_arm.h	/^	EV_DELETE       = 0x2,$/;"	e	enum:__anon15
EV_ERROR	runtime\defs_freebsd_arm.h	/^	EV_ERROR        = 0x4000,$/;"	e	enum:__anon15
EV_RECEIPT	runtime\defs_freebsd_arm.h	/^	EV_RECEIPT      = 0x40,$/;"	e	enum:__anon15
FPE_FLTDIV	runtime\defs_freebsd_arm.h	/^	FPE_FLTDIV	= 0x3,$/;"	e	enum:__anon15
FPE_FLTINV	runtime\defs_freebsd_arm.h	/^	FPE_FLTINV	= 0x7,$/;"	e	enum:__anon15
FPE_FLTOVF	runtime\defs_freebsd_arm.h	/^	FPE_FLTOVF	= 0x4,$/;"	e	enum:__anon15
FPE_FLTRES	runtime\defs_freebsd_arm.h	/^	FPE_FLTRES	= 0x6,$/;"	e	enum:__anon15
FPE_FLTSUB	runtime\defs_freebsd_arm.h	/^	FPE_FLTSUB	= 0x8,$/;"	e	enum:__anon15
FPE_FLTUND	runtime\defs_freebsd_arm.h	/^	FPE_FLTUND	= 0x5,$/;"	e	enum:__anon15
FPE_INTDIV	runtime\defs_freebsd_arm.h	/^	FPE_INTDIV	= 0x2,$/;"	e	enum:__anon15
FPE_INTOVF	runtime\defs_freebsd_arm.h	/^	FPE_INTOVF	= 0x1,$/;"	e	enum:__anon15
ITIMER_PROF	runtime\defs_freebsd_arm.h	/^	ITIMER_PROF	= 0x2,$/;"	e	enum:__anon15
ITIMER_REAL	runtime\defs_freebsd_arm.h	/^	ITIMER_REAL	= 0x0,$/;"	e	enum:__anon15
ITIMER_VIRTUAL	runtime\defs_freebsd_arm.h	/^	ITIMER_VIRTUAL	= 0x1,$/;"	e	enum:__anon15
Itimerval	runtime\defs_freebsd_arm.h	/^struct Itimerval {$/;"	s
Itimerval	runtime\defs_freebsd_arm.h	/^typedef struct Itimerval Itimerval;$/;"	t	typeref:struct:Itimerval
Kevent	runtime\defs_freebsd_arm.h	/^struct Kevent {$/;"	s
Kevent	runtime\defs_freebsd_arm.h	/^typedef struct Kevent Kevent;$/;"	t	typeref:struct:Kevent
MADV_FREE	runtime\defs_freebsd_arm.h	/^	MADV_FREE	= 0x5,$/;"	e	enum:__anon15
MAP_ANON	runtime\defs_freebsd_arm.h	/^	MAP_ANON	= 0x1000,$/;"	e	enum:__anon15
MAP_FIXED	runtime\defs_freebsd_arm.h	/^	MAP_FIXED	= 0x10,$/;"	e	enum:__anon15
MAP_PRIVATE	runtime\defs_freebsd_arm.h	/^	MAP_PRIVATE	= 0x2,$/;"	e	enum:__anon15
Mcontext	runtime\defs_freebsd_arm.h	/^struct Mcontext {$/;"	s
Mcontext	runtime\defs_freebsd_arm.h	/^typedef struct Mcontext Mcontext;$/;"	t	typeref:struct:Mcontext
PROT_EXEC	runtime\defs_freebsd_arm.h	/^	PROT_EXEC	= 0x4,$/;"	e	enum:__anon15
PROT_NONE	runtime\defs_freebsd_arm.h	/^	PROT_NONE	= 0x0,$/;"	e	enum:__anon15
PROT_READ	runtime\defs_freebsd_arm.h	/^	PROT_READ	= 0x1,$/;"	e	enum:__anon15
PROT_WRITE	runtime\defs_freebsd_arm.h	/^	PROT_WRITE	= 0x2,$/;"	e	enum:__anon15
Rtprio	runtime\defs_freebsd_arm.h	/^struct Rtprio {$/;"	s
Rtprio	runtime\defs_freebsd_arm.h	/^typedef struct Rtprio Rtprio;$/;"	t	typeref:struct:Rtprio
SA_ONSTACK	runtime\defs_freebsd_arm.h	/^	SA_ONSTACK	= 0x1,$/;"	e	enum:__anon15
SA_RESTART	runtime\defs_freebsd_arm.h	/^	SA_RESTART	= 0x2,$/;"	e	enum:__anon15
SA_SIGINFO	runtime\defs_freebsd_arm.h	/^	SA_SIGINFO	= 0x40,$/;"	e	enum:__anon15
SEGV_ACCERR	runtime\defs_freebsd_arm.h	/^	SEGV_ACCERR	= 0x2,$/;"	e	enum:__anon15
SEGV_MAPERR	runtime\defs_freebsd_arm.h	/^	SEGV_MAPERR	= 0x1,$/;"	e	enum:__anon15
SIGABRT	runtime\defs_freebsd_arm.h	/^	SIGABRT		= 0x6,$/;"	e	enum:__anon15
SIGALRM	runtime\defs_freebsd_arm.h	/^	SIGALRM		= 0xe,$/;"	e	enum:__anon15
SIGBUS	runtime\defs_freebsd_arm.h	/^	SIGBUS		= 0xa,$/;"	e	enum:__anon15
SIGCHLD	runtime\defs_freebsd_arm.h	/^	SIGCHLD		= 0x14,$/;"	e	enum:__anon15
SIGCONT	runtime\defs_freebsd_arm.h	/^	SIGCONT		= 0x13,$/;"	e	enum:__anon15
SIGEMT	runtime\defs_freebsd_arm.h	/^	SIGEMT		= 0x7,$/;"	e	enum:__anon15
SIGFPE	runtime\defs_freebsd_arm.h	/^	SIGFPE		= 0x8,$/;"	e	enum:__anon15
SIGHUP	runtime\defs_freebsd_arm.h	/^	SIGHUP		= 0x1,$/;"	e	enum:__anon15
SIGILL	runtime\defs_freebsd_arm.h	/^	SIGILL		= 0x4,$/;"	e	enum:__anon15
SIGINFO	runtime\defs_freebsd_arm.h	/^	SIGINFO		= 0x1d,$/;"	e	enum:__anon15
SIGINT	runtime\defs_freebsd_arm.h	/^	SIGINT		= 0x2,$/;"	e	enum:__anon15
SIGIO	runtime\defs_freebsd_arm.h	/^	SIGIO		= 0x17,$/;"	e	enum:__anon15
SIGKILL	runtime\defs_freebsd_arm.h	/^	SIGKILL		= 0x9,$/;"	e	enum:__anon15
SIGPIPE	runtime\defs_freebsd_arm.h	/^	SIGPIPE		= 0xd,$/;"	e	enum:__anon15
SIGPROF	runtime\defs_freebsd_arm.h	/^	SIGPROF		= 0x1b,$/;"	e	enum:__anon15
SIGQUIT	runtime\defs_freebsd_arm.h	/^	SIGQUIT		= 0x3,$/;"	e	enum:__anon15
SIGSEGV	runtime\defs_freebsd_arm.h	/^	SIGSEGV		= 0xb,$/;"	e	enum:__anon15
SIGSTOP	runtime\defs_freebsd_arm.h	/^	SIGSTOP		= 0x11,$/;"	e	enum:__anon15
SIGSYS	runtime\defs_freebsd_arm.h	/^	SIGSYS		= 0xc,$/;"	e	enum:__anon15
SIGTERM	runtime\defs_freebsd_arm.h	/^	SIGTERM		= 0xf,$/;"	e	enum:__anon15
SIGTRAP	runtime\defs_freebsd_arm.h	/^	SIGTRAP		= 0x5,$/;"	e	enum:__anon15
SIGTSTP	runtime\defs_freebsd_arm.h	/^	SIGTSTP		= 0x12,$/;"	e	enum:__anon15
SIGTTIN	runtime\defs_freebsd_arm.h	/^	SIGTTIN		= 0x15,$/;"	e	enum:__anon15
SIGTTOU	runtime\defs_freebsd_arm.h	/^	SIGTTOU		= 0x16,$/;"	e	enum:__anon15
SIGURG	runtime\defs_freebsd_arm.h	/^	SIGURG		= 0x10,$/;"	e	enum:__anon15
SIGUSR1	runtime\defs_freebsd_arm.h	/^	SIGUSR1		= 0x1e,$/;"	e	enum:__anon15
SIGUSR2	runtime\defs_freebsd_arm.h	/^	SIGUSR2		= 0x1f,$/;"	e	enum:__anon15
SIGVTALRM	runtime\defs_freebsd_arm.h	/^	SIGVTALRM	= 0x1a,$/;"	e	enum:__anon15
SIGWINCH	runtime\defs_freebsd_arm.h	/^	SIGWINCH	= 0x1c,$/;"	e	enum:__anon15
SIGXCPU	runtime\defs_freebsd_arm.h	/^	SIGXCPU		= 0x18,$/;"	e	enum:__anon15
SIGXFSZ	runtime\defs_freebsd_arm.h	/^	SIGXFSZ		= 0x19,$/;"	e	enum:__anon15
Sigaltstack	runtime\defs_freebsd_arm.h	/^struct Sigaltstack {$/;"	s
Sigaltstack	runtime\defs_freebsd_arm.h	/^typedef struct Sigaltstack Sigaltstack;$/;"	t	typeref:struct:Sigaltstack
Siginfo	runtime\defs_freebsd_arm.h	/^struct Siginfo {$/;"	s
Siginfo	runtime\defs_freebsd_arm.h	/^typedef struct Siginfo Siginfo;$/;"	t	typeref:struct:Siginfo
Sigset	runtime\defs_freebsd_arm.h	/^struct Sigset {$/;"	s
Sigset	runtime\defs_freebsd_arm.h	/^typedef struct Sigset Sigset;$/;"	t	typeref:struct:Sigset
StackT	runtime\defs_freebsd_arm.h	/^struct StackT {$/;"	s
StackT	runtime\defs_freebsd_arm.h	/^typedef struct StackT StackT;$/;"	t	typeref:struct:StackT
ThrParam	runtime\defs_freebsd_arm.h	/^struct ThrParam {$/;"	s
ThrParam	runtime\defs_freebsd_arm.h	/^typedef struct ThrParam ThrParam;$/;"	t	typeref:struct:ThrParam
Timespec	runtime\defs_freebsd_arm.h	/^struct Timespec {$/;"	s
Timespec	runtime\defs_freebsd_arm.h	/^typedef struct Timespec Timespec;$/;"	t	typeref:struct:Timespec
Timeval	runtime\defs_freebsd_arm.h	/^struct Timeval {$/;"	s
Timeval	runtime\defs_freebsd_arm.h	/^typedef struct Timeval Timeval;$/;"	t	typeref:struct:Timeval
UMTX_OP_WAIT_UINT	runtime\defs_freebsd_arm.h	/^	UMTX_OP_WAIT_UINT	= 0xb,$/;"	e	enum:__anon15
UMTX_OP_WAKE	runtime\defs_freebsd_arm.h	/^	UMTX_OP_WAKE		= 0x3,$/;"	e	enum:__anon15
Ucontext	runtime\defs_freebsd_arm.h	/^struct Ucontext {$/;"	s
Ucontext	runtime\defs_freebsd_arm.h	/^typedef struct Ucontext Ucontext;$/;"	t	typeref:struct:Ucontext
__bits	runtime\defs_freebsd_arm.h	/^	uint32	__bits[4];$/;"	m	struct:Sigset
__fpu	runtime\defs_freebsd_arm.h	/^	byte	__fpu[140];$/;"	m	struct:Mcontext
__gregs	runtime\defs_freebsd_arm.h	/^	uint32	__gregs[17];$/;"	m	struct:Mcontext
__spare__	runtime\defs_freebsd_arm.h	/^	int32	__spare__[4];$/;"	m	struct:Ucontext
_reason	runtime\defs_freebsd_arm.h	/^	byte	_reason[32];$/;"	m	struct:Siginfo
arg	runtime\defs_freebsd_arm.h	/^	byte	*arg;$/;"	m	struct:ThrParam
child_tid	runtime\defs_freebsd_arm.h	/^	int32	*child_tid;$/;"	m	struct:ThrParam
data	runtime\defs_freebsd_arm.h	/^	int32   data;$/;"	m	struct:Kevent
fflags	runtime\defs_freebsd_arm.h	/^	uint32  fflags;$/;"	m	struct:Kevent
filter	runtime\defs_freebsd_arm.h	/^	int16   filter;$/;"	m	struct:Kevent
flags	runtime\defs_freebsd_arm.h	/^	int32	flags;$/;"	m	struct:ThrParam
flags	runtime\defs_freebsd_arm.h	/^	uint16  flags;$/;"	m	struct:Kevent
ident	runtime\defs_freebsd_arm.h	/^	uint32  ident;$/;"	m	struct:Kevent
it_interval	runtime\defs_freebsd_arm.h	/^	Timeval	it_interval;$/;"	m	struct:Itimerval
it_value	runtime\defs_freebsd_arm.h	/^	Timeval	it_value;$/;"	m	struct:Itimerval
parent_tid	runtime\defs_freebsd_arm.h	/^	int32	*parent_tid;$/;"	m	struct:ThrParam
prio	runtime\defs_freebsd_arm.h	/^	uint16	prio;$/;"	m	struct:Rtprio
rtp	runtime\defs_freebsd_arm.h	/^	Rtprio	*rtp;$/;"	m	struct:ThrParam
si_addr	runtime\defs_freebsd_arm.h	/^	byte	*si_addr;$/;"	m	struct:Siginfo
si_code	runtime\defs_freebsd_arm.h	/^	int32	si_code;$/;"	m	struct:Siginfo
si_errno	runtime\defs_freebsd_arm.h	/^	int32	si_errno;$/;"	m	struct:Siginfo
si_pid	runtime\defs_freebsd_arm.h	/^	int32	si_pid;$/;"	m	struct:Siginfo
si_signo	runtime\defs_freebsd_arm.h	/^	int32	si_signo;$/;"	m	struct:Siginfo
si_status	runtime\defs_freebsd_arm.h	/^	int32	si_status;$/;"	m	struct:Siginfo
si_uid	runtime\defs_freebsd_arm.h	/^	uint32	si_uid;$/;"	m	struct:Siginfo
si_value	runtime\defs_freebsd_arm.h	/^	byte	si_value[4];$/;"	m	struct:Siginfo
spare	runtime\defs_freebsd_arm.h	/^	void	*spare[3];$/;"	m	struct:ThrParam
ss_flags	runtime\defs_freebsd_arm.h	/^	int32	ss_flags;$/;"	m	struct:Sigaltstack
ss_flags	runtime\defs_freebsd_arm.h	/^	int32	ss_flags;$/;"	m	struct:StackT
ss_size	runtime\defs_freebsd_arm.h	/^	uint32	ss_size;$/;"	m	struct:Sigaltstack
ss_size	runtime\defs_freebsd_arm.h	/^	uint32	ss_size;$/;"	m	struct:StackT
ss_sp	runtime\defs_freebsd_arm.h	/^	uint8	*ss_sp;$/;"	m	struct:Sigaltstack
ss_sp	runtime\defs_freebsd_arm.h	/^	uint8	*ss_sp;$/;"	m	struct:StackT
stack_base	runtime\defs_freebsd_arm.h	/^	uint8	*stack_base;$/;"	m	struct:ThrParam
stack_size	runtime\defs_freebsd_arm.h	/^	uint32	stack_size;$/;"	m	struct:ThrParam
start_func	runtime\defs_freebsd_arm.h	/^	void	*start_func;$/;"	m	struct:ThrParam
tls_base	runtime\defs_freebsd_arm.h	/^	uint8	*tls_base;$/;"	m	struct:ThrParam
tls_size	runtime\defs_freebsd_arm.h	/^	uint32	tls_size;$/;"	m	struct:ThrParam
tv_nsec	runtime\defs_freebsd_arm.h	/^	int32	tv_nsec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_freebsd_arm.h	/^	int64	tv_sec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_freebsd_arm.h	/^	int64	tv_sec;$/;"	m	struct:Timeval
tv_usec	runtime\defs_freebsd_arm.h	/^	int32	tv_usec;$/;"	m	struct:Timeval
type	runtime\defs_freebsd_arm.h	/^	uint16	type;$/;"	m	struct:Rtprio
uc_flags	runtime\defs_freebsd_arm.h	/^	int32	uc_flags;$/;"	m	struct:Ucontext
uc_link	runtime\defs_freebsd_arm.h	/^	Ucontext	*uc_link;$/;"	m	struct:Ucontext
uc_mcontext	runtime\defs_freebsd_arm.h	/^	Mcontext	uc_mcontext;$/;"	m	struct:Ucontext
uc_sigmask	runtime\defs_freebsd_arm.h	/^	Sigset	uc_sigmask;$/;"	m	struct:Ucontext
uc_stack	runtime\defs_freebsd_arm.h	/^	StackT	uc_stack;$/;"	m	struct:Ucontext
udata	runtime\defs_freebsd_arm.h	/^	byte    *udata;$/;"	m	struct:Kevent
BUS_ADRALN	runtime\defs_linux_386.h	/^	BUS_ADRALN	= 0x1,$/;"	e	enum:__anon16
BUS_ADRERR	runtime\defs_linux_386.h	/^	BUS_ADRERR	= 0x2,$/;"	e	enum:__anon16
BUS_OBJERR	runtime\defs_linux_386.h	/^	BUS_OBJERR	= 0x3,$/;"	e	enum:__anon16
EAGAIN	runtime\defs_linux_386.h	/^	EAGAIN	= 0xb,$/;"	e	enum:__anon16
EINTR	runtime\defs_linux_386.h	/^	EINTR	= 0x4,$/;"	e	enum:__anon16
ENOMEM	runtime\defs_linux_386.h	/^	ENOMEM	= 0xc,$/;"	e	enum:__anon16
EPOLLERR	runtime\defs_linux_386.h	/^	EPOLLERR	= 0x8,$/;"	e	enum:__anon16
EPOLLET	runtime\defs_linux_386.h	/^	EPOLLET		= -0x80000000,$/;"	e	enum:__anon16
EPOLLHUP	runtime\defs_linux_386.h	/^	EPOLLHUP	= 0x10,$/;"	e	enum:__anon16
EPOLLIN	runtime\defs_linux_386.h	/^	EPOLLIN		= 0x1,$/;"	e	enum:__anon16
EPOLLOUT	runtime\defs_linux_386.h	/^	EPOLLOUT	= 0x4,$/;"	e	enum:__anon16
EPOLLRDHUP	runtime\defs_linux_386.h	/^	EPOLLRDHUP	= 0x2000,$/;"	e	enum:__anon16
EPOLL_CLOEXEC	runtime\defs_linux_386.h	/^	EPOLL_CLOEXEC	= 0x80000,$/;"	e	enum:__anon16
EPOLL_CTL_ADD	runtime\defs_linux_386.h	/^	EPOLL_CTL_ADD	= 0x1,$/;"	e	enum:__anon16
EPOLL_CTL_DEL	runtime\defs_linux_386.h	/^	EPOLL_CTL_DEL	= 0x2,$/;"	e	enum:__anon16
EPOLL_CTL_MOD	runtime\defs_linux_386.h	/^	EPOLL_CTL_MOD	= 0x3,$/;"	e	enum:__anon16
EpollEvent	runtime\defs_linux_386.h	/^struct EpollEvent {$/;"	s
EpollEvent	runtime\defs_linux_386.h	/^typedef struct EpollEvent EpollEvent;$/;"	t	typeref:struct:EpollEvent
FPE_FLTDIV	runtime\defs_linux_386.h	/^	FPE_FLTDIV	= 0x3,$/;"	e	enum:__anon16
FPE_FLTINV	runtime\defs_linux_386.h	/^	FPE_FLTINV	= 0x7,$/;"	e	enum:__anon16
FPE_FLTOVF	runtime\defs_linux_386.h	/^	FPE_FLTOVF	= 0x4,$/;"	e	enum:__anon16
FPE_FLTRES	runtime\defs_linux_386.h	/^	FPE_FLTRES	= 0x6,$/;"	e	enum:__anon16
FPE_FLTSUB	runtime\defs_linux_386.h	/^	FPE_FLTSUB	= 0x8,$/;"	e	enum:__anon16
FPE_FLTUND	runtime\defs_linux_386.h	/^	FPE_FLTUND	= 0x5,$/;"	e	enum:__anon16
FPE_INTDIV	runtime\defs_linux_386.h	/^	FPE_INTDIV	= 0x1,$/;"	e	enum:__anon16
FPE_INTOVF	runtime\defs_linux_386.h	/^	FPE_INTOVF	= 0x2,$/;"	e	enum:__anon16
Fpreg	runtime\defs_linux_386.h	/^struct Fpreg {$/;"	s
Fpreg	runtime\defs_linux_386.h	/^typedef struct Fpreg Fpreg;$/;"	t	typeref:struct:Fpreg
Fpstate	runtime\defs_linux_386.h	/^struct Fpstate {$/;"	s
Fpstate	runtime\defs_linux_386.h	/^typedef struct Fpstate Fpstate;$/;"	t	typeref:struct:Fpstate
Fpxreg	runtime\defs_linux_386.h	/^struct Fpxreg {$/;"	s
Fpxreg	runtime\defs_linux_386.h	/^typedef struct Fpxreg Fpxreg;$/;"	t	typeref:struct:Fpxreg
ITIMER_PROF	runtime\defs_linux_386.h	/^	ITIMER_PROF	= 0x2,$/;"	e	enum:__anon16
ITIMER_REAL	runtime\defs_linux_386.h	/^	ITIMER_REAL	= 0x0,$/;"	e	enum:__anon16
ITIMER_VIRTUAL	runtime\defs_linux_386.h	/^	ITIMER_VIRTUAL	= 0x1,$/;"	e	enum:__anon16
Itimerval	runtime\defs_linux_386.h	/^struct Itimerval {$/;"	s
Itimerval	runtime\defs_linux_386.h	/^typedef struct Itimerval Itimerval;$/;"	t	typeref:struct:Itimerval
MADV_DONTNEED	runtime\defs_linux_386.h	/^	MADV_DONTNEED	= 0x4,$/;"	e	enum:__anon16
MAP_ANON	runtime\defs_linux_386.h	/^	MAP_ANON	= 0x20,$/;"	e	enum:__anon16
MAP_FIXED	runtime\defs_linux_386.h	/^	MAP_FIXED	= 0x10,$/;"	e	enum:__anon16
MAP_PRIVATE	runtime\defs_linux_386.h	/^	MAP_PRIVATE	= 0x2,$/;"	e	enum:__anon16
O_CLOEXEC	runtime\defs_linux_386.h	/^	O_CLOEXEC	= 0x80000,$/;"	e	enum:__anon16
O_RDONLY	runtime\defs_linux_386.h	/^	O_RDONLY	= 0x0,$/;"	e	enum:__anon16
PROT_EXEC	runtime\defs_linux_386.h	/^	PROT_EXEC	= 0x4,$/;"	e	enum:__anon16
PROT_NONE	runtime\defs_linux_386.h	/^	PROT_NONE	= 0x0,$/;"	e	enum:__anon16
PROT_READ	runtime\defs_linux_386.h	/^	PROT_READ	= 0x1,$/;"	e	enum:__anon16
PROT_WRITE	runtime\defs_linux_386.h	/^	PROT_WRITE	= 0x2,$/;"	e	enum:__anon16
SA_ONSTACK	runtime\defs_linux_386.h	/^	SA_ONSTACK	= 0x8000000,$/;"	e	enum:__anon16
SA_RESTART	runtime\defs_linux_386.h	/^	SA_RESTART	= 0x10000000,$/;"	e	enum:__anon16
SA_RESTORER	runtime\defs_linux_386.h	/^	SA_RESTORER	= 0x4000000,$/;"	e	enum:__anon16
SA_SIGINFO	runtime\defs_linux_386.h	/^	SA_SIGINFO	= 0x4,$/;"	e	enum:__anon16
SEGV_ACCERR	runtime\defs_linux_386.h	/^	SEGV_ACCERR	= 0x2,$/;"	e	enum:__anon16
SEGV_MAPERR	runtime\defs_linux_386.h	/^	SEGV_MAPERR	= 0x1,$/;"	e	enum:__anon16
SIGABRT	runtime\defs_linux_386.h	/^	SIGABRT		= 0x6,$/;"	e	enum:__anon16
SIGALRM	runtime\defs_linux_386.h	/^	SIGALRM		= 0xe,$/;"	e	enum:__anon16
SIGBUS	runtime\defs_linux_386.h	/^	SIGBUS		= 0x7,$/;"	e	enum:__anon16
SIGCHLD	runtime\defs_linux_386.h	/^	SIGCHLD		= 0x11,$/;"	e	enum:__anon16
SIGCONT	runtime\defs_linux_386.h	/^	SIGCONT		= 0x12,$/;"	e	enum:__anon16
SIGFPE	runtime\defs_linux_386.h	/^	SIGFPE		= 0x8,$/;"	e	enum:__anon16
SIGHUP	runtime\defs_linux_386.h	/^	SIGHUP		= 0x1,$/;"	e	enum:__anon16
SIGILL	runtime\defs_linux_386.h	/^	SIGILL		= 0x4,$/;"	e	enum:__anon16
SIGINT	runtime\defs_linux_386.h	/^	SIGINT		= 0x2,$/;"	e	enum:__anon16
SIGIO	runtime\defs_linux_386.h	/^	SIGIO		= 0x1d,$/;"	e	enum:__anon16
SIGKILL	runtime\defs_linux_386.h	/^	SIGKILL		= 0x9,$/;"	e	enum:__anon16
SIGPIPE	runtime\defs_linux_386.h	/^	SIGPIPE		= 0xd,$/;"	e	enum:__anon16
SIGPROF	runtime\defs_linux_386.h	/^	SIGPROF		= 0x1b,$/;"	e	enum:__anon16
SIGPWR	runtime\defs_linux_386.h	/^	SIGPWR		= 0x1e,$/;"	e	enum:__anon16
SIGQUIT	runtime\defs_linux_386.h	/^	SIGQUIT		= 0x3,$/;"	e	enum:__anon16
SIGSEGV	runtime\defs_linux_386.h	/^	SIGSEGV		= 0xb,$/;"	e	enum:__anon16
SIGSTKFLT	runtime\defs_linux_386.h	/^	SIGSTKFLT	= 0x10,$/;"	e	enum:__anon16
SIGSTOP	runtime\defs_linux_386.h	/^	SIGSTOP		= 0x13,$/;"	e	enum:__anon16
SIGSYS	runtime\defs_linux_386.h	/^	SIGSYS		= 0x1f,$/;"	e	enum:__anon16
SIGTRAP	runtime\defs_linux_386.h	/^	SIGTRAP		= 0x5,$/;"	e	enum:__anon16
SIGTSTP	runtime\defs_linux_386.h	/^	SIGTSTP		= 0x14,$/;"	e	enum:__anon16
SIGTTIN	runtime\defs_linux_386.h	/^	SIGTTIN		= 0x15,$/;"	e	enum:__anon16
SIGTTOU	runtime\defs_linux_386.h	/^	SIGTTOU		= 0x16,$/;"	e	enum:__anon16
SIGURG	runtime\defs_linux_386.h	/^	SIGURG		= 0x17,$/;"	e	enum:__anon16
SIGUSR1	runtime\defs_linux_386.h	/^	SIGUSR1		= 0xa,$/;"	e	enum:__anon16
SIGUSR2	runtime\defs_linux_386.h	/^	SIGUSR2		= 0xc,$/;"	e	enum:__anon16
SIGVTALRM	runtime\defs_linux_386.h	/^	SIGVTALRM	= 0x1a,$/;"	e	enum:__anon16
SIGWINCH	runtime\defs_linux_386.h	/^	SIGWINCH	= 0x1c,$/;"	e	enum:__anon16
SIGXCPU	runtime\defs_linux_386.h	/^	SIGXCPU		= 0x18,$/;"	e	enum:__anon16
SIGXFSZ	runtime\defs_linux_386.h	/^	SIGXFSZ		= 0x19,$/;"	e	enum:__anon16
Sigaction	runtime\defs_linux_386.h	/^struct Sigaction {$/;"	s
Sigaction	runtime\defs_linux_386.h	/^typedef struct Sigaction Sigaction;$/;"	t	typeref:struct:Sigaction
Sigaltstack	runtime\defs_linux_386.h	/^struct Sigaltstack {$/;"	s
Sigaltstack	runtime\defs_linux_386.h	/^typedef struct Sigaltstack Sigaltstack;$/;"	t	typeref:struct:Sigaltstack
Sigcontext	runtime\defs_linux_386.h	/^struct Sigcontext {$/;"	s
Sigcontext	runtime\defs_linux_386.h	/^typedef struct Sigcontext Sigcontext;$/;"	t	typeref:struct:Sigcontext
Siginfo	runtime\defs_linux_386.h	/^struct Siginfo {$/;"	s
Siginfo	runtime\defs_linux_386.h	/^typedef struct Siginfo Siginfo;$/;"	t	typeref:struct:Siginfo
Timespec	runtime\defs_linux_386.h	/^struct Timespec {$/;"	s
Timespec	runtime\defs_linux_386.h	/^typedef struct Timespec Timespec;$/;"	t	typeref:struct:Timespec
Timeval	runtime\defs_linux_386.h	/^struct Timeval {$/;"	s
Timeval	runtime\defs_linux_386.h	/^typedef struct Timeval Timeval;$/;"	t	typeref:struct:Timeval
Ucontext	runtime\defs_linux_386.h	/^struct Ucontext {$/;"	s
Ucontext	runtime\defs_linux_386.h	/^typedef struct Ucontext Ucontext;$/;"	t	typeref:struct:Ucontext
Xmmreg	runtime\defs_linux_386.h	/^struct Xmmreg {$/;"	s
Xmmreg	runtime\defs_linux_386.h	/^typedef struct Xmmreg Xmmreg;$/;"	t	typeref:struct:Xmmreg
__csh	runtime\defs_linux_386.h	/^	uint16	__csh;$/;"	m	struct:Sigcontext
__dsh	runtime\defs_linux_386.h	/^	uint16	__dsh;$/;"	m	struct:Sigcontext
__esh	runtime\defs_linux_386.h	/^	uint16	__esh;$/;"	m	struct:Sigcontext
__fsh	runtime\defs_linux_386.h	/^	uint16	__fsh;$/;"	m	struct:Sigcontext
__gsh	runtime\defs_linux_386.h	/^	uint16	__gsh;$/;"	m	struct:Sigcontext
__ssh	runtime\defs_linux_386.h	/^	uint16	__ssh;$/;"	m	struct:Sigcontext
_fxsr_env	runtime\defs_linux_386.h	/^	uint32	_fxsr_env[6];$/;"	m	struct:Fpstate
_fxsr_st	runtime\defs_linux_386.h	/^	Fpxreg	_fxsr_st[8];$/;"	m	struct:Fpstate
_sifields	runtime\defs_linux_386.h	/^	byte	_sifields[116];$/;"	m	struct:Siginfo
_st	runtime\defs_linux_386.h	/^	Fpreg	_st[8];$/;"	m	struct:Fpstate
_xmm	runtime\defs_linux_386.h	/^	Xmmreg	_xmm[8];$/;"	m	struct:Fpstate
anon0	runtime\defs_linux_386.h	/^	byte	anon0[48];$/;"	m	struct:Fpstate
cr2	runtime\defs_linux_386.h	/^	uint32	cr2;$/;"	m	struct:Sigcontext
cs	runtime\defs_linux_386.h	/^	uint16	cs;$/;"	m	struct:Sigcontext
cssel	runtime\defs_linux_386.h	/^	uint32	cssel;$/;"	m	struct:Fpstate
cw	runtime\defs_linux_386.h	/^	uint32	cw;$/;"	m	struct:Fpstate
data	runtime\defs_linux_386.h	/^	uint64	data;$/;"	m	struct:EpollEvent
dataoff	runtime\defs_linux_386.h	/^	uint32	dataoff;$/;"	m	struct:Fpstate
datasel	runtime\defs_linux_386.h	/^	uint32	datasel;$/;"	m	struct:Fpstate
ds	runtime\defs_linux_386.h	/^	uint16	ds;$/;"	m	struct:Sigcontext
eax	runtime\defs_linux_386.h	/^	uint32	eax;$/;"	m	struct:Sigcontext
ebp	runtime\defs_linux_386.h	/^	uint32	ebp;$/;"	m	struct:Sigcontext
ebx	runtime\defs_linux_386.h	/^	uint32	ebx;$/;"	m	struct:Sigcontext
ecx	runtime\defs_linux_386.h	/^	uint32	ecx;$/;"	m	struct:Sigcontext
edi	runtime\defs_linux_386.h	/^	uint32	edi;$/;"	m	struct:Sigcontext
edx	runtime\defs_linux_386.h	/^	uint32	edx;$/;"	m	struct:Sigcontext
eflags	runtime\defs_linux_386.h	/^	uint32	eflags;$/;"	m	struct:Sigcontext
eip	runtime\defs_linux_386.h	/^	uint32	eip;$/;"	m	struct:Sigcontext
element	runtime\defs_linux_386.h	/^	uint32	element[4];$/;"	m	struct:Xmmreg
err	runtime\defs_linux_386.h	/^	uint32	err;$/;"	m	struct:Sigcontext
es	runtime\defs_linux_386.h	/^	uint16	es;$/;"	m	struct:Sigcontext
esi	runtime\defs_linux_386.h	/^	uint32	esi;$/;"	m	struct:Sigcontext
esp	runtime\defs_linux_386.h	/^	uint32	esp;$/;"	m	struct:Sigcontext
esp_at_signal	runtime\defs_linux_386.h	/^	uint32	esp_at_signal;$/;"	m	struct:Sigcontext
events	runtime\defs_linux_386.h	/^	uint32	events;$/;"	m	struct:EpollEvent
exponent	runtime\defs_linux_386.h	/^	uint16	exponent;$/;"	m	struct:Fpreg
exponent	runtime\defs_linux_386.h	/^	uint16	exponent;$/;"	m	struct:Fpxreg
fpstate	runtime\defs_linux_386.h	/^	Fpstate	*fpstate;$/;"	m	struct:Sigcontext
fs	runtime\defs_linux_386.h	/^	uint16	fs;$/;"	m	struct:Sigcontext
gs	runtime\defs_linux_386.h	/^	uint16	gs;$/;"	m	struct:Sigcontext
ipoff	runtime\defs_linux_386.h	/^	uint32	ipoff;$/;"	m	struct:Fpstate
it_interval	runtime\defs_linux_386.h	/^	Timeval	it_interval;$/;"	m	struct:Itimerval
it_value	runtime\defs_linux_386.h	/^	Timeval	it_value;$/;"	m	struct:Itimerval
k_sa_handler	runtime\defs_linux_386.h	/^	void	*k_sa_handler;$/;"	m	struct:Sigaction
magic	runtime\defs_linux_386.h	/^	uint16	magic;$/;"	m	struct:Fpstate
mxcsr	runtime\defs_linux_386.h	/^	uint32	mxcsr;$/;"	m	struct:Fpstate
oldmask	runtime\defs_linux_386.h	/^	uint32	oldmask;$/;"	m	struct:Sigcontext
padding	runtime\defs_linux_386.h	/^	uint16	padding[3];$/;"	m	struct:Fpxreg
padding1	runtime\defs_linux_386.h	/^	uint32	padding1[44];$/;"	m	struct:Fpstate
reserved	runtime\defs_linux_386.h	/^	uint32	reserved;$/;"	m	struct:Fpstate
sa_flags	runtime\defs_linux_386.h	/^	uint32	sa_flags;$/;"	m	struct:Sigaction
sa_mask	runtime\defs_linux_386.h	/^	uint64	sa_mask;$/;"	m	struct:Sigaction
sa_restorer	runtime\defs_linux_386.h	/^	void	*sa_restorer;$/;"	m	struct:Sigaction
si_code	runtime\defs_linux_386.h	/^	int32	si_code;$/;"	m	struct:Siginfo
si_errno	runtime\defs_linux_386.h	/^	int32	si_errno;$/;"	m	struct:Siginfo
si_signo	runtime\defs_linux_386.h	/^	int32	si_signo;$/;"	m	struct:Siginfo
significand	runtime\defs_linux_386.h	/^	uint16	significand[4];$/;"	m	struct:Fpreg
significand	runtime\defs_linux_386.h	/^	uint16	significand[4];$/;"	m	struct:Fpxreg
ss	runtime\defs_linux_386.h	/^	uint16	ss;$/;"	m	struct:Sigcontext
ss_flags	runtime\defs_linux_386.h	/^	int32	ss_flags;$/;"	m	struct:Sigaltstack
ss_size	runtime\defs_linux_386.h	/^	uint32	ss_size;$/;"	m	struct:Sigaltstack
ss_sp	runtime\defs_linux_386.h	/^	byte	*ss_sp;$/;"	m	struct:Sigaltstack
status	runtime\defs_linux_386.h	/^	uint16	status;$/;"	m	struct:Fpstate
sw	runtime\defs_linux_386.h	/^	uint32	sw;$/;"	m	struct:Fpstate
tag	runtime\defs_linux_386.h	/^	uint32	tag;$/;"	m	struct:Fpstate
trapno	runtime\defs_linux_386.h	/^	uint32	trapno;$/;"	m	struct:Sigcontext
tv_nsec	runtime\defs_linux_386.h	/^	int32	tv_nsec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_linux_386.h	/^	int32	tv_sec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_linux_386.h	/^	int32	tv_sec;$/;"	m	struct:Timeval
tv_usec	runtime\defs_linux_386.h	/^	int32	tv_usec;$/;"	m	struct:Timeval
uc_flags	runtime\defs_linux_386.h	/^	uint32	uc_flags;$/;"	m	struct:Ucontext
uc_link	runtime\defs_linux_386.h	/^	Ucontext	*uc_link;$/;"	m	struct:Ucontext
uc_mcontext	runtime\defs_linux_386.h	/^	Sigcontext	uc_mcontext;$/;"	m	struct:Ucontext
uc_sigmask	runtime\defs_linux_386.h	/^	uint32	uc_sigmask;$/;"	m	struct:Ucontext
uc_stack	runtime\defs_linux_386.h	/^	Sigaltstack	uc_stack;$/;"	m	struct:Ucontext
BUS_ADRALN	runtime\defs_linux_amd64.h	/^	BUS_ADRALN	= 0x1,$/;"	e	enum:__anon17
BUS_ADRERR	runtime\defs_linux_amd64.h	/^	BUS_ADRERR	= 0x2,$/;"	e	enum:__anon17
BUS_OBJERR	runtime\defs_linux_amd64.h	/^	BUS_OBJERR	= 0x3,$/;"	e	enum:__anon17
EAGAIN	runtime\defs_linux_amd64.h	/^	EAGAIN	= 0xb,$/;"	e	enum:__anon17
EINTR	runtime\defs_linux_amd64.h	/^	EINTR	= 0x4,$/;"	e	enum:__anon17
ENOMEM	runtime\defs_linux_amd64.h	/^	ENOMEM	= 0xc,$/;"	e	enum:__anon17
EPOLLERR	runtime\defs_linux_amd64.h	/^	EPOLLERR	= 0x8,$/;"	e	enum:__anon17
EPOLLET	runtime\defs_linux_amd64.h	/^	EPOLLET		= -0x80000000,$/;"	e	enum:__anon17
EPOLLHUP	runtime\defs_linux_amd64.h	/^	EPOLLHUP	= 0x10,$/;"	e	enum:__anon17
EPOLLIN	runtime\defs_linux_amd64.h	/^	EPOLLIN		= 0x1,$/;"	e	enum:__anon17
EPOLLOUT	runtime\defs_linux_amd64.h	/^	EPOLLOUT	= 0x4,$/;"	e	enum:__anon17
EPOLLRDHUP	runtime\defs_linux_amd64.h	/^	EPOLLRDHUP	= 0x2000,$/;"	e	enum:__anon17
EPOLL_CLOEXEC	runtime\defs_linux_amd64.h	/^	EPOLL_CLOEXEC	= 0x80000,$/;"	e	enum:__anon17
EPOLL_CTL_ADD	runtime\defs_linux_amd64.h	/^	EPOLL_CTL_ADD	= 0x1,$/;"	e	enum:__anon17
EPOLL_CTL_DEL	runtime\defs_linux_amd64.h	/^	EPOLL_CTL_DEL	= 0x2,$/;"	e	enum:__anon17
EPOLL_CTL_MOD	runtime\defs_linux_amd64.h	/^	EPOLL_CTL_MOD	= 0x3,$/;"	e	enum:__anon17
EpollEvent	runtime\defs_linux_amd64.h	/^struct EpollEvent {$/;"	s
EpollEvent	runtime\defs_linux_amd64.h	/^typedef struct EpollEvent EpollEvent;$/;"	t	typeref:struct:EpollEvent
FPE_FLTDIV	runtime\defs_linux_amd64.h	/^	FPE_FLTDIV	= 0x3,$/;"	e	enum:__anon17
FPE_FLTINV	runtime\defs_linux_amd64.h	/^	FPE_FLTINV	= 0x7,$/;"	e	enum:__anon17
FPE_FLTOVF	runtime\defs_linux_amd64.h	/^	FPE_FLTOVF	= 0x4,$/;"	e	enum:__anon17
FPE_FLTRES	runtime\defs_linux_amd64.h	/^	FPE_FLTRES	= 0x6,$/;"	e	enum:__anon17
FPE_FLTSUB	runtime\defs_linux_amd64.h	/^	FPE_FLTSUB	= 0x8,$/;"	e	enum:__anon17
FPE_FLTUND	runtime\defs_linux_amd64.h	/^	FPE_FLTUND	= 0x5,$/;"	e	enum:__anon17
FPE_INTDIV	runtime\defs_linux_amd64.h	/^	FPE_INTDIV	= 0x1,$/;"	e	enum:__anon17
FPE_INTOVF	runtime\defs_linux_amd64.h	/^	FPE_INTOVF	= 0x2,$/;"	e	enum:__anon17
Fpreg1	runtime\defs_linux_amd64.h	/^struct Fpreg1 {$/;"	s
Fpreg1	runtime\defs_linux_amd64.h	/^typedef struct Fpreg1 Fpreg1;$/;"	t	typeref:struct:Fpreg1
Fpstate	runtime\defs_linux_amd64.h	/^struct Fpstate {$/;"	s
Fpstate	runtime\defs_linux_amd64.h	/^typedef struct Fpstate Fpstate;$/;"	t	typeref:struct:Fpstate
Fpstate1	runtime\defs_linux_amd64.h	/^struct Fpstate1 {$/;"	s
Fpstate1	runtime\defs_linux_amd64.h	/^typedef struct Fpstate1 Fpstate1;$/;"	t	typeref:struct:Fpstate1
Fpxreg	runtime\defs_linux_amd64.h	/^struct Fpxreg {$/;"	s
Fpxreg	runtime\defs_linux_amd64.h	/^typedef struct Fpxreg Fpxreg;$/;"	t	typeref:struct:Fpxreg
Fpxreg1	runtime\defs_linux_amd64.h	/^struct Fpxreg1 {$/;"	s
Fpxreg1	runtime\defs_linux_amd64.h	/^typedef struct Fpxreg1 Fpxreg1;$/;"	t	typeref:struct:Fpxreg1
ITIMER_PROF	runtime\defs_linux_amd64.h	/^	ITIMER_PROF	= 0x2,$/;"	e	enum:__anon17
ITIMER_REAL	runtime\defs_linux_amd64.h	/^	ITIMER_REAL	= 0x0,$/;"	e	enum:__anon17
ITIMER_VIRTUAL	runtime\defs_linux_amd64.h	/^	ITIMER_VIRTUAL	= 0x1,$/;"	e	enum:__anon17
Itimerval	runtime\defs_linux_amd64.h	/^struct Itimerval {$/;"	s
Itimerval	runtime\defs_linux_amd64.h	/^typedef struct Itimerval Itimerval;$/;"	t	typeref:struct:Itimerval
MADV_DONTNEED	runtime\defs_linux_amd64.h	/^	MADV_DONTNEED	= 0x4,$/;"	e	enum:__anon17
MAP_ANON	runtime\defs_linux_amd64.h	/^	MAP_ANON	= 0x20,$/;"	e	enum:__anon17
MAP_FIXED	runtime\defs_linux_amd64.h	/^	MAP_FIXED	= 0x10,$/;"	e	enum:__anon17
MAP_PRIVATE	runtime\defs_linux_amd64.h	/^	MAP_PRIVATE	= 0x2,$/;"	e	enum:__anon17
Mcontext	runtime\defs_linux_amd64.h	/^struct Mcontext {$/;"	s
Mcontext	runtime\defs_linux_amd64.h	/^typedef struct Mcontext Mcontext;$/;"	t	typeref:struct:Mcontext
O_CLOEXEC	runtime\defs_linux_amd64.h	/^	O_CLOEXEC	= 0x80000,$/;"	e	enum:__anon18
O_RDONLY	runtime\defs_linux_amd64.h	/^	O_RDONLY	= 0x0,$/;"	e	enum:__anon18
PROT_EXEC	runtime\defs_linux_amd64.h	/^	PROT_EXEC	= 0x4,$/;"	e	enum:__anon17
PROT_NONE	runtime\defs_linux_amd64.h	/^	PROT_NONE	= 0x0,$/;"	e	enum:__anon17
PROT_READ	runtime\defs_linux_amd64.h	/^	PROT_READ	= 0x1,$/;"	e	enum:__anon17
PROT_WRITE	runtime\defs_linux_amd64.h	/^	PROT_WRITE	= 0x2,$/;"	e	enum:__anon17
Pad_cgo_0	runtime\defs_linux_amd64.h	/^	byte	Pad_cgo_0[4];$/;"	m	struct:Sigaltstack
Pad_cgo_0	runtime\defs_linux_amd64.h	/^	byte	Pad_cgo_0[4];$/;"	m	struct:Siginfo
SA_ONSTACK	runtime\defs_linux_amd64.h	/^	SA_ONSTACK	= 0x8000000,$/;"	e	enum:__anon17
SA_RESTART	runtime\defs_linux_amd64.h	/^	SA_RESTART	= 0x10000000,$/;"	e	enum:__anon17
SA_RESTORER	runtime\defs_linux_amd64.h	/^	SA_RESTORER	= 0x4000000,$/;"	e	enum:__anon17
SA_SIGINFO	runtime\defs_linux_amd64.h	/^	SA_SIGINFO	= 0x4,$/;"	e	enum:__anon17
SEGV_ACCERR	runtime\defs_linux_amd64.h	/^	SEGV_ACCERR	= 0x2,$/;"	e	enum:__anon17
SEGV_MAPERR	runtime\defs_linux_amd64.h	/^	SEGV_MAPERR	= 0x1,$/;"	e	enum:__anon17
SIGABRT	runtime\defs_linux_amd64.h	/^	SIGABRT		= 0x6,$/;"	e	enum:__anon17
SIGALRM	runtime\defs_linux_amd64.h	/^	SIGALRM		= 0xe,$/;"	e	enum:__anon17
SIGBUS	runtime\defs_linux_amd64.h	/^	SIGBUS		= 0x7,$/;"	e	enum:__anon17
SIGCHLD	runtime\defs_linux_amd64.h	/^	SIGCHLD		= 0x11,$/;"	e	enum:__anon17
SIGCONT	runtime\defs_linux_amd64.h	/^	SIGCONT		= 0x12,$/;"	e	enum:__anon17
SIGFPE	runtime\defs_linux_amd64.h	/^	SIGFPE		= 0x8,$/;"	e	enum:__anon17
SIGHUP	runtime\defs_linux_amd64.h	/^	SIGHUP		= 0x1,$/;"	e	enum:__anon17
SIGILL	runtime\defs_linux_amd64.h	/^	SIGILL		= 0x4,$/;"	e	enum:__anon17
SIGINT	runtime\defs_linux_amd64.h	/^	SIGINT		= 0x2,$/;"	e	enum:__anon17
SIGIO	runtime\defs_linux_amd64.h	/^	SIGIO		= 0x1d,$/;"	e	enum:__anon17
SIGKILL	runtime\defs_linux_amd64.h	/^	SIGKILL		= 0x9,$/;"	e	enum:__anon17
SIGPIPE	runtime\defs_linux_amd64.h	/^	SIGPIPE		= 0xd,$/;"	e	enum:__anon17
SIGPROF	runtime\defs_linux_amd64.h	/^	SIGPROF		= 0x1b,$/;"	e	enum:__anon17
SIGPWR	runtime\defs_linux_amd64.h	/^	SIGPWR		= 0x1e,$/;"	e	enum:__anon17
SIGQUIT	runtime\defs_linux_amd64.h	/^	SIGQUIT		= 0x3,$/;"	e	enum:__anon17
SIGSEGV	runtime\defs_linux_amd64.h	/^	SIGSEGV		= 0xb,$/;"	e	enum:__anon17
SIGSTKFLT	runtime\defs_linux_amd64.h	/^	SIGSTKFLT	= 0x10,$/;"	e	enum:__anon17
SIGSTOP	runtime\defs_linux_amd64.h	/^	SIGSTOP		= 0x13,$/;"	e	enum:__anon17
SIGSYS	runtime\defs_linux_amd64.h	/^	SIGSYS		= 0x1f,$/;"	e	enum:__anon17
SIGTRAP	runtime\defs_linux_amd64.h	/^	SIGTRAP		= 0x5,$/;"	e	enum:__anon17
SIGTSTP	runtime\defs_linux_amd64.h	/^	SIGTSTP		= 0x14,$/;"	e	enum:__anon17
SIGTTIN	runtime\defs_linux_amd64.h	/^	SIGTTIN		= 0x15,$/;"	e	enum:__anon17
SIGTTOU	runtime\defs_linux_amd64.h	/^	SIGTTOU		= 0x16,$/;"	e	enum:__anon17
SIGURG	runtime\defs_linux_amd64.h	/^	SIGURG		= 0x17,$/;"	e	enum:__anon17
SIGUSR1	runtime\defs_linux_amd64.h	/^	SIGUSR1		= 0xa,$/;"	e	enum:__anon17
SIGUSR2	runtime\defs_linux_amd64.h	/^	SIGUSR2		= 0xc,$/;"	e	enum:__anon17
SIGVTALRM	runtime\defs_linux_amd64.h	/^	SIGVTALRM	= 0x1a,$/;"	e	enum:__anon17
SIGWINCH	runtime\defs_linux_amd64.h	/^	SIGWINCH	= 0x1c,$/;"	e	enum:__anon17
SIGXCPU	runtime\defs_linux_amd64.h	/^	SIGXCPU		= 0x18,$/;"	e	enum:__anon17
SIGXFSZ	runtime\defs_linux_amd64.h	/^	SIGXFSZ		= 0x19,$/;"	e	enum:__anon17
Sigaction	runtime\defs_linux_amd64.h	/^struct Sigaction {$/;"	s
Sigaction	runtime\defs_linux_amd64.h	/^typedef struct Sigaction Sigaction;$/;"	t	typeref:struct:Sigaction
Sigaltstack	runtime\defs_linux_amd64.h	/^struct Sigaltstack {$/;"	s
Sigaltstack	runtime\defs_linux_amd64.h	/^typedef struct Sigaltstack Sigaltstack;$/;"	t	typeref:struct:Sigaltstack
Sigcontext	runtime\defs_linux_amd64.h	/^struct Sigcontext {$/;"	s
Sigcontext	runtime\defs_linux_amd64.h	/^typedef struct Sigcontext Sigcontext;$/;"	t	typeref:struct:Sigcontext
Siginfo	runtime\defs_linux_amd64.h	/^struct Siginfo {$/;"	s
Siginfo	runtime\defs_linux_amd64.h	/^typedef struct Siginfo Siginfo;$/;"	t	typeref:struct:Siginfo
Timespec	runtime\defs_linux_amd64.h	/^struct Timespec {$/;"	s
Timespec	runtime\defs_linux_amd64.h	/^typedef struct Timespec Timespec;$/;"	t	typeref:struct:Timespec
Timeval	runtime\defs_linux_amd64.h	/^struct Timeval {$/;"	s
Timeval	runtime\defs_linux_amd64.h	/^typedef struct Timeval Timeval;$/;"	t	typeref:struct:Timeval
Ucontext	runtime\defs_linux_amd64.h	/^struct Ucontext {$/;"	s
Ucontext	runtime\defs_linux_amd64.h	/^typedef struct Ucontext Ucontext;$/;"	t	typeref:struct:Ucontext
Usigset	runtime\defs_linux_amd64.h	/^struct Usigset {$/;"	s
Usigset	runtime\defs_linux_amd64.h	/^typedef struct Usigset Usigset;$/;"	t	typeref:struct:Usigset
Xmmreg	runtime\defs_linux_amd64.h	/^struct Xmmreg {$/;"	s
Xmmreg	runtime\defs_linux_amd64.h	/^typedef struct Xmmreg Xmmreg;$/;"	t	typeref:struct:Xmmreg
Xmmreg1	runtime\defs_linux_amd64.h	/^struct Xmmreg1 {$/;"	s
Xmmreg1	runtime\defs_linux_amd64.h	/^typedef struct Xmmreg1 Xmmreg1;$/;"	t	typeref:struct:Xmmreg1
__fpregs_mem	runtime\defs_linux_amd64.h	/^	Fpstate	__fpregs_mem;$/;"	m	struct:Ucontext
__pad0	runtime\defs_linux_amd64.h	/^	uint16	__pad0;$/;"	m	struct:Sigcontext
__reserved1	runtime\defs_linux_amd64.h	/^	uint64	__reserved1[8];$/;"	m	struct:Mcontext
__reserved1	runtime\defs_linux_amd64.h	/^	uint64	__reserved1[8];$/;"	m	struct:Sigcontext
__val	runtime\defs_linux_amd64.h	/^	uint64	__val[16];$/;"	m	struct:Usigset
_sifields	runtime\defs_linux_amd64.h	/^	byte	_sifields[112];$/;"	m	struct:Siginfo
_st	runtime\defs_linux_amd64.h	/^	Fpxreg	_st[8];$/;"	m	struct:Fpstate
_st	runtime\defs_linux_amd64.h	/^	Fpxreg1	_st[8];$/;"	m	struct:Fpstate1
_xmm	runtime\defs_linux_amd64.h	/^	Xmmreg	_xmm[16];$/;"	m	struct:Fpstate
_xmm	runtime\defs_linux_amd64.h	/^	Xmmreg1	_xmm[16];$/;"	m	struct:Fpstate1
cr2	runtime\defs_linux_amd64.h	/^	uint64	cr2;$/;"	m	struct:Sigcontext
cs	runtime\defs_linux_amd64.h	/^	uint16	cs;$/;"	m	struct:Sigcontext
cwd	runtime\defs_linux_amd64.h	/^	uint16	cwd;$/;"	m	struct:Fpstate
cwd	runtime\defs_linux_amd64.h	/^	uint16	cwd;$/;"	m	struct:Fpstate1
data	runtime\defs_linux_amd64.h	/^	uint64	data;$/;"	m	struct:EpollEvent
eflags	runtime\defs_linux_amd64.h	/^	uint64	eflags;$/;"	m	struct:Sigcontext
element	runtime\defs_linux_amd64.h	/^	uint32	element[4];$/;"	m	struct:Xmmreg
element	runtime\defs_linux_amd64.h	/^	uint32	element[4];$/;"	m	struct:Xmmreg1
err	runtime\defs_linux_amd64.h	/^	uint64	err;$/;"	m	struct:Sigcontext
events	runtime\defs_linux_amd64.h	/^	uint32	events;$/;"	m	struct:EpollEvent
exponent	runtime\defs_linux_amd64.h	/^	uint16	exponent;$/;"	m	struct:Fpreg1
exponent	runtime\defs_linux_amd64.h	/^	uint16	exponent;$/;"	m	struct:Fpxreg
exponent	runtime\defs_linux_amd64.h	/^	uint16	exponent;$/;"	m	struct:Fpxreg1
fop	runtime\defs_linux_amd64.h	/^	uint16	fop;$/;"	m	struct:Fpstate
fop	runtime\defs_linux_amd64.h	/^	uint16	fop;$/;"	m	struct:Fpstate1
fpregs	runtime\defs_linux_amd64.h	/^	Fpstate	*fpregs;$/;"	m	struct:Mcontext
fpstate	runtime\defs_linux_amd64.h	/^	Fpstate1	*fpstate;$/;"	m	struct:Sigcontext
fs	runtime\defs_linux_amd64.h	/^	uint16	fs;$/;"	m	struct:Sigcontext
ftw	runtime\defs_linux_amd64.h	/^	uint16	ftw;$/;"	m	struct:Fpstate
ftw	runtime\defs_linux_amd64.h	/^	uint16	ftw;$/;"	m	struct:Fpstate1
gregs	runtime\defs_linux_amd64.h	/^	int64	gregs[23];$/;"	m	struct:Mcontext
gs	runtime\defs_linux_amd64.h	/^	uint16	gs;$/;"	m	struct:Sigcontext
it_interval	runtime\defs_linux_amd64.h	/^	Timeval	it_interval;$/;"	m	struct:Itimerval
it_value	runtime\defs_linux_amd64.h	/^	Timeval	it_value;$/;"	m	struct:Itimerval
mxcr_mask	runtime\defs_linux_amd64.h	/^	uint32	mxcr_mask;$/;"	m	struct:Fpstate
mxcr_mask	runtime\defs_linux_amd64.h	/^	uint32	mxcr_mask;$/;"	m	struct:Fpstate1
mxcsr	runtime\defs_linux_amd64.h	/^	uint32	mxcsr;$/;"	m	struct:Fpstate
mxcsr	runtime\defs_linux_amd64.h	/^	uint32	mxcsr;$/;"	m	struct:Fpstate1
oldmask	runtime\defs_linux_amd64.h	/^	uint64	oldmask;$/;"	m	struct:Sigcontext
padding	runtime\defs_linux_amd64.h	/^	uint16	padding[3];$/;"	m	struct:Fpxreg
padding	runtime\defs_linux_amd64.h	/^	uint16	padding[3];$/;"	m	struct:Fpxreg1
padding	runtime\defs_linux_amd64.h	/^	uint32	padding[24];$/;"	m	struct:Fpstate
padding	runtime\defs_linux_amd64.h	/^	uint32	padding[24];$/;"	m	struct:Fpstate1
r10	runtime\defs_linux_amd64.h	/^	uint64	r10;$/;"	m	struct:Sigcontext
r11	runtime\defs_linux_amd64.h	/^	uint64	r11;$/;"	m	struct:Sigcontext
r12	runtime\defs_linux_amd64.h	/^	uint64	r12;$/;"	m	struct:Sigcontext
r13	runtime\defs_linux_amd64.h	/^	uint64	r13;$/;"	m	struct:Sigcontext
r14	runtime\defs_linux_amd64.h	/^	uint64	r14;$/;"	m	struct:Sigcontext
r15	runtime\defs_linux_amd64.h	/^	uint64	r15;$/;"	m	struct:Sigcontext
r8	runtime\defs_linux_amd64.h	/^	uint64	r8;$/;"	m	struct:Sigcontext
r9	runtime\defs_linux_amd64.h	/^	uint64	r9;$/;"	m	struct:Sigcontext
rax	runtime\defs_linux_amd64.h	/^	uint64	rax;$/;"	m	struct:Sigcontext
rbp	runtime\defs_linux_amd64.h	/^	uint64	rbp;$/;"	m	struct:Sigcontext
rbx	runtime\defs_linux_amd64.h	/^	uint64	rbx;$/;"	m	struct:Sigcontext
rcx	runtime\defs_linux_amd64.h	/^	uint64	rcx;$/;"	m	struct:Sigcontext
rdi	runtime\defs_linux_amd64.h	/^	uint64	rdi;$/;"	m	struct:Sigcontext
rdp	runtime\defs_linux_amd64.h	/^	uint64	rdp;$/;"	m	struct:Fpstate
rdp	runtime\defs_linux_amd64.h	/^	uint64	rdp;$/;"	m	struct:Fpstate1
rdx	runtime\defs_linux_amd64.h	/^	uint64	rdx;$/;"	m	struct:Sigcontext
rip	runtime\defs_linux_amd64.h	/^	uint64	rip;$/;"	m	struct:Fpstate
rip	runtime\defs_linux_amd64.h	/^	uint64	rip;$/;"	m	struct:Fpstate1
rip	runtime\defs_linux_amd64.h	/^	uint64	rip;$/;"	m	struct:Sigcontext
rsi	runtime\defs_linux_amd64.h	/^	uint64	rsi;$/;"	m	struct:Sigcontext
rsp	runtime\defs_linux_amd64.h	/^	uint64	rsp;$/;"	m	struct:Sigcontext
sa_flags	runtime\defs_linux_amd64.h	/^	uint64	sa_flags;$/;"	m	struct:Sigaction
sa_handler	runtime\defs_linux_amd64.h	/^	void	*sa_handler;$/;"	m	struct:Sigaction
sa_mask	runtime\defs_linux_amd64.h	/^	uint64	sa_mask;$/;"	m	struct:Sigaction
sa_restorer	runtime\defs_linux_amd64.h	/^	void	*sa_restorer;$/;"	m	struct:Sigaction
si_code	runtime\defs_linux_amd64.h	/^	int32	si_code;$/;"	m	struct:Siginfo
si_errno	runtime\defs_linux_amd64.h	/^	int32	si_errno;$/;"	m	struct:Siginfo
si_signo	runtime\defs_linux_amd64.h	/^	int32	si_signo;$/;"	m	struct:Siginfo
significand	runtime\defs_linux_amd64.h	/^	uint16	significand[4];$/;"	m	struct:Fpreg1
significand	runtime\defs_linux_amd64.h	/^	uint16	significand[4];$/;"	m	struct:Fpxreg
significand	runtime\defs_linux_amd64.h	/^	uint16	significand[4];$/;"	m	struct:Fpxreg1
ss_flags	runtime\defs_linux_amd64.h	/^	int32	ss_flags;$/;"	m	struct:Sigaltstack
ss_size	runtime\defs_linux_amd64.h	/^	uint64	ss_size;$/;"	m	struct:Sigaltstack
ss_sp	runtime\defs_linux_amd64.h	/^	byte	*ss_sp;$/;"	m	struct:Sigaltstack
swd	runtime\defs_linux_amd64.h	/^	uint16	swd;$/;"	m	struct:Fpstate
swd	runtime\defs_linux_amd64.h	/^	uint16	swd;$/;"	m	struct:Fpstate1
trapno	runtime\defs_linux_amd64.h	/^	uint64	trapno;$/;"	m	struct:Sigcontext
tv_nsec	runtime\defs_linux_amd64.h	/^	int64	tv_nsec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_linux_amd64.h	/^	int64	tv_sec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_linux_amd64.h	/^	int64	tv_sec;$/;"	m	struct:Timeval
tv_usec	runtime\defs_linux_amd64.h	/^	int64	tv_usec;$/;"	m	struct:Timeval
uc_flags	runtime\defs_linux_amd64.h	/^	uint64	uc_flags;$/;"	m	struct:Ucontext
uc_link	runtime\defs_linux_amd64.h	/^	Ucontext	*uc_link;$/;"	m	struct:Ucontext
uc_mcontext	runtime\defs_linux_amd64.h	/^	Mcontext	uc_mcontext;$/;"	m	struct:Ucontext
uc_sigmask	runtime\defs_linux_amd64.h	/^	Usigset	uc_sigmask;$/;"	m	struct:Ucontext
uc_stack	runtime\defs_linux_amd64.h	/^	Sigaltstack	uc_stack;$/;"	m	struct:Ucontext
BUS_ADRALN	runtime\defs_linux_arm.h	/^	BUS_ADRALN = 0x1,$/;"	e	enum:__anon19
BUS_ADRERR	runtime\defs_linux_arm.h	/^	BUS_ADRERR = 0x2,$/;"	e	enum:__anon19
BUS_OBJERR	runtime\defs_linux_arm.h	/^	BUS_OBJERR = 0x3,$/;"	e	enum:__anon19
EAGAIN	runtime\defs_linux_arm.h	/^	EAGAIN = 0xb,$/;"	e	enum:__anon19
EINTR	runtime\defs_linux_arm.h	/^	EINTR  = 0x4,$/;"	e	enum:__anon19
ENOMEM	runtime\defs_linux_arm.h	/^	ENOMEM = 0xc,$/;"	e	enum:__anon19
EPOLLERR	runtime\defs_linux_arm.h	/^	EPOLLERR	= 0x8,$/;"	e	enum:__anon19
EPOLLET	runtime\defs_linux_arm.h	/^	EPOLLET		= -0x80000000,$/;"	e	enum:__anon19
EPOLLHUP	runtime\defs_linux_arm.h	/^	EPOLLHUP	= 0x10,$/;"	e	enum:__anon19
EPOLLIN	runtime\defs_linux_arm.h	/^	EPOLLIN		= 0x1,$/;"	e	enum:__anon19
EPOLLOUT	runtime\defs_linux_arm.h	/^	EPOLLOUT	= 0x4,$/;"	e	enum:__anon19
EPOLLRDHUP	runtime\defs_linux_arm.h	/^	EPOLLRDHUP	= 0x2000,$/;"	e	enum:__anon19
EPOLL_CLOEXEC	runtime\defs_linux_arm.h	/^	EPOLL_CLOEXEC	= 0x80000,$/;"	e	enum:__anon19
EPOLL_CTL_ADD	runtime\defs_linux_arm.h	/^	EPOLL_CTL_ADD	= 0x1,$/;"	e	enum:__anon19
EPOLL_CTL_DEL	runtime\defs_linux_arm.h	/^	EPOLL_CTL_DEL	= 0x2,$/;"	e	enum:__anon19
EPOLL_CTL_MOD	runtime\defs_linux_arm.h	/^	EPOLL_CTL_MOD	= 0x3,$/;"	e	enum:__anon19
EpollEvent	runtime\defs_linux_arm.h	/^struct EpollEvent {$/;"	s
EpollEvent	runtime\defs_linux_arm.h	/^typedef struct EpollEvent EpollEvent;$/;"	t	typeref:struct:EpollEvent
FPE_FLTDIV	runtime\defs_linux_arm.h	/^	FPE_FLTDIV = 0x3,$/;"	e	enum:__anon19
FPE_FLTINV	runtime\defs_linux_arm.h	/^	FPE_FLTINV = 0x7,$/;"	e	enum:__anon19
FPE_FLTOVF	runtime\defs_linux_arm.h	/^	FPE_FLTOVF = 0x4,$/;"	e	enum:__anon19
FPE_FLTRES	runtime\defs_linux_arm.h	/^	FPE_FLTRES = 0x6,$/;"	e	enum:__anon19
FPE_FLTSUB	runtime\defs_linux_arm.h	/^	FPE_FLTSUB = 0x8,$/;"	e	enum:__anon19
FPE_FLTUND	runtime\defs_linux_arm.h	/^	FPE_FLTUND = 0x5,$/;"	e	enum:__anon19
FPE_INTDIV	runtime\defs_linux_arm.h	/^	FPE_INTDIV = 0x1,$/;"	e	enum:__anon19
FPE_INTOVF	runtime\defs_linux_arm.h	/^	FPE_INTOVF = 0x2,$/;"	e	enum:__anon19
ITIMER_PROF	runtime\defs_linux_arm.h	/^	ITIMER_PROF = 0x2,$/;"	e	enum:__anon19
ITIMER_REAL	runtime\defs_linux_arm.h	/^	ITIMER_REAL = 0,$/;"	e	enum:__anon19
ITIMER_VIRTUAL	runtime\defs_linux_arm.h	/^	ITIMER_VIRTUAL = 0x1,$/;"	e	enum:__anon19
Itimerval	runtime\defs_linux_arm.h	/^struct Itimerval {$/;"	s
Itimerval	runtime\defs_linux_arm.h	/^typedef struct Itimerval Itimerval;$/;"	t	typeref:struct:Itimerval
MADV_DONTNEED	runtime\defs_linux_arm.h	/^	MADV_DONTNEED = 0x4,$/;"	e	enum:__anon19
MAP_ANON	runtime\defs_linux_arm.h	/^	MAP_ANON = 0x20,$/;"	e	enum:__anon19
MAP_FIXED	runtime\defs_linux_arm.h	/^	MAP_FIXED = 0x10,$/;"	e	enum:__anon19
MAP_PRIVATE	runtime\defs_linux_arm.h	/^	MAP_PRIVATE = 0x2,$/;"	e	enum:__anon19
O_CLOEXEC	runtime\defs_linux_arm.h	/^	O_CLOEXEC = 02000000,$/;"	e	enum:__anon19
O_RDONLY	runtime\defs_linux_arm.h	/^	O_RDONLY = 0,$/;"	e	enum:__anon19
PROT_EXEC	runtime\defs_linux_arm.h	/^	PROT_EXEC = 0x4,$/;"	e	enum:__anon19
PROT_NONE	runtime\defs_linux_arm.h	/^	PROT_NONE = 0,$/;"	e	enum:__anon19
PROT_READ	runtime\defs_linux_arm.h	/^	PROT_READ = 0x1,$/;"	e	enum:__anon19
PROT_WRITE	runtime\defs_linux_arm.h	/^	PROT_WRITE = 0x2,$/;"	e	enum:__anon19
SA_ONSTACK	runtime\defs_linux_arm.h	/^	SA_ONSTACK = 0x8000000,$/;"	e	enum:__anon19
SA_RESTART	runtime\defs_linux_arm.h	/^	SA_RESTART = 0x10000000,$/;"	e	enum:__anon19
SA_RESTORER	runtime\defs_linux_arm.h	/^	SA_RESTORER = 0x4000000,$/;"	e	enum:__anon19
SA_SIGINFO	runtime\defs_linux_arm.h	/^	SA_SIGINFO = 0x4,$/;"	e	enum:__anon19
SEGV_ACCERR	runtime\defs_linux_arm.h	/^	SEGV_ACCERR = 0x2,$/;"	e	enum:__anon19
SEGV_MAPERR	runtime\defs_linux_arm.h	/^	SEGV_MAPERR = 0x1,$/;"	e	enum:__anon19
SIGABRT	runtime\defs_linux_arm.h	/^	SIGABRT = 0x6,$/;"	e	enum:__anon19
SIGALRM	runtime\defs_linux_arm.h	/^	SIGALRM = 0xe,$/;"	e	enum:__anon19
SIGBUS	runtime\defs_linux_arm.h	/^	SIGBUS = 0x7,$/;"	e	enum:__anon19
SIGCHLD	runtime\defs_linux_arm.h	/^	SIGCHLD = 0x11,$/;"	e	enum:__anon19
SIGCONT	runtime\defs_linux_arm.h	/^	SIGCONT = 0x12,$/;"	e	enum:__anon19
SIGFPE	runtime\defs_linux_arm.h	/^	SIGFPE = 0x8,$/;"	e	enum:__anon19
SIGHUP	runtime\defs_linux_arm.h	/^	SIGHUP = 0x1,$/;"	e	enum:__anon19
SIGILL	runtime\defs_linux_arm.h	/^	SIGILL = 0x4,$/;"	e	enum:__anon19
SIGINT	runtime\defs_linux_arm.h	/^	SIGINT = 0x2,$/;"	e	enum:__anon19
SIGIO	runtime\defs_linux_arm.h	/^	SIGIO = 0x1d,$/;"	e	enum:__anon19
SIGKILL	runtime\defs_linux_arm.h	/^	SIGKILL = 0x9,$/;"	e	enum:__anon19
SIGPIPE	runtime\defs_linux_arm.h	/^	SIGPIPE = 0xd,$/;"	e	enum:__anon19
SIGPROF	runtime\defs_linux_arm.h	/^	SIGPROF = 0x1b,$/;"	e	enum:__anon19
SIGPWR	runtime\defs_linux_arm.h	/^	SIGPWR = 0x1e,$/;"	e	enum:__anon19
SIGQUIT	runtime\defs_linux_arm.h	/^	SIGQUIT = 0x3,$/;"	e	enum:__anon19
SIGSEGV	runtime\defs_linux_arm.h	/^	SIGSEGV = 0xb,$/;"	e	enum:__anon19
SIGSTKFLT	runtime\defs_linux_arm.h	/^	SIGSTKFLT = 0x10,$/;"	e	enum:__anon19
SIGSTOP	runtime\defs_linux_arm.h	/^	SIGSTOP = 0x13,$/;"	e	enum:__anon19
SIGSYS	runtime\defs_linux_arm.h	/^	SIGSYS = 0x1f,$/;"	e	enum:__anon19
SIGTRAP	runtime\defs_linux_arm.h	/^	SIGTRAP = 0x5,$/;"	e	enum:__anon19
SIGTSTP	runtime\defs_linux_arm.h	/^	SIGTSTP = 0x14,$/;"	e	enum:__anon19
SIGTTIN	runtime\defs_linux_arm.h	/^	SIGTTIN = 0x15,$/;"	e	enum:__anon19
SIGTTOU	runtime\defs_linux_arm.h	/^	SIGTTOU = 0x16,$/;"	e	enum:__anon19
SIGURG	runtime\defs_linux_arm.h	/^	SIGURG = 0x17,$/;"	e	enum:__anon19
SIGUSR1	runtime\defs_linux_arm.h	/^	SIGUSR1 = 0xa,$/;"	e	enum:__anon19
SIGUSR2	runtime\defs_linux_arm.h	/^	SIGUSR2 = 0xc,$/;"	e	enum:__anon19
SIGVTALRM	runtime\defs_linux_arm.h	/^	SIGVTALRM = 0x1a,$/;"	e	enum:__anon19
SIGWINCH	runtime\defs_linux_arm.h	/^	SIGWINCH = 0x1c,$/;"	e	enum:__anon19
SIGXCPU	runtime\defs_linux_arm.h	/^	SIGXCPU = 0x18,$/;"	e	enum:__anon19
SIGXFSZ	runtime\defs_linux_arm.h	/^	SIGXFSZ = 0x19,$/;"	e	enum:__anon19
Sigaction	runtime\defs_linux_arm.h	/^struct Sigaction {$/;"	s
Sigaction	runtime\defs_linux_arm.h	/^typedef struct Sigaction Sigaction;$/;"	t	typeref:struct:Sigaction
Sigaltstack	runtime\defs_linux_arm.h	/^struct Sigaltstack {$/;"	s
Sigaltstack	runtime\defs_linux_arm.h	/^typedef struct Sigaltstack Sigaltstack;$/;"	t	typeref:struct:Sigaltstack
Sigcontext	runtime\defs_linux_arm.h	/^struct Sigcontext {$/;"	s
Sigcontext	runtime\defs_linux_arm.h	/^typedef struct Sigcontext Sigcontext;$/;"	t	typeref:struct:Sigcontext
Siginfo	runtime\defs_linux_arm.h	/^struct Siginfo {$/;"	s
Siginfo	runtime\defs_linux_arm.h	/^typedef struct Siginfo Siginfo;$/;"	t	typeref:struct:Siginfo
Timespec	runtime\defs_linux_arm.h	/^struct Timespec {$/;"	s
Timespec	runtime\defs_linux_arm.h	/^typedef struct Timespec Timespec;$/;"	t	typeref:struct:Timespec
Timeval	runtime\defs_linux_arm.h	/^struct Timeval {$/;"	s
Timeval	runtime\defs_linux_arm.h	/^typedef struct Timeval Timeval;$/;"	t	typeref:struct:Timeval
Ucontext	runtime\defs_linux_arm.h	/^struct Ucontext {$/;"	s
Ucontext	runtime\defs_linux_arm.h	/^typedef struct Ucontext Ucontext;$/;"	t	typeref:struct:Ucontext
__unused	runtime\defs_linux_arm.h	/^	int32 __unused[31];$/;"	m	struct:Ucontext
_pad	runtime\defs_linux_arm.h	/^	uint32	_pad;$/;"	m	struct:EpollEvent
_sifields	runtime\defs_linux_arm.h	/^	uint8 _sifields[4];$/;"	m	struct:Siginfo
arm_cpsr	runtime\defs_linux_arm.h	/^	uint32 arm_cpsr;$/;"	m	struct:Sigcontext
arm_fp	runtime\defs_linux_arm.h	/^	uint32 arm_fp;$/;"	m	struct:Sigcontext
arm_ip	runtime\defs_linux_arm.h	/^	uint32 arm_ip;$/;"	m	struct:Sigcontext
arm_lr	runtime\defs_linux_arm.h	/^	uint32 arm_lr;$/;"	m	struct:Sigcontext
arm_pc	runtime\defs_linux_arm.h	/^	uint32 arm_pc;$/;"	m	struct:Sigcontext
arm_r0	runtime\defs_linux_arm.h	/^	uint32 arm_r0;$/;"	m	struct:Sigcontext
arm_r1	runtime\defs_linux_arm.h	/^	uint32 arm_r1;$/;"	m	struct:Sigcontext
arm_r10	runtime\defs_linux_arm.h	/^	uint32 arm_r10;$/;"	m	struct:Sigcontext
arm_r2	runtime\defs_linux_arm.h	/^	uint32 arm_r2;$/;"	m	struct:Sigcontext
arm_r3	runtime\defs_linux_arm.h	/^	uint32 arm_r3;$/;"	m	struct:Sigcontext
arm_r4	runtime\defs_linux_arm.h	/^	uint32 arm_r4;$/;"	m	struct:Sigcontext
arm_r5	runtime\defs_linux_arm.h	/^	uint32 arm_r5;$/;"	m	struct:Sigcontext
arm_r6	runtime\defs_linux_arm.h	/^	uint32 arm_r6;$/;"	m	struct:Sigcontext
arm_r7	runtime\defs_linux_arm.h	/^	uint32 arm_r7;$/;"	m	struct:Sigcontext
arm_r8	runtime\defs_linux_arm.h	/^	uint32 arm_r8;$/;"	m	struct:Sigcontext
arm_r9	runtime\defs_linux_arm.h	/^	uint32 arm_r9;$/;"	m	struct:Sigcontext
arm_sp	runtime\defs_linux_arm.h	/^	uint32 arm_sp;$/;"	m	struct:Sigcontext
data	runtime\defs_linux_arm.h	/^	uint64	data;$/;"	m	struct:EpollEvent
error_code	runtime\defs_linux_arm.h	/^	uint32 error_code;$/;"	m	struct:Sigcontext
events	runtime\defs_linux_arm.h	/^	uint32	events;$/;"	m	struct:EpollEvent
fault_address	runtime\defs_linux_arm.h	/^	uint32 fault_address;$/;"	m	struct:Sigcontext
it_interval	runtime\defs_linux_arm.h	/^	Timeval it_interval;$/;"	m	struct:Itimerval
it_value	runtime\defs_linux_arm.h	/^	Timeval it_value;$/;"	m	struct:Itimerval
oldmask	runtime\defs_linux_arm.h	/^	uint32 oldmask;$/;"	m	struct:Sigcontext
sa_flags	runtime\defs_linux_arm.h	/^	uint32 sa_flags;$/;"	m	struct:Sigaction
sa_handler	runtime\defs_linux_arm.h	/^	void *sa_handler;$/;"	m	struct:Sigaction
sa_mask	runtime\defs_linux_arm.h	/^	uint64 sa_mask;$/;"	m	struct:Sigaction
sa_restorer	runtime\defs_linux_arm.h	/^	void *sa_restorer;$/;"	m	struct:Sigaction
si_code	runtime\defs_linux_arm.h	/^	int32 si_code;$/;"	m	struct:Siginfo
si_errno	runtime\defs_linux_arm.h	/^	int32 si_errno;$/;"	m	struct:Siginfo
si_signo	runtime\defs_linux_arm.h	/^	int32 si_signo;$/;"	m	struct:Siginfo
ss_flags	runtime\defs_linux_arm.h	/^	int32 ss_flags;$/;"	m	struct:Sigaltstack
ss_size	runtime\defs_linux_arm.h	/^	uint32 ss_size;$/;"	m	struct:Sigaltstack
ss_sp	runtime\defs_linux_arm.h	/^	void *ss_sp;$/;"	m	struct:Sigaltstack
trap_no	runtime\defs_linux_arm.h	/^	uint32 trap_no;$/;"	m	struct:Sigcontext
tv_nsec	runtime\defs_linux_arm.h	/^	int32 tv_nsec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_linux_arm.h	/^	int32 tv_sec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_linux_arm.h	/^	int32 tv_sec;$/;"	m	struct:Timeval
tv_usec	runtime\defs_linux_arm.h	/^	int32 tv_usec;$/;"	m	struct:Timeval
uc_flags	runtime\defs_linux_arm.h	/^	uint32 uc_flags;$/;"	m	struct:Ucontext
uc_link	runtime\defs_linux_arm.h	/^	Ucontext *uc_link;$/;"	m	struct:Ucontext
uc_mcontext	runtime\defs_linux_arm.h	/^	Sigcontext uc_mcontext;$/;"	m	struct:Ucontext
uc_regspace	runtime\defs_linux_arm.h	/^	uint32 uc_regspace[128];$/;"	m	struct:Ucontext
uc_sigmask	runtime\defs_linux_arm.h	/^	uint32 uc_sigmask;$/;"	m	struct:Ucontext
uc_stack	runtime\defs_linux_arm.h	/^	Sigaltstack uc_stack;$/;"	m	struct:Ucontext
BUS_ADRALN	runtime\defs_netbsd_386.h	/^	BUS_ADRALN	= 0x1,$/;"	e	enum:__anon20
BUS_ADRERR	runtime\defs_netbsd_386.h	/^	BUS_ADRERR	= 0x2,$/;"	e	enum:__anon20
BUS_OBJERR	runtime\defs_netbsd_386.h	/^	BUS_OBJERR	= 0x3,$/;"	e	enum:__anon20
EFAULT	runtime\defs_netbsd_386.h	/^	EFAULT	= 0xe,$/;"	e	enum:__anon20
EINTR	runtime\defs_netbsd_386.h	/^	EINTR	= 0x4,$/;"	e	enum:__anon20
EVFILT_READ	runtime\defs_netbsd_386.h	/^	EVFILT_READ	= 0x0,$/;"	e	enum:__anon20
EVFILT_WRITE	runtime\defs_netbsd_386.h	/^	EVFILT_WRITE	= 0x1,$/;"	e	enum:__anon20
EV_ADD	runtime\defs_netbsd_386.h	/^	EV_ADD		= 0x1,$/;"	e	enum:__anon20
EV_CLEAR	runtime\defs_netbsd_386.h	/^	EV_CLEAR	= 0x20,$/;"	e	enum:__anon20
EV_DELETE	runtime\defs_netbsd_386.h	/^	EV_DELETE	= 0x2,$/;"	e	enum:__anon20
EV_ERROR	runtime\defs_netbsd_386.h	/^	EV_ERROR	= 0x4000,$/;"	e	enum:__anon20
EV_RECEIPT	runtime\defs_netbsd_386.h	/^	EV_RECEIPT	= 0,$/;"	e	enum:__anon20
FPE_FLTDIV	runtime\defs_netbsd_386.h	/^	FPE_FLTDIV	= 0x3,$/;"	e	enum:__anon20
FPE_FLTINV	runtime\defs_netbsd_386.h	/^	FPE_FLTINV	= 0x7,$/;"	e	enum:__anon20
FPE_FLTOVF	runtime\defs_netbsd_386.h	/^	FPE_FLTOVF	= 0x4,$/;"	e	enum:__anon20
FPE_FLTRES	runtime\defs_netbsd_386.h	/^	FPE_FLTRES	= 0x6,$/;"	e	enum:__anon20
FPE_FLTSUB	runtime\defs_netbsd_386.h	/^	FPE_FLTSUB	= 0x8,$/;"	e	enum:__anon20
FPE_FLTUND	runtime\defs_netbsd_386.h	/^	FPE_FLTUND	= 0x5,$/;"	e	enum:__anon20
FPE_INTDIV	runtime\defs_netbsd_386.h	/^	FPE_INTDIV	= 0x1,$/;"	e	enum:__anon20
FPE_INTOVF	runtime\defs_netbsd_386.h	/^	FPE_INTOVF	= 0x2,$/;"	e	enum:__anon20
ITIMER_PROF	runtime\defs_netbsd_386.h	/^	ITIMER_PROF	= 0x2,$/;"	e	enum:__anon20
ITIMER_REAL	runtime\defs_netbsd_386.h	/^	ITIMER_REAL	= 0x0,$/;"	e	enum:__anon20
ITIMER_VIRTUAL	runtime\defs_netbsd_386.h	/^	ITIMER_VIRTUAL	= 0x1,$/;"	e	enum:__anon20
Itimerval	runtime\defs_netbsd_386.h	/^struct Itimerval {$/;"	s
Itimerval	runtime\defs_netbsd_386.h	/^typedef struct Itimerval Itimerval;$/;"	t	typeref:struct:Itimerval
Kevent	runtime\defs_netbsd_386.h	/^struct Kevent {$/;"	s
Kevent	runtime\defs_netbsd_386.h	/^typedef struct Kevent Kevent;$/;"	t	typeref:struct:Kevent
MADV_FREE	runtime\defs_netbsd_386.h	/^	MADV_FREE	= 0x6,$/;"	e	enum:__anon20
MAP_ANON	runtime\defs_netbsd_386.h	/^	MAP_ANON	= 0x1000,$/;"	e	enum:__anon20
MAP_FIXED	runtime\defs_netbsd_386.h	/^	MAP_FIXED	= 0x10,$/;"	e	enum:__anon20
MAP_PRIVATE	runtime\defs_netbsd_386.h	/^	MAP_PRIVATE	= 0x2,$/;"	e	enum:__anon20
McontextT	runtime\defs_netbsd_386.h	/^struct McontextT {$/;"	s
McontextT	runtime\defs_netbsd_386.h	/^typedef struct McontextT McontextT;$/;"	t	typeref:struct:McontextT
PROT_EXEC	runtime\defs_netbsd_386.h	/^	PROT_EXEC	= 0x4,$/;"	e	enum:__anon20
PROT_NONE	runtime\defs_netbsd_386.h	/^	PROT_NONE	= 0x0,$/;"	e	enum:__anon20
PROT_READ	runtime\defs_netbsd_386.h	/^	PROT_READ	= 0x1,$/;"	e	enum:__anon20
PROT_WRITE	runtime\defs_netbsd_386.h	/^	PROT_WRITE	= 0x2,$/;"	e	enum:__anon20
REG_CS	runtime\defs_netbsd_386.h	/^	REG_CS		= 0xf,$/;"	e	enum:__anon21
REG_DS	runtime\defs_netbsd_386.h	/^	REG_DS		= 0x3,$/;"	e	enum:__anon21
REG_EAX	runtime\defs_netbsd_386.h	/^	REG_EAX		= 0xb,$/;"	e	enum:__anon21
REG_EBP	runtime\defs_netbsd_386.h	/^	REG_EBP		= 0x6,$/;"	e	enum:__anon21
REG_EBX	runtime\defs_netbsd_386.h	/^	REG_EBX		= 0x8,$/;"	e	enum:__anon21
REG_ECX	runtime\defs_netbsd_386.h	/^	REG_ECX		= 0xa,$/;"	e	enum:__anon21
REG_EDI	runtime\defs_netbsd_386.h	/^	REG_EDI		= 0x4,$/;"	e	enum:__anon21
REG_EDX	runtime\defs_netbsd_386.h	/^	REG_EDX		= 0x9,$/;"	e	enum:__anon21
REG_EFL	runtime\defs_netbsd_386.h	/^	REG_EFL		= 0x10,$/;"	e	enum:__anon21
REG_EIP	runtime\defs_netbsd_386.h	/^	REG_EIP		= 0xe,$/;"	e	enum:__anon21
REG_ERR	runtime\defs_netbsd_386.h	/^	REG_ERR		= 0xd,$/;"	e	enum:__anon21
REG_ES	runtime\defs_netbsd_386.h	/^	REG_ES		= 0x2,$/;"	e	enum:__anon21
REG_ESI	runtime\defs_netbsd_386.h	/^	REG_ESI		= 0x5,$/;"	e	enum:__anon21
REG_ESP	runtime\defs_netbsd_386.h	/^	REG_ESP		= 0x7,$/;"	e	enum:__anon21
REG_FS	runtime\defs_netbsd_386.h	/^	REG_FS		= 0x1,$/;"	e	enum:__anon21
REG_GS	runtime\defs_netbsd_386.h	/^	REG_GS		= 0x0,$/;"	e	enum:__anon21
REG_SS	runtime\defs_netbsd_386.h	/^	REG_SS		= 0x12,$/;"	e	enum:__anon21
REG_TRAPNO	runtime\defs_netbsd_386.h	/^	REG_TRAPNO	= 0xc,$/;"	e	enum:__anon21
REG_UESP	runtime\defs_netbsd_386.h	/^	REG_UESP	= 0x11,$/;"	e	enum:__anon21
SA_ONSTACK	runtime\defs_netbsd_386.h	/^	SA_ONSTACK	= 0x1,$/;"	e	enum:__anon20
SA_RESTART	runtime\defs_netbsd_386.h	/^	SA_RESTART	= 0x2,$/;"	e	enum:__anon20
SA_SIGINFO	runtime\defs_netbsd_386.h	/^	SA_SIGINFO	= 0x40,$/;"	e	enum:__anon20
SEGV_ACCERR	runtime\defs_netbsd_386.h	/^	SEGV_ACCERR	= 0x2,$/;"	e	enum:__anon20
SEGV_MAPERR	runtime\defs_netbsd_386.h	/^	SEGV_MAPERR	= 0x1,$/;"	e	enum:__anon20
SIGABRT	runtime\defs_netbsd_386.h	/^	SIGABRT		= 0x6,$/;"	e	enum:__anon20
SIGALRM	runtime\defs_netbsd_386.h	/^	SIGALRM		= 0xe,$/;"	e	enum:__anon20
SIGBUS	runtime\defs_netbsd_386.h	/^	SIGBUS		= 0xa,$/;"	e	enum:__anon20
SIGCHLD	runtime\defs_netbsd_386.h	/^	SIGCHLD		= 0x14,$/;"	e	enum:__anon20
SIGCONT	runtime\defs_netbsd_386.h	/^	SIGCONT		= 0x13,$/;"	e	enum:__anon20
SIGEMT	runtime\defs_netbsd_386.h	/^	SIGEMT		= 0x7,$/;"	e	enum:__anon20
SIGFPE	runtime\defs_netbsd_386.h	/^	SIGFPE		= 0x8,$/;"	e	enum:__anon20
SIGHUP	runtime\defs_netbsd_386.h	/^	SIGHUP		= 0x1,$/;"	e	enum:__anon20
SIGILL	runtime\defs_netbsd_386.h	/^	SIGILL		= 0x4,$/;"	e	enum:__anon20
SIGINFO	runtime\defs_netbsd_386.h	/^	SIGINFO		= 0x1d,$/;"	e	enum:__anon20
SIGINT	runtime\defs_netbsd_386.h	/^	SIGINT		= 0x2,$/;"	e	enum:__anon20
SIGIO	runtime\defs_netbsd_386.h	/^	SIGIO		= 0x17,$/;"	e	enum:__anon20
SIGKILL	runtime\defs_netbsd_386.h	/^	SIGKILL		= 0x9,$/;"	e	enum:__anon20
SIGPIPE	runtime\defs_netbsd_386.h	/^	SIGPIPE		= 0xd,$/;"	e	enum:__anon20
SIGPROF	runtime\defs_netbsd_386.h	/^	SIGPROF		= 0x1b,$/;"	e	enum:__anon20
SIGQUIT	runtime\defs_netbsd_386.h	/^	SIGQUIT		= 0x3,$/;"	e	enum:__anon20
SIGSEGV	runtime\defs_netbsd_386.h	/^	SIGSEGV		= 0xb,$/;"	e	enum:__anon20
SIGSTOP	runtime\defs_netbsd_386.h	/^	SIGSTOP		= 0x11,$/;"	e	enum:__anon20
SIGSYS	runtime\defs_netbsd_386.h	/^	SIGSYS		= 0xc,$/;"	e	enum:__anon20
SIGTERM	runtime\defs_netbsd_386.h	/^	SIGTERM		= 0xf,$/;"	e	enum:__anon20
SIGTRAP	runtime\defs_netbsd_386.h	/^	SIGTRAP		= 0x5,$/;"	e	enum:__anon20
SIGTSTP	runtime\defs_netbsd_386.h	/^	SIGTSTP		= 0x12,$/;"	e	enum:__anon20
SIGTTIN	runtime\defs_netbsd_386.h	/^	SIGTTIN		= 0x15,$/;"	e	enum:__anon20
SIGTTOU	runtime\defs_netbsd_386.h	/^	SIGTTOU		= 0x16,$/;"	e	enum:__anon20
SIGURG	runtime\defs_netbsd_386.h	/^	SIGURG		= 0x10,$/;"	e	enum:__anon20
SIGUSR1	runtime\defs_netbsd_386.h	/^	SIGUSR1		= 0x1e,$/;"	e	enum:__anon20
SIGUSR2	runtime\defs_netbsd_386.h	/^	SIGUSR2		= 0x1f,$/;"	e	enum:__anon20
SIGVTALRM	runtime\defs_netbsd_386.h	/^	SIGVTALRM	= 0x1a,$/;"	e	enum:__anon20
SIGWINCH	runtime\defs_netbsd_386.h	/^	SIGWINCH	= 0x1c,$/;"	e	enum:__anon20
SIGXCPU	runtime\defs_netbsd_386.h	/^	SIGXCPU		= 0x18,$/;"	e	enum:__anon20
SIGXFSZ	runtime\defs_netbsd_386.h	/^	SIGXFSZ		= 0x19,$/;"	e	enum:__anon20
Sigaltstack	runtime\defs_netbsd_386.h	/^struct Sigaltstack {$/;"	s
Sigaltstack	runtime\defs_netbsd_386.h	/^typedef struct Sigaltstack Sigaltstack;$/;"	t	typeref:struct:Sigaltstack
Siginfo	runtime\defs_netbsd_386.h	/^struct Siginfo {$/;"	s
Siginfo	runtime\defs_netbsd_386.h	/^typedef struct Siginfo Siginfo;$/;"	t	typeref:struct:Siginfo
Sigset	runtime\defs_netbsd_386.h	/^struct Sigset {$/;"	s
Sigset	runtime\defs_netbsd_386.h	/^typedef struct Sigset Sigset;$/;"	t	typeref:struct:Sigset
StackT	runtime\defs_netbsd_386.h	/^struct StackT {$/;"	s
StackT	runtime\defs_netbsd_386.h	/^typedef struct StackT StackT;$/;"	t	typeref:struct:StackT
Timespec	runtime\defs_netbsd_386.h	/^struct Timespec {$/;"	s
Timespec	runtime\defs_netbsd_386.h	/^typedef struct Timespec Timespec;$/;"	t	typeref:struct:Timespec
Timeval	runtime\defs_netbsd_386.h	/^struct Timeval {$/;"	s
Timeval	runtime\defs_netbsd_386.h	/^typedef struct Timeval Timeval;$/;"	t	typeref:struct:Timeval
UcontextT	runtime\defs_netbsd_386.h	/^struct UcontextT {$/;"	s
UcontextT	runtime\defs_netbsd_386.h	/^typedef struct UcontextT UcontextT;$/;"	t	typeref:struct:UcontextT
__bits	runtime\defs_netbsd_386.h	/^	uint32	__bits[4];$/;"	m	struct:Sigset
__fpregs	runtime\defs_netbsd_386.h	/^	byte	__fpregs[644];$/;"	m	struct:McontextT
__gregs	runtime\defs_netbsd_386.h	/^	int32	__gregs[19];$/;"	m	struct:McontextT
__uc_pad	runtime\defs_netbsd_386.h	/^	int32	__uc_pad[4];$/;"	m	struct:UcontextT
_code	runtime\defs_netbsd_386.h	/^	int32	_code;$/;"	m	struct:Siginfo
_errno	runtime\defs_netbsd_386.h	/^	int32	_errno;$/;"	m	struct:Siginfo
_mc_tlsbase	runtime\defs_netbsd_386.h	/^	int32	_mc_tlsbase;$/;"	m	struct:McontextT
_reason	runtime\defs_netbsd_386.h	/^	byte	_reason[20];$/;"	m	struct:Siginfo
_signo	runtime\defs_netbsd_386.h	/^	int32	_signo;$/;"	m	struct:Siginfo
data	runtime\defs_netbsd_386.h	/^	int64	data;$/;"	m	struct:Kevent
fflags	runtime\defs_netbsd_386.h	/^	uint32	fflags;$/;"	m	struct:Kevent
filter	runtime\defs_netbsd_386.h	/^	uint32	filter;$/;"	m	struct:Kevent
flags	runtime\defs_netbsd_386.h	/^	uint32	flags;$/;"	m	struct:Kevent
ident	runtime\defs_netbsd_386.h	/^	uint32	ident;$/;"	m	struct:Kevent
it_interval	runtime\defs_netbsd_386.h	/^	Timeval	it_interval;$/;"	m	struct:Itimerval
it_value	runtime\defs_netbsd_386.h	/^	Timeval	it_value;$/;"	m	struct:Itimerval
ss_flags	runtime\defs_netbsd_386.h	/^	int32	ss_flags;$/;"	m	struct:Sigaltstack
ss_flags	runtime\defs_netbsd_386.h	/^	int32	ss_flags;$/;"	m	struct:StackT
ss_size	runtime\defs_netbsd_386.h	/^	uint32	ss_size;$/;"	m	struct:Sigaltstack
ss_size	runtime\defs_netbsd_386.h	/^	uint32	ss_size;$/;"	m	struct:StackT
ss_sp	runtime\defs_netbsd_386.h	/^	byte	*ss_sp;$/;"	m	struct:Sigaltstack
ss_sp	runtime\defs_netbsd_386.h	/^	byte	*ss_sp;$/;"	m	struct:StackT
tv_nsec	runtime\defs_netbsd_386.h	/^	int32	tv_nsec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_netbsd_386.h	/^	int64	tv_sec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_netbsd_386.h	/^	int64	tv_sec;$/;"	m	struct:Timeval
tv_usec	runtime\defs_netbsd_386.h	/^	int32	tv_usec;$/;"	m	struct:Timeval
uc_flags	runtime\defs_netbsd_386.h	/^	uint32	uc_flags;$/;"	m	struct:UcontextT
uc_link	runtime\defs_netbsd_386.h	/^	UcontextT	*uc_link;$/;"	m	struct:UcontextT
uc_mcontext	runtime\defs_netbsd_386.h	/^	McontextT	uc_mcontext;$/;"	m	struct:UcontextT
uc_sigmask	runtime\defs_netbsd_386.h	/^	Sigset	uc_sigmask;$/;"	m	struct:UcontextT
uc_stack	runtime\defs_netbsd_386.h	/^	StackT	uc_stack;$/;"	m	struct:UcontextT
udata	runtime\defs_netbsd_386.h	/^	int32	udata;$/;"	m	struct:Kevent
BUS_ADRALN	runtime\defs_netbsd_amd64.h	/^	BUS_ADRALN	= 0x1,$/;"	e	enum:__anon22
BUS_ADRERR	runtime\defs_netbsd_amd64.h	/^	BUS_ADRERR	= 0x2,$/;"	e	enum:__anon22
BUS_OBJERR	runtime\defs_netbsd_amd64.h	/^	BUS_OBJERR	= 0x3,$/;"	e	enum:__anon22
EFAULT	runtime\defs_netbsd_amd64.h	/^	EFAULT	= 0xe,$/;"	e	enum:__anon22
EINTR	runtime\defs_netbsd_amd64.h	/^	EINTR	= 0x4,$/;"	e	enum:__anon22
EVFILT_READ	runtime\defs_netbsd_amd64.h	/^	EVFILT_READ	= 0x0,$/;"	e	enum:__anon22
EVFILT_WRITE	runtime\defs_netbsd_amd64.h	/^	EVFILT_WRITE	= 0x1,$/;"	e	enum:__anon22
EV_ADD	runtime\defs_netbsd_amd64.h	/^	EV_ADD		= 0x1,$/;"	e	enum:__anon22
EV_CLEAR	runtime\defs_netbsd_amd64.h	/^	EV_CLEAR	= 0x20,$/;"	e	enum:__anon22
EV_DELETE	runtime\defs_netbsd_amd64.h	/^	EV_DELETE	= 0x2,$/;"	e	enum:__anon22
EV_ERROR	runtime\defs_netbsd_amd64.h	/^	EV_ERROR	= 0x4000,$/;"	e	enum:__anon22
EV_RECEIPT	runtime\defs_netbsd_amd64.h	/^	EV_RECEIPT	= 0,$/;"	e	enum:__anon22
FPE_FLTDIV	runtime\defs_netbsd_amd64.h	/^	FPE_FLTDIV	= 0x3,$/;"	e	enum:__anon22
FPE_FLTINV	runtime\defs_netbsd_amd64.h	/^	FPE_FLTINV	= 0x7,$/;"	e	enum:__anon22
FPE_FLTOVF	runtime\defs_netbsd_amd64.h	/^	FPE_FLTOVF	= 0x4,$/;"	e	enum:__anon22
FPE_FLTRES	runtime\defs_netbsd_amd64.h	/^	FPE_FLTRES	= 0x6,$/;"	e	enum:__anon22
FPE_FLTSUB	runtime\defs_netbsd_amd64.h	/^	FPE_FLTSUB	= 0x8,$/;"	e	enum:__anon22
FPE_FLTUND	runtime\defs_netbsd_amd64.h	/^	FPE_FLTUND	= 0x5,$/;"	e	enum:__anon22
FPE_INTDIV	runtime\defs_netbsd_amd64.h	/^	FPE_INTDIV	= 0x1,$/;"	e	enum:__anon22
FPE_INTOVF	runtime\defs_netbsd_amd64.h	/^	FPE_INTOVF	= 0x2,$/;"	e	enum:__anon22
ITIMER_PROF	runtime\defs_netbsd_amd64.h	/^	ITIMER_PROF	= 0x2,$/;"	e	enum:__anon22
ITIMER_REAL	runtime\defs_netbsd_amd64.h	/^	ITIMER_REAL	= 0x0,$/;"	e	enum:__anon22
ITIMER_VIRTUAL	runtime\defs_netbsd_amd64.h	/^	ITIMER_VIRTUAL	= 0x1,$/;"	e	enum:__anon22
Itimerval	runtime\defs_netbsd_amd64.h	/^struct Itimerval {$/;"	s
Itimerval	runtime\defs_netbsd_amd64.h	/^typedef struct Itimerval Itimerval;$/;"	t	typeref:struct:Itimerval
Kevent	runtime\defs_netbsd_amd64.h	/^struct Kevent {$/;"	s
Kevent	runtime\defs_netbsd_amd64.h	/^typedef struct Kevent Kevent;$/;"	t	typeref:struct:Kevent
MADV_FREE	runtime\defs_netbsd_amd64.h	/^	MADV_FREE	= 0x6,$/;"	e	enum:__anon22
MAP_ANON	runtime\defs_netbsd_amd64.h	/^	MAP_ANON	= 0x1000,$/;"	e	enum:__anon22
MAP_FIXED	runtime\defs_netbsd_amd64.h	/^	MAP_FIXED	= 0x10,$/;"	e	enum:__anon22
MAP_PRIVATE	runtime\defs_netbsd_amd64.h	/^	MAP_PRIVATE	= 0x2,$/;"	e	enum:__anon22
McontextT	runtime\defs_netbsd_amd64.h	/^struct McontextT {$/;"	s
McontextT	runtime\defs_netbsd_amd64.h	/^typedef struct McontextT McontextT;$/;"	t	typeref:struct:McontextT
PROT_EXEC	runtime\defs_netbsd_amd64.h	/^	PROT_EXEC	= 0x4,$/;"	e	enum:__anon22
PROT_NONE	runtime\defs_netbsd_amd64.h	/^	PROT_NONE	= 0x0,$/;"	e	enum:__anon22
PROT_READ	runtime\defs_netbsd_amd64.h	/^	PROT_READ	= 0x1,$/;"	e	enum:__anon22
PROT_WRITE	runtime\defs_netbsd_amd64.h	/^	PROT_WRITE	= 0x2,$/;"	e	enum:__anon22
Pad_cgo_0	runtime\defs_netbsd_amd64.h	/^	byte	Pad_cgo_0[4];$/;"	m	struct:Kevent
Pad_cgo_0	runtime\defs_netbsd_amd64.h	/^	byte	Pad_cgo_0[4];$/;"	m	struct:Sigaltstack
Pad_cgo_0	runtime\defs_netbsd_amd64.h	/^	byte	Pad_cgo_0[4];$/;"	m	struct:StackT
Pad_cgo_0	runtime\defs_netbsd_amd64.h	/^	byte	Pad_cgo_0[4];$/;"	m	struct:Timeval
Pad_cgo_0	runtime\defs_netbsd_amd64.h	/^	byte	Pad_cgo_0[4];$/;"	m	struct:UcontextT
REG_CS	runtime\defs_netbsd_amd64.h	/^	REG_CS		= 0x16,$/;"	e	enum:__anon23
REG_DS	runtime\defs_netbsd_amd64.h	/^	REG_DS		= 0x12,$/;"	e	enum:__anon23
REG_ERR	runtime\defs_netbsd_amd64.h	/^	REG_ERR		= 0x14,$/;"	e	enum:__anon23
REG_ES	runtime\defs_netbsd_amd64.h	/^	REG_ES		= 0x11,$/;"	e	enum:__anon23
REG_FS	runtime\defs_netbsd_amd64.h	/^	REG_FS		= 0x10,$/;"	e	enum:__anon23
REG_GS	runtime\defs_netbsd_amd64.h	/^	REG_GS		= 0xf,$/;"	e	enum:__anon23
REG_R10	runtime\defs_netbsd_amd64.h	/^	REG_R10		= 0x6,$/;"	e	enum:__anon23
REG_R11	runtime\defs_netbsd_amd64.h	/^	REG_R11		= 0x7,$/;"	e	enum:__anon23
REG_R12	runtime\defs_netbsd_amd64.h	/^	REG_R12		= 0x8,$/;"	e	enum:__anon23
REG_R13	runtime\defs_netbsd_amd64.h	/^	REG_R13		= 0x9,$/;"	e	enum:__anon23
REG_R14	runtime\defs_netbsd_amd64.h	/^	REG_R14		= 0xa,$/;"	e	enum:__anon23
REG_R15	runtime\defs_netbsd_amd64.h	/^	REG_R15		= 0xb,$/;"	e	enum:__anon23
REG_R8	runtime\defs_netbsd_amd64.h	/^	REG_R8		= 0x4,$/;"	e	enum:__anon23
REG_R9	runtime\defs_netbsd_amd64.h	/^	REG_R9		= 0x5,$/;"	e	enum:__anon23
REG_RAX	runtime\defs_netbsd_amd64.h	/^	REG_RAX		= 0xe,$/;"	e	enum:__anon23
REG_RBP	runtime\defs_netbsd_amd64.h	/^	REG_RBP		= 0xc,$/;"	e	enum:__anon23
REG_RBX	runtime\defs_netbsd_amd64.h	/^	REG_RBX		= 0xd,$/;"	e	enum:__anon23
REG_RCX	runtime\defs_netbsd_amd64.h	/^	REG_RCX		= 0x3,$/;"	e	enum:__anon23
REG_RDI	runtime\defs_netbsd_amd64.h	/^	REG_RDI		= 0x0,$/;"	e	enum:__anon23
REG_RDX	runtime\defs_netbsd_amd64.h	/^	REG_RDX		= 0x2,$/;"	e	enum:__anon23
REG_RFLAGS	runtime\defs_netbsd_amd64.h	/^	REG_RFLAGS	= 0x17,$/;"	e	enum:__anon23
REG_RIP	runtime\defs_netbsd_amd64.h	/^	REG_RIP		= 0x15,$/;"	e	enum:__anon23
REG_RSI	runtime\defs_netbsd_amd64.h	/^	REG_RSI		= 0x1,$/;"	e	enum:__anon23
REG_RSP	runtime\defs_netbsd_amd64.h	/^	REG_RSP		= 0x18,$/;"	e	enum:__anon23
REG_SS	runtime\defs_netbsd_amd64.h	/^	REG_SS		= 0x19,$/;"	e	enum:__anon23
REG_TRAPNO	runtime\defs_netbsd_amd64.h	/^	REG_TRAPNO	= 0x13,$/;"	e	enum:__anon23
SA_ONSTACK	runtime\defs_netbsd_amd64.h	/^	SA_ONSTACK	= 0x1,$/;"	e	enum:__anon22
SA_RESTART	runtime\defs_netbsd_amd64.h	/^	SA_RESTART	= 0x2,$/;"	e	enum:__anon22
SA_SIGINFO	runtime\defs_netbsd_amd64.h	/^	SA_SIGINFO	= 0x40,$/;"	e	enum:__anon22
SEGV_ACCERR	runtime\defs_netbsd_amd64.h	/^	SEGV_ACCERR	= 0x2,$/;"	e	enum:__anon22
SEGV_MAPERR	runtime\defs_netbsd_amd64.h	/^	SEGV_MAPERR	= 0x1,$/;"	e	enum:__anon22
SIGABRT	runtime\defs_netbsd_amd64.h	/^	SIGABRT		= 0x6,$/;"	e	enum:__anon22
SIGALRM	runtime\defs_netbsd_amd64.h	/^	SIGALRM		= 0xe,$/;"	e	enum:__anon22
SIGBUS	runtime\defs_netbsd_amd64.h	/^	SIGBUS		= 0xa,$/;"	e	enum:__anon22
SIGCHLD	runtime\defs_netbsd_amd64.h	/^	SIGCHLD		= 0x14,$/;"	e	enum:__anon22
SIGCONT	runtime\defs_netbsd_amd64.h	/^	SIGCONT		= 0x13,$/;"	e	enum:__anon22
SIGEMT	runtime\defs_netbsd_amd64.h	/^	SIGEMT		= 0x7,$/;"	e	enum:__anon22
SIGFPE	runtime\defs_netbsd_amd64.h	/^	SIGFPE		= 0x8,$/;"	e	enum:__anon22
SIGHUP	runtime\defs_netbsd_amd64.h	/^	SIGHUP		= 0x1,$/;"	e	enum:__anon22
SIGILL	runtime\defs_netbsd_amd64.h	/^	SIGILL		= 0x4,$/;"	e	enum:__anon22
SIGINFO	runtime\defs_netbsd_amd64.h	/^	SIGINFO		= 0x1d,$/;"	e	enum:__anon22
SIGINT	runtime\defs_netbsd_amd64.h	/^	SIGINT		= 0x2,$/;"	e	enum:__anon22
SIGIO	runtime\defs_netbsd_amd64.h	/^	SIGIO		= 0x17,$/;"	e	enum:__anon22
SIGKILL	runtime\defs_netbsd_amd64.h	/^	SIGKILL		= 0x9,$/;"	e	enum:__anon22
SIGPIPE	runtime\defs_netbsd_amd64.h	/^	SIGPIPE		= 0xd,$/;"	e	enum:__anon22
SIGPROF	runtime\defs_netbsd_amd64.h	/^	SIGPROF		= 0x1b,$/;"	e	enum:__anon22
SIGQUIT	runtime\defs_netbsd_amd64.h	/^	SIGQUIT		= 0x3,$/;"	e	enum:__anon22
SIGSEGV	runtime\defs_netbsd_amd64.h	/^	SIGSEGV		= 0xb,$/;"	e	enum:__anon22
SIGSTOP	runtime\defs_netbsd_amd64.h	/^	SIGSTOP		= 0x11,$/;"	e	enum:__anon22
SIGSYS	runtime\defs_netbsd_amd64.h	/^	SIGSYS		= 0xc,$/;"	e	enum:__anon22
SIGTERM	runtime\defs_netbsd_amd64.h	/^	SIGTERM		= 0xf,$/;"	e	enum:__anon22
SIGTRAP	runtime\defs_netbsd_amd64.h	/^	SIGTRAP		= 0x5,$/;"	e	enum:__anon22
SIGTSTP	runtime\defs_netbsd_amd64.h	/^	SIGTSTP		= 0x12,$/;"	e	enum:__anon22
SIGTTIN	runtime\defs_netbsd_amd64.h	/^	SIGTTIN		= 0x15,$/;"	e	enum:__anon22
SIGTTOU	runtime\defs_netbsd_amd64.h	/^	SIGTTOU		= 0x16,$/;"	e	enum:__anon22
SIGURG	runtime\defs_netbsd_amd64.h	/^	SIGURG		= 0x10,$/;"	e	enum:__anon22
SIGUSR1	runtime\defs_netbsd_amd64.h	/^	SIGUSR1		= 0x1e,$/;"	e	enum:__anon22
SIGUSR2	runtime\defs_netbsd_amd64.h	/^	SIGUSR2		= 0x1f,$/;"	e	enum:__anon22
SIGVTALRM	runtime\defs_netbsd_amd64.h	/^	SIGVTALRM	= 0x1a,$/;"	e	enum:__anon22
SIGWINCH	runtime\defs_netbsd_amd64.h	/^	SIGWINCH	= 0x1c,$/;"	e	enum:__anon22
SIGXCPU	runtime\defs_netbsd_amd64.h	/^	SIGXCPU		= 0x18,$/;"	e	enum:__anon22
SIGXFSZ	runtime\defs_netbsd_amd64.h	/^	SIGXFSZ		= 0x19,$/;"	e	enum:__anon22
Sigaltstack	runtime\defs_netbsd_amd64.h	/^struct Sigaltstack {$/;"	s
Sigaltstack	runtime\defs_netbsd_amd64.h	/^typedef struct Sigaltstack Sigaltstack;$/;"	t	typeref:struct:Sigaltstack
Siginfo	runtime\defs_netbsd_amd64.h	/^struct Siginfo {$/;"	s
Siginfo	runtime\defs_netbsd_amd64.h	/^typedef struct Siginfo Siginfo;$/;"	t	typeref:struct:Siginfo
Sigset	runtime\defs_netbsd_amd64.h	/^struct Sigset {$/;"	s
Sigset	runtime\defs_netbsd_amd64.h	/^typedef struct Sigset Sigset;$/;"	t	typeref:struct:Sigset
StackT	runtime\defs_netbsd_amd64.h	/^struct StackT {$/;"	s
StackT	runtime\defs_netbsd_amd64.h	/^typedef struct StackT StackT;$/;"	t	typeref:struct:StackT
Timespec	runtime\defs_netbsd_amd64.h	/^struct Timespec {$/;"	s
Timespec	runtime\defs_netbsd_amd64.h	/^typedef struct Timespec Timespec;$/;"	t	typeref:struct:Timespec
Timeval	runtime\defs_netbsd_amd64.h	/^struct Timeval {$/;"	s
Timeval	runtime\defs_netbsd_amd64.h	/^typedef struct Timeval Timeval;$/;"	t	typeref:struct:Timeval
UcontextT	runtime\defs_netbsd_amd64.h	/^struct UcontextT {$/;"	s
UcontextT	runtime\defs_netbsd_amd64.h	/^typedef struct UcontextT UcontextT;$/;"	t	typeref:struct:UcontextT
__bits	runtime\defs_netbsd_amd64.h	/^	uint32	__bits[4];$/;"	m	struct:Sigset
__fpregs	runtime\defs_netbsd_amd64.h	/^	int8	__fpregs[512];$/;"	m	struct:McontextT
__gregs	runtime\defs_netbsd_amd64.h	/^	uint64	__gregs[26];$/;"	m	struct:McontextT
_code	runtime\defs_netbsd_amd64.h	/^	int32	_code;$/;"	m	struct:Siginfo
_errno	runtime\defs_netbsd_amd64.h	/^	int32	_errno;$/;"	m	struct:Siginfo
_mc_tlsbase	runtime\defs_netbsd_amd64.h	/^	uint64	_mc_tlsbase;$/;"	m	struct:McontextT
_pad	runtime\defs_netbsd_amd64.h	/^	int32	_pad;$/;"	m	struct:Siginfo
_reason	runtime\defs_netbsd_amd64.h	/^	byte	_reason[24];$/;"	m	struct:Siginfo
_signo	runtime\defs_netbsd_amd64.h	/^	int32	_signo;$/;"	m	struct:Siginfo
data	runtime\defs_netbsd_amd64.h	/^	int64	data;$/;"	m	struct:Kevent
fflags	runtime\defs_netbsd_amd64.h	/^	uint32	fflags;$/;"	m	struct:Kevent
filter	runtime\defs_netbsd_amd64.h	/^	uint32	filter;$/;"	m	struct:Kevent
flags	runtime\defs_netbsd_amd64.h	/^	uint32	flags;$/;"	m	struct:Kevent
ident	runtime\defs_netbsd_amd64.h	/^	uint64	ident;$/;"	m	struct:Kevent
it_interval	runtime\defs_netbsd_amd64.h	/^	Timeval	it_interval;$/;"	m	struct:Itimerval
it_value	runtime\defs_netbsd_amd64.h	/^	Timeval	it_value;$/;"	m	struct:Itimerval
ss_flags	runtime\defs_netbsd_amd64.h	/^	int32	ss_flags;$/;"	m	struct:Sigaltstack
ss_flags	runtime\defs_netbsd_amd64.h	/^	int32	ss_flags;$/;"	m	struct:StackT
ss_size	runtime\defs_netbsd_amd64.h	/^	uint64	ss_size;$/;"	m	struct:Sigaltstack
ss_size	runtime\defs_netbsd_amd64.h	/^	uint64	ss_size;$/;"	m	struct:StackT
ss_sp	runtime\defs_netbsd_amd64.h	/^	byte	*ss_sp;$/;"	m	struct:Sigaltstack
ss_sp	runtime\defs_netbsd_amd64.h	/^	byte	*ss_sp;$/;"	m	struct:StackT
tv_nsec	runtime\defs_netbsd_amd64.h	/^	int64	tv_nsec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_netbsd_amd64.h	/^	int64	tv_sec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_netbsd_amd64.h	/^	int64	tv_sec;$/;"	m	struct:Timeval
tv_usec	runtime\defs_netbsd_amd64.h	/^	int32	tv_usec;$/;"	m	struct:Timeval
uc_flags	runtime\defs_netbsd_amd64.h	/^	uint32	uc_flags;$/;"	m	struct:UcontextT
uc_link	runtime\defs_netbsd_amd64.h	/^	UcontextT	*uc_link;$/;"	m	struct:UcontextT
uc_mcontext	runtime\defs_netbsd_amd64.h	/^	McontextT	uc_mcontext;$/;"	m	struct:UcontextT
uc_sigmask	runtime\defs_netbsd_amd64.h	/^	Sigset	uc_sigmask;$/;"	m	struct:UcontextT
uc_stack	runtime\defs_netbsd_amd64.h	/^	StackT	uc_stack;$/;"	m	struct:UcontextT
udata	runtime\defs_netbsd_amd64.h	/^	int64	udata;$/;"	m	struct:Kevent
BUS_ADRALN	runtime\defs_netbsd_arm.h	/^	BUS_ADRALN	= 0x1,$/;"	e	enum:__anon24
BUS_ADRERR	runtime\defs_netbsd_arm.h	/^	BUS_ADRERR	= 0x2,$/;"	e	enum:__anon24
BUS_OBJERR	runtime\defs_netbsd_arm.h	/^	BUS_OBJERR	= 0x3,$/;"	e	enum:__anon24
EFAULT	runtime\defs_netbsd_arm.h	/^	EFAULT	= 0xe,$/;"	e	enum:__anon24
EINTR	runtime\defs_netbsd_arm.h	/^	EINTR	= 0x4,$/;"	e	enum:__anon24
EVFILT_READ	runtime\defs_netbsd_arm.h	/^	EVFILT_READ	= 0x0,$/;"	e	enum:__anon24
EVFILT_WRITE	runtime\defs_netbsd_arm.h	/^	EVFILT_WRITE	= 0x1,$/;"	e	enum:__anon24
EV_ADD	runtime\defs_netbsd_arm.h	/^	EV_ADD		= 0x1,$/;"	e	enum:__anon24
EV_CLEAR	runtime\defs_netbsd_arm.h	/^	EV_CLEAR	= 0x20,$/;"	e	enum:__anon24
EV_DELETE	runtime\defs_netbsd_arm.h	/^	EV_DELETE	= 0x2,$/;"	e	enum:__anon24
EV_ERROR	runtime\defs_netbsd_arm.h	/^	EV_ERROR	= 0x4000,$/;"	e	enum:__anon24
EV_RECEIPT	runtime\defs_netbsd_arm.h	/^	EV_RECEIPT	= 0,$/;"	e	enum:__anon24
FPE_FLTDIV	runtime\defs_netbsd_arm.h	/^	FPE_FLTDIV	= 0x3,$/;"	e	enum:__anon24
FPE_FLTINV	runtime\defs_netbsd_arm.h	/^	FPE_FLTINV	= 0x7,$/;"	e	enum:__anon24
FPE_FLTOVF	runtime\defs_netbsd_arm.h	/^	FPE_FLTOVF	= 0x4,$/;"	e	enum:__anon24
FPE_FLTRES	runtime\defs_netbsd_arm.h	/^	FPE_FLTRES	= 0x6,$/;"	e	enum:__anon24
FPE_FLTSUB	runtime\defs_netbsd_arm.h	/^	FPE_FLTSUB	= 0x8,$/;"	e	enum:__anon24
FPE_FLTUND	runtime\defs_netbsd_arm.h	/^	FPE_FLTUND	= 0x5,$/;"	e	enum:__anon24
FPE_INTDIV	runtime\defs_netbsd_arm.h	/^	FPE_INTDIV	= 0x1,$/;"	e	enum:__anon24
FPE_INTOVF	runtime\defs_netbsd_arm.h	/^	FPE_INTOVF	= 0x2,$/;"	e	enum:__anon24
ITIMER_PROF	runtime\defs_netbsd_arm.h	/^	ITIMER_PROF	= 0x2,$/;"	e	enum:__anon24
ITIMER_REAL	runtime\defs_netbsd_arm.h	/^	ITIMER_REAL	= 0x0,$/;"	e	enum:__anon24
ITIMER_VIRTUAL	runtime\defs_netbsd_arm.h	/^	ITIMER_VIRTUAL	= 0x1,$/;"	e	enum:__anon24
Itimerval	runtime\defs_netbsd_arm.h	/^struct Itimerval {$/;"	s
Itimerval	runtime\defs_netbsd_arm.h	/^typedef struct Itimerval Itimerval;$/;"	t	typeref:struct:Itimerval
Kevent	runtime\defs_netbsd_arm.h	/^struct Kevent {$/;"	s
Kevent	runtime\defs_netbsd_arm.h	/^typedef struct Kevent Kevent;$/;"	t	typeref:struct:Kevent
MADV_FREE	runtime\defs_netbsd_arm.h	/^	MADV_FREE	= 0x6,$/;"	e	enum:__anon24
MAP_ANON	runtime\defs_netbsd_arm.h	/^	MAP_ANON	= 0x1000,$/;"	e	enum:__anon24
MAP_FIXED	runtime\defs_netbsd_arm.h	/^	MAP_FIXED	= 0x10,$/;"	e	enum:__anon24
MAP_PRIVATE	runtime\defs_netbsd_arm.h	/^	MAP_PRIVATE	= 0x2,$/;"	e	enum:__anon24
McontextT	runtime\defs_netbsd_arm.h	/^struct McontextT {$/;"	s
McontextT	runtime\defs_netbsd_arm.h	/^typedef struct McontextT McontextT;$/;"	t	typeref:struct:McontextT
PROT_EXEC	runtime\defs_netbsd_arm.h	/^	PROT_EXEC	= 0x4,$/;"	e	enum:__anon24
PROT_NONE	runtime\defs_netbsd_arm.h	/^	PROT_NONE	= 0x0,$/;"	e	enum:__anon24
PROT_READ	runtime\defs_netbsd_arm.h	/^	PROT_READ	= 0x1,$/;"	e	enum:__anon24
PROT_WRITE	runtime\defs_netbsd_arm.h	/^	PROT_WRITE	= 0x2,$/;"	e	enum:__anon24
REG_CPSR	runtime\defs_netbsd_arm.h	/^	REG_CPSR	= 0x10,$/;"	e	enum:__anon25
REG_R0	runtime\defs_netbsd_arm.h	/^	REG_R0		= 0x0,$/;"	e	enum:__anon25
REG_R1	runtime\defs_netbsd_arm.h	/^	REG_R1		= 0x1,$/;"	e	enum:__anon25
REG_R10	runtime\defs_netbsd_arm.h	/^	REG_R10		= 0xa,$/;"	e	enum:__anon25
REG_R11	runtime\defs_netbsd_arm.h	/^	REG_R11		= 0xb,$/;"	e	enum:__anon25
REG_R12	runtime\defs_netbsd_arm.h	/^	REG_R12		= 0xc,$/;"	e	enum:__anon25
REG_R13	runtime\defs_netbsd_arm.h	/^	REG_R13		= 0xd,$/;"	e	enum:__anon25
REG_R14	runtime\defs_netbsd_arm.h	/^	REG_R14		= 0xe,$/;"	e	enum:__anon25
REG_R15	runtime\defs_netbsd_arm.h	/^	REG_R15		= 0xf,$/;"	e	enum:__anon25
REG_R2	runtime\defs_netbsd_arm.h	/^	REG_R2		= 0x2,$/;"	e	enum:__anon25
REG_R3	runtime\defs_netbsd_arm.h	/^	REG_R3		= 0x3,$/;"	e	enum:__anon25
REG_R4	runtime\defs_netbsd_arm.h	/^	REG_R4		= 0x4,$/;"	e	enum:__anon25
REG_R5	runtime\defs_netbsd_arm.h	/^	REG_R5		= 0x5,$/;"	e	enum:__anon25
REG_R6	runtime\defs_netbsd_arm.h	/^	REG_R6		= 0x6,$/;"	e	enum:__anon25
REG_R7	runtime\defs_netbsd_arm.h	/^	REG_R7		= 0x7,$/;"	e	enum:__anon25
REG_R8	runtime\defs_netbsd_arm.h	/^	REG_R8		= 0x8,$/;"	e	enum:__anon25
REG_R9	runtime\defs_netbsd_arm.h	/^	REG_R9		= 0x9,$/;"	e	enum:__anon25
SA_ONSTACK	runtime\defs_netbsd_arm.h	/^	SA_ONSTACK	= 0x1,$/;"	e	enum:__anon24
SA_RESTART	runtime\defs_netbsd_arm.h	/^	SA_RESTART	= 0x2,$/;"	e	enum:__anon24
SA_SIGINFO	runtime\defs_netbsd_arm.h	/^	SA_SIGINFO	= 0x40,$/;"	e	enum:__anon24
SEGV_ACCERR	runtime\defs_netbsd_arm.h	/^	SEGV_ACCERR	= 0x2,$/;"	e	enum:__anon24
SEGV_MAPERR	runtime\defs_netbsd_arm.h	/^	SEGV_MAPERR	= 0x1,$/;"	e	enum:__anon24
SIGABRT	runtime\defs_netbsd_arm.h	/^	SIGABRT		= 0x6,$/;"	e	enum:__anon24
SIGALRM	runtime\defs_netbsd_arm.h	/^	SIGALRM		= 0xe,$/;"	e	enum:__anon24
SIGBUS	runtime\defs_netbsd_arm.h	/^	SIGBUS		= 0xa,$/;"	e	enum:__anon24
SIGCHLD	runtime\defs_netbsd_arm.h	/^	SIGCHLD		= 0x14,$/;"	e	enum:__anon24
SIGCONT	runtime\defs_netbsd_arm.h	/^	SIGCONT		= 0x13,$/;"	e	enum:__anon24
SIGEMT	runtime\defs_netbsd_arm.h	/^	SIGEMT		= 0x7,$/;"	e	enum:__anon24
SIGFPE	runtime\defs_netbsd_arm.h	/^	SIGFPE		= 0x8,$/;"	e	enum:__anon24
SIGHUP	runtime\defs_netbsd_arm.h	/^	SIGHUP		= 0x1,$/;"	e	enum:__anon24
SIGILL	runtime\defs_netbsd_arm.h	/^	SIGILL		= 0x4,$/;"	e	enum:__anon24
SIGINFO	runtime\defs_netbsd_arm.h	/^	SIGINFO		= 0x1d,$/;"	e	enum:__anon24
SIGINT	runtime\defs_netbsd_arm.h	/^	SIGINT		= 0x2,$/;"	e	enum:__anon24
SIGIO	runtime\defs_netbsd_arm.h	/^	SIGIO		= 0x17,$/;"	e	enum:__anon24
SIGKILL	runtime\defs_netbsd_arm.h	/^	SIGKILL		= 0x9,$/;"	e	enum:__anon24
SIGPIPE	runtime\defs_netbsd_arm.h	/^	SIGPIPE		= 0xd,$/;"	e	enum:__anon24
SIGPROF	runtime\defs_netbsd_arm.h	/^	SIGPROF		= 0x1b,$/;"	e	enum:__anon24
SIGQUIT	runtime\defs_netbsd_arm.h	/^	SIGQUIT		= 0x3,$/;"	e	enum:__anon24
SIGSEGV	runtime\defs_netbsd_arm.h	/^	SIGSEGV		= 0xb,$/;"	e	enum:__anon24
SIGSTOP	runtime\defs_netbsd_arm.h	/^	SIGSTOP		= 0x11,$/;"	e	enum:__anon24
SIGSYS	runtime\defs_netbsd_arm.h	/^	SIGSYS		= 0xc,$/;"	e	enum:__anon24
SIGTERM	runtime\defs_netbsd_arm.h	/^	SIGTERM		= 0xf,$/;"	e	enum:__anon24
SIGTRAP	runtime\defs_netbsd_arm.h	/^	SIGTRAP		= 0x5,$/;"	e	enum:__anon24
SIGTSTP	runtime\defs_netbsd_arm.h	/^	SIGTSTP		= 0x12,$/;"	e	enum:__anon24
SIGTTIN	runtime\defs_netbsd_arm.h	/^	SIGTTIN		= 0x15,$/;"	e	enum:__anon24
SIGTTOU	runtime\defs_netbsd_arm.h	/^	SIGTTOU		= 0x16,$/;"	e	enum:__anon24
SIGURG	runtime\defs_netbsd_arm.h	/^	SIGURG		= 0x10,$/;"	e	enum:__anon24
SIGUSR1	runtime\defs_netbsd_arm.h	/^	SIGUSR1		= 0x1e,$/;"	e	enum:__anon24
SIGUSR2	runtime\defs_netbsd_arm.h	/^	SIGUSR2		= 0x1f,$/;"	e	enum:__anon24
SIGVTALRM	runtime\defs_netbsd_arm.h	/^	SIGVTALRM	= 0x1a,$/;"	e	enum:__anon24
SIGWINCH	runtime\defs_netbsd_arm.h	/^	SIGWINCH	= 0x1c,$/;"	e	enum:__anon24
SIGXCPU	runtime\defs_netbsd_arm.h	/^	SIGXCPU		= 0x18,$/;"	e	enum:__anon24
SIGXFSZ	runtime\defs_netbsd_arm.h	/^	SIGXFSZ		= 0x19,$/;"	e	enum:__anon24
Sigaltstack	runtime\defs_netbsd_arm.h	/^struct Sigaltstack {$/;"	s
Sigaltstack	runtime\defs_netbsd_arm.h	/^typedef struct Sigaltstack Sigaltstack;$/;"	t	typeref:struct:Sigaltstack
Siginfo	runtime\defs_netbsd_arm.h	/^struct Siginfo {$/;"	s
Siginfo	runtime\defs_netbsd_arm.h	/^typedef struct Siginfo Siginfo;$/;"	t	typeref:struct:Siginfo
Sigset	runtime\defs_netbsd_arm.h	/^struct Sigset {$/;"	s
Sigset	runtime\defs_netbsd_arm.h	/^typedef struct Sigset Sigset;$/;"	t	typeref:struct:Sigset
StackT	runtime\defs_netbsd_arm.h	/^struct StackT {$/;"	s
StackT	runtime\defs_netbsd_arm.h	/^typedef struct StackT StackT;$/;"	t	typeref:struct:StackT
Timespec	runtime\defs_netbsd_arm.h	/^struct Timespec {$/;"	s
Timespec	runtime\defs_netbsd_arm.h	/^typedef struct Timespec Timespec;$/;"	t	typeref:struct:Timespec
Timeval	runtime\defs_netbsd_arm.h	/^struct Timeval {$/;"	s
Timeval	runtime\defs_netbsd_arm.h	/^typedef struct Timeval Timeval;$/;"	t	typeref:struct:Timeval
UcontextT	runtime\defs_netbsd_arm.h	/^struct UcontextT {$/;"	s
UcontextT	runtime\defs_netbsd_arm.h	/^typedef struct UcontextT UcontextT;$/;"	t	typeref:struct:UcontextT
__bits	runtime\defs_netbsd_arm.h	/^	uint32	__bits[4];$/;"	m	struct:Sigset
__fpu	runtime\defs_netbsd_arm.h	/^	byte	__fpu[4+4*33+4];$/;"	m	struct:McontextT
__fpu	runtime\defs_netbsd_arm.h	/^	byte	__fpu[4+8*32+4];$/;"	m	struct:McontextT
__gregs	runtime\defs_netbsd_arm.h	/^	uint32	__gregs[17];$/;"	m	struct:McontextT
__uc_pad	runtime\defs_netbsd_arm.h	/^	int32	__uc_pad[2];$/;"	m	struct:UcontextT
_code	runtime\defs_netbsd_arm.h	/^	int32	_code;$/;"	m	struct:Siginfo
_errno	runtime\defs_netbsd_arm.h	/^	int32	_errno;$/;"	m	struct:Siginfo
_mc_tlsbase	runtime\defs_netbsd_arm.h	/^	uint32	_mc_tlsbase;$/;"	m	struct:McontextT
_reason	runtime\defs_netbsd_arm.h	/^	byte	_reason[20];$/;"	m	struct:Siginfo
_signo	runtime\defs_netbsd_arm.h	/^	int32	_signo;$/;"	m	struct:Siginfo
data	runtime\defs_netbsd_arm.h	/^	int64	data;$/;"	m	struct:Kevent
fflags	runtime\defs_netbsd_arm.h	/^	uint32	fflags;$/;"	m	struct:Kevent
filter	runtime\defs_netbsd_arm.h	/^	uint32	filter;$/;"	m	struct:Kevent
flags	runtime\defs_netbsd_arm.h	/^	uint32	flags;$/;"	m	struct:Kevent
ident	runtime\defs_netbsd_arm.h	/^	uint32	ident;$/;"	m	struct:Kevent
it_interval	runtime\defs_netbsd_arm.h	/^	Timeval	it_interval;$/;"	m	struct:Itimerval
it_value	runtime\defs_netbsd_arm.h	/^	Timeval	it_value;$/;"	m	struct:Itimerval
ss_flags	runtime\defs_netbsd_arm.h	/^	int32	ss_flags;$/;"	m	struct:Sigaltstack
ss_flags	runtime\defs_netbsd_arm.h	/^	int32	ss_flags;$/;"	m	struct:StackT
ss_size	runtime\defs_netbsd_arm.h	/^	uint32	ss_size;$/;"	m	struct:Sigaltstack
ss_size	runtime\defs_netbsd_arm.h	/^	uint32	ss_size;$/;"	m	struct:StackT
ss_sp	runtime\defs_netbsd_arm.h	/^	byte	*ss_sp;$/;"	m	struct:Sigaltstack
ss_sp	runtime\defs_netbsd_arm.h	/^	byte	*ss_sp;$/;"	m	struct:StackT
tv_nsec	runtime\defs_netbsd_arm.h	/^	int32	tv_nsec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_netbsd_arm.h	/^	int64	tv_sec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_netbsd_arm.h	/^	int64	tv_sec;$/;"	m	struct:Timeval
tv_usec	runtime\defs_netbsd_arm.h	/^	int32	tv_usec;$/;"	m	struct:Timeval
uc_flags	runtime\defs_netbsd_arm.h	/^	uint32	uc_flags;$/;"	m	struct:UcontextT
uc_link	runtime\defs_netbsd_arm.h	/^	UcontextT	*uc_link;$/;"	m	struct:UcontextT
uc_mcontext	runtime\defs_netbsd_arm.h	/^	McontextT	uc_mcontext;$/;"	m	struct:UcontextT
uc_sigmask	runtime\defs_netbsd_arm.h	/^	Sigset	uc_sigmask;$/;"	m	struct:UcontextT
uc_stack	runtime\defs_netbsd_arm.h	/^	StackT	uc_stack;$/;"	m	struct:UcontextT
udata	runtime\defs_netbsd_arm.h	/^	int32	udata;$/;"	m	struct:Kevent
BUS_ADRALN	runtime\defs_openbsd_386.h	/^	BUS_ADRALN	= 0x1,$/;"	e	enum:__anon26
BUS_ADRERR	runtime\defs_openbsd_386.h	/^	BUS_ADRERR	= 0x2,$/;"	e	enum:__anon26
BUS_OBJERR	runtime\defs_openbsd_386.h	/^	BUS_OBJERR	= 0x3,$/;"	e	enum:__anon26
EFAULT	runtime\defs_openbsd_386.h	/^	EFAULT	= 0xe,$/;"	e	enum:__anon26
EINTR	runtime\defs_openbsd_386.h	/^	EINTR	= 0x4,$/;"	e	enum:__anon26
EVFILT_READ	runtime\defs_openbsd_386.h	/^	EVFILT_READ	= -0x1,$/;"	e	enum:__anon26
EVFILT_WRITE	runtime\defs_openbsd_386.h	/^	EVFILT_WRITE	= -0x2,$/;"	e	enum:__anon26
EV_ADD	runtime\defs_openbsd_386.h	/^	EV_ADD		= 0x1,$/;"	e	enum:__anon26
EV_CLEAR	runtime\defs_openbsd_386.h	/^	EV_CLEAR	= 0x20,$/;"	e	enum:__anon26
EV_DELETE	runtime\defs_openbsd_386.h	/^	EV_DELETE	= 0x2,$/;"	e	enum:__anon26
EV_ERROR	runtime\defs_openbsd_386.h	/^	EV_ERROR	= 0x4000,$/;"	e	enum:__anon26
FPE_FLTDIV	runtime\defs_openbsd_386.h	/^	FPE_FLTDIV	= 0x3,$/;"	e	enum:__anon26
FPE_FLTINV	runtime\defs_openbsd_386.h	/^	FPE_FLTINV	= 0x7,$/;"	e	enum:__anon26
FPE_FLTOVF	runtime\defs_openbsd_386.h	/^	FPE_FLTOVF	= 0x4,$/;"	e	enum:__anon26
FPE_FLTRES	runtime\defs_openbsd_386.h	/^	FPE_FLTRES	= 0x6,$/;"	e	enum:__anon26
FPE_FLTSUB	runtime\defs_openbsd_386.h	/^	FPE_FLTSUB	= 0x8,$/;"	e	enum:__anon26
FPE_FLTUND	runtime\defs_openbsd_386.h	/^	FPE_FLTUND	= 0x5,$/;"	e	enum:__anon26
FPE_INTDIV	runtime\defs_openbsd_386.h	/^	FPE_INTDIV	= 0x1,$/;"	e	enum:__anon26
FPE_INTOVF	runtime\defs_openbsd_386.h	/^	FPE_INTOVF	= 0x2,$/;"	e	enum:__anon26
ITIMER_PROF	runtime\defs_openbsd_386.h	/^	ITIMER_PROF	= 0x2,$/;"	e	enum:__anon26
ITIMER_REAL	runtime\defs_openbsd_386.h	/^	ITIMER_REAL	= 0x0,$/;"	e	enum:__anon26
ITIMER_VIRTUAL	runtime\defs_openbsd_386.h	/^	ITIMER_VIRTUAL	= 0x1,$/;"	e	enum:__anon26
Itimerval	runtime\defs_openbsd_386.h	/^struct Itimerval {$/;"	s
Itimerval	runtime\defs_openbsd_386.h	/^typedef struct Itimerval Itimerval;$/;"	t	typeref:struct:Itimerval
Kevent	runtime\defs_openbsd_386.h	/^struct Kevent {$/;"	s
Kevent	runtime\defs_openbsd_386.h	/^typedef struct Kevent Kevent;$/;"	t	typeref:struct:Kevent
MADV_FREE	runtime\defs_openbsd_386.h	/^	MADV_FREE	= 0x6,$/;"	e	enum:__anon26
MAP_ANON	runtime\defs_openbsd_386.h	/^	MAP_ANON	= 0x1000,$/;"	e	enum:__anon26
MAP_FIXED	runtime\defs_openbsd_386.h	/^	MAP_FIXED	= 0x10,$/;"	e	enum:__anon26
MAP_PRIVATE	runtime\defs_openbsd_386.h	/^	MAP_PRIVATE	= 0x2,$/;"	e	enum:__anon26
PROT_EXEC	runtime\defs_openbsd_386.h	/^	PROT_EXEC	= 0x4,$/;"	e	enum:__anon26
PROT_NONE	runtime\defs_openbsd_386.h	/^	PROT_NONE	= 0x0,$/;"	e	enum:__anon26
PROT_READ	runtime\defs_openbsd_386.h	/^	PROT_READ	= 0x1,$/;"	e	enum:__anon26
PROT_WRITE	runtime\defs_openbsd_386.h	/^	PROT_WRITE	= 0x2,$/;"	e	enum:__anon26
SA_ONSTACK	runtime\defs_openbsd_386.h	/^	SA_ONSTACK	= 0x1,$/;"	e	enum:__anon26
SA_RESTART	runtime\defs_openbsd_386.h	/^	SA_RESTART	= 0x2,$/;"	e	enum:__anon26
SA_SIGINFO	runtime\defs_openbsd_386.h	/^	SA_SIGINFO	= 0x40,$/;"	e	enum:__anon26
SEGV_ACCERR	runtime\defs_openbsd_386.h	/^	SEGV_ACCERR	= 0x2,$/;"	e	enum:__anon26
SEGV_MAPERR	runtime\defs_openbsd_386.h	/^	SEGV_MAPERR	= 0x1,$/;"	e	enum:__anon26
SIGABRT	runtime\defs_openbsd_386.h	/^	SIGABRT		= 0x6,$/;"	e	enum:__anon26
SIGALRM	runtime\defs_openbsd_386.h	/^	SIGALRM		= 0xe,$/;"	e	enum:__anon26
SIGBUS	runtime\defs_openbsd_386.h	/^	SIGBUS		= 0xa,$/;"	e	enum:__anon26
SIGCHLD	runtime\defs_openbsd_386.h	/^	SIGCHLD		= 0x14,$/;"	e	enum:__anon26
SIGCONT	runtime\defs_openbsd_386.h	/^	SIGCONT		= 0x13,$/;"	e	enum:__anon26
SIGEMT	runtime\defs_openbsd_386.h	/^	SIGEMT		= 0x7,$/;"	e	enum:__anon26
SIGFPE	runtime\defs_openbsd_386.h	/^	SIGFPE		= 0x8,$/;"	e	enum:__anon26
SIGHUP	runtime\defs_openbsd_386.h	/^	SIGHUP		= 0x1,$/;"	e	enum:__anon26
SIGILL	runtime\defs_openbsd_386.h	/^	SIGILL		= 0x4,$/;"	e	enum:__anon26
SIGINFO	runtime\defs_openbsd_386.h	/^	SIGINFO		= 0x1d,$/;"	e	enum:__anon26
SIGINT	runtime\defs_openbsd_386.h	/^	SIGINT		= 0x2,$/;"	e	enum:__anon26
SIGIO	runtime\defs_openbsd_386.h	/^	SIGIO		= 0x17,$/;"	e	enum:__anon26
SIGKILL	runtime\defs_openbsd_386.h	/^	SIGKILL		= 0x9,$/;"	e	enum:__anon26
SIGPIPE	runtime\defs_openbsd_386.h	/^	SIGPIPE		= 0xd,$/;"	e	enum:__anon26
SIGPROF	runtime\defs_openbsd_386.h	/^	SIGPROF		= 0x1b,$/;"	e	enum:__anon26
SIGQUIT	runtime\defs_openbsd_386.h	/^	SIGQUIT		= 0x3,$/;"	e	enum:__anon26
SIGSEGV	runtime\defs_openbsd_386.h	/^	SIGSEGV		= 0xb,$/;"	e	enum:__anon26
SIGSTOP	runtime\defs_openbsd_386.h	/^	SIGSTOP		= 0x11,$/;"	e	enum:__anon26
SIGSYS	runtime\defs_openbsd_386.h	/^	SIGSYS		= 0xc,$/;"	e	enum:__anon26
SIGTERM	runtime\defs_openbsd_386.h	/^	SIGTERM		= 0xf,$/;"	e	enum:__anon26
SIGTRAP	runtime\defs_openbsd_386.h	/^	SIGTRAP		= 0x5,$/;"	e	enum:__anon26
SIGTSTP	runtime\defs_openbsd_386.h	/^	SIGTSTP		= 0x12,$/;"	e	enum:__anon26
SIGTTIN	runtime\defs_openbsd_386.h	/^	SIGTTIN		= 0x15,$/;"	e	enum:__anon26
SIGTTOU	runtime\defs_openbsd_386.h	/^	SIGTTOU		= 0x16,$/;"	e	enum:__anon26
SIGURG	runtime\defs_openbsd_386.h	/^	SIGURG		= 0x10,$/;"	e	enum:__anon26
SIGUSR1	runtime\defs_openbsd_386.h	/^	SIGUSR1		= 0x1e,$/;"	e	enum:__anon26
SIGUSR2	runtime\defs_openbsd_386.h	/^	SIGUSR2		= 0x1f,$/;"	e	enum:__anon26
SIGVTALRM	runtime\defs_openbsd_386.h	/^	SIGVTALRM	= 0x1a,$/;"	e	enum:__anon26
SIGWINCH	runtime\defs_openbsd_386.h	/^	SIGWINCH	= 0x1c,$/;"	e	enum:__anon26
SIGXCPU	runtime\defs_openbsd_386.h	/^	SIGXCPU		= 0x18,$/;"	e	enum:__anon26
SIGXFSZ	runtime\defs_openbsd_386.h	/^	SIGXFSZ		= 0x19,$/;"	e	enum:__anon26
Sigaltstack	runtime\defs_openbsd_386.h	/^struct Sigaltstack {$/;"	s
Sigaltstack	runtime\defs_openbsd_386.h	/^typedef struct Sigaltstack Sigaltstack;$/;"	t	typeref:struct:Sigaltstack
Sigcontext	runtime\defs_openbsd_386.h	/^struct Sigcontext {$/;"	s
Sigcontext	runtime\defs_openbsd_386.h	/^typedef struct Sigcontext Sigcontext;$/;"	t	typeref:struct:Sigcontext
Siginfo	runtime\defs_openbsd_386.h	/^struct Siginfo {$/;"	s
Siginfo	runtime\defs_openbsd_386.h	/^typedef struct Siginfo Siginfo;$/;"	t	typeref:struct:Siginfo
Sigset	runtime\defs_openbsd_386.h	/^typedef	uint32	Sigset;$/;"	t
Sigval	runtime\defs_openbsd_386.h	/^typedef	byte	Sigval[4];$/;"	t
StackT	runtime\defs_openbsd_386.h	/^struct StackT {$/;"	s
StackT	runtime\defs_openbsd_386.h	/^typedef struct StackT StackT;$/;"	t	typeref:struct:StackT
Tfork	runtime\defs_openbsd_386.h	/^struct Tfork {$/;"	s
Tfork	runtime\defs_openbsd_386.h	/^typedef struct Tfork Tfork;$/;"	t	typeref:struct:Tfork
Timespec	runtime\defs_openbsd_386.h	/^struct Timespec {$/;"	s
Timespec	runtime\defs_openbsd_386.h	/^typedef struct Timespec Timespec;$/;"	t	typeref:struct:Timespec
Timeval	runtime\defs_openbsd_386.h	/^struct Timeval {$/;"	s
Timeval	runtime\defs_openbsd_386.h	/^typedef struct Timeval Timeval;$/;"	t	typeref:struct:Timeval
_data	runtime\defs_openbsd_386.h	/^	byte	_data[116];$/;"	m	struct:Siginfo
data	runtime\defs_openbsd_386.h	/^	int32	data;$/;"	m	struct:Kevent
fflags	runtime\defs_openbsd_386.h	/^	uint32	fflags;$/;"	m	struct:Kevent
filter	runtime\defs_openbsd_386.h	/^	int16	filter;$/;"	m	struct:Kevent
flags	runtime\defs_openbsd_386.h	/^	uint16	flags;$/;"	m	struct:Kevent
ident	runtime\defs_openbsd_386.h	/^	uint32	ident;$/;"	m	struct:Kevent
it_interval	runtime\defs_openbsd_386.h	/^	Timeval	it_interval;$/;"	m	struct:Itimerval
it_value	runtime\defs_openbsd_386.h	/^	Timeval	it_value;$/;"	m	struct:Itimerval
sc_cs	runtime\defs_openbsd_386.h	/^	int32	sc_cs;$/;"	m	struct:Sigcontext
sc_ds	runtime\defs_openbsd_386.h	/^	int32	sc_ds;$/;"	m	struct:Sigcontext
sc_eax	runtime\defs_openbsd_386.h	/^	int32	sc_eax;$/;"	m	struct:Sigcontext
sc_ebp	runtime\defs_openbsd_386.h	/^	int32	sc_ebp;$/;"	m	struct:Sigcontext
sc_ebx	runtime\defs_openbsd_386.h	/^	int32	sc_ebx;$/;"	m	struct:Sigcontext
sc_ecx	runtime\defs_openbsd_386.h	/^	int32	sc_ecx;$/;"	m	struct:Sigcontext
sc_edi	runtime\defs_openbsd_386.h	/^	int32	sc_edi;$/;"	m	struct:Sigcontext
sc_edx	runtime\defs_openbsd_386.h	/^	int32	sc_edx;$/;"	m	struct:Sigcontext
sc_eflags	runtime\defs_openbsd_386.h	/^	int32	sc_eflags;$/;"	m	struct:Sigcontext
sc_eip	runtime\defs_openbsd_386.h	/^	int32	sc_eip;$/;"	m	struct:Sigcontext
sc_err	runtime\defs_openbsd_386.h	/^	int32	sc_err;$/;"	m	struct:Sigcontext
sc_es	runtime\defs_openbsd_386.h	/^	int32	sc_es;$/;"	m	struct:Sigcontext
sc_esi	runtime\defs_openbsd_386.h	/^	int32	sc_esi;$/;"	m	struct:Sigcontext
sc_esp	runtime\defs_openbsd_386.h	/^	int32	sc_esp;$/;"	m	struct:Sigcontext
sc_fpstate	runtime\defs_openbsd_386.h	/^	void	*sc_fpstate;$/;"	m	struct:Sigcontext
sc_fs	runtime\defs_openbsd_386.h	/^	int32	sc_fs;$/;"	m	struct:Sigcontext
sc_gs	runtime\defs_openbsd_386.h	/^	int32	sc_gs;$/;"	m	struct:Sigcontext
sc_mask	runtime\defs_openbsd_386.h	/^	int32	sc_mask;$/;"	m	struct:Sigcontext
sc_onstack	runtime\defs_openbsd_386.h	/^	int32	sc_onstack;$/;"	m	struct:Sigcontext
sc_ss	runtime\defs_openbsd_386.h	/^	int32	sc_ss;$/;"	m	struct:Sigcontext
sc_trapno	runtime\defs_openbsd_386.h	/^	int32	sc_trapno;$/;"	m	struct:Sigcontext
si_code	runtime\defs_openbsd_386.h	/^	int32	si_code;$/;"	m	struct:Siginfo
si_errno	runtime\defs_openbsd_386.h	/^	int32	si_errno;$/;"	m	struct:Siginfo
si_signo	runtime\defs_openbsd_386.h	/^	int32	si_signo;$/;"	m	struct:Siginfo
ss_flags	runtime\defs_openbsd_386.h	/^	int32	ss_flags;$/;"	m	struct:Sigaltstack
ss_flags	runtime\defs_openbsd_386.h	/^	int32	ss_flags;$/;"	m	struct:StackT
ss_size	runtime\defs_openbsd_386.h	/^	uint32	ss_size;$/;"	m	struct:Sigaltstack
ss_size	runtime\defs_openbsd_386.h	/^	uint32	ss_size;$/;"	m	struct:StackT
ss_sp	runtime\defs_openbsd_386.h	/^	byte	*ss_sp;$/;"	m	struct:Sigaltstack
ss_sp	runtime\defs_openbsd_386.h	/^	byte	*ss_sp;$/;"	m	struct:StackT
tf_stack	runtime\defs_openbsd_386.h	/^	byte	*tf_stack;$/;"	m	struct:Tfork
tf_tcb	runtime\defs_openbsd_386.h	/^	byte	*tf_tcb;$/;"	m	struct:Tfork
tf_tid	runtime\defs_openbsd_386.h	/^	int32	*tf_tid;$/;"	m	struct:Tfork
tv_nsec	runtime\defs_openbsd_386.h	/^	int32	tv_nsec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_openbsd_386.h	/^	int32	tv_sec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_openbsd_386.h	/^	int32	tv_sec;$/;"	m	struct:Timeval
tv_usec	runtime\defs_openbsd_386.h	/^	int32	tv_usec;$/;"	m	struct:Timeval
udata	runtime\defs_openbsd_386.h	/^	byte	*udata;$/;"	m	struct:Kevent
BUS_ADRALN	runtime\defs_openbsd_amd64.h	/^	BUS_ADRALN	= 0x1,$/;"	e	enum:__anon27
BUS_ADRERR	runtime\defs_openbsd_amd64.h	/^	BUS_ADRERR	= 0x2,$/;"	e	enum:__anon27
BUS_OBJERR	runtime\defs_openbsd_amd64.h	/^	BUS_OBJERR	= 0x3,$/;"	e	enum:__anon27
EFAULT	runtime\defs_openbsd_amd64.h	/^	EFAULT	= 0xe,$/;"	e	enum:__anon27
EINTR	runtime\defs_openbsd_amd64.h	/^	EINTR	= 0x4,$/;"	e	enum:__anon27
EVFILT_READ	runtime\defs_openbsd_amd64.h	/^	EVFILT_READ	= -0x1,$/;"	e	enum:__anon27
EVFILT_WRITE	runtime\defs_openbsd_amd64.h	/^	EVFILT_WRITE	= -0x2,$/;"	e	enum:__anon27
EV_ADD	runtime\defs_openbsd_amd64.h	/^	EV_ADD		= 0x1,$/;"	e	enum:__anon27
EV_CLEAR	runtime\defs_openbsd_amd64.h	/^	EV_CLEAR	= 0x20,$/;"	e	enum:__anon27
EV_DELETE	runtime\defs_openbsd_amd64.h	/^	EV_DELETE	= 0x2,$/;"	e	enum:__anon27
EV_ERROR	runtime\defs_openbsd_amd64.h	/^	EV_ERROR	= 0x4000,$/;"	e	enum:__anon27
FPE_FLTDIV	runtime\defs_openbsd_amd64.h	/^	FPE_FLTDIV	= 0x3,$/;"	e	enum:__anon27
FPE_FLTINV	runtime\defs_openbsd_amd64.h	/^	FPE_FLTINV	= 0x7,$/;"	e	enum:__anon27
FPE_FLTOVF	runtime\defs_openbsd_amd64.h	/^	FPE_FLTOVF	= 0x4,$/;"	e	enum:__anon27
FPE_FLTRES	runtime\defs_openbsd_amd64.h	/^	FPE_FLTRES	= 0x6,$/;"	e	enum:__anon27
FPE_FLTSUB	runtime\defs_openbsd_amd64.h	/^	FPE_FLTSUB	= 0x8,$/;"	e	enum:__anon27
FPE_FLTUND	runtime\defs_openbsd_amd64.h	/^	FPE_FLTUND	= 0x5,$/;"	e	enum:__anon27
FPE_INTDIV	runtime\defs_openbsd_amd64.h	/^	FPE_INTDIV	= 0x1,$/;"	e	enum:__anon27
FPE_INTOVF	runtime\defs_openbsd_amd64.h	/^	FPE_INTOVF	= 0x2,$/;"	e	enum:__anon27
ITIMER_PROF	runtime\defs_openbsd_amd64.h	/^	ITIMER_PROF	= 0x2,$/;"	e	enum:__anon27
ITIMER_REAL	runtime\defs_openbsd_amd64.h	/^	ITIMER_REAL	= 0x0,$/;"	e	enum:__anon27
ITIMER_VIRTUAL	runtime\defs_openbsd_amd64.h	/^	ITIMER_VIRTUAL	= 0x1,$/;"	e	enum:__anon27
Itimerval	runtime\defs_openbsd_amd64.h	/^struct Itimerval {$/;"	s
Itimerval	runtime\defs_openbsd_amd64.h	/^typedef struct Itimerval Itimerval;$/;"	t	typeref:struct:Itimerval
Kevent	runtime\defs_openbsd_amd64.h	/^struct Kevent {$/;"	s
Kevent	runtime\defs_openbsd_amd64.h	/^typedef struct Kevent Kevent;$/;"	t	typeref:struct:Kevent
MADV_FREE	runtime\defs_openbsd_amd64.h	/^	MADV_FREE	= 0x6,$/;"	e	enum:__anon27
MAP_ANON	runtime\defs_openbsd_amd64.h	/^	MAP_ANON	= 0x1000,$/;"	e	enum:__anon27
MAP_FIXED	runtime\defs_openbsd_amd64.h	/^	MAP_FIXED	= 0x10,$/;"	e	enum:__anon27
MAP_PRIVATE	runtime\defs_openbsd_amd64.h	/^	MAP_PRIVATE	= 0x2,$/;"	e	enum:__anon27
PROT_EXEC	runtime\defs_openbsd_amd64.h	/^	PROT_EXEC	= 0x4,$/;"	e	enum:__anon27
PROT_NONE	runtime\defs_openbsd_amd64.h	/^	PROT_NONE	= 0x0,$/;"	e	enum:__anon27
PROT_READ	runtime\defs_openbsd_amd64.h	/^	PROT_READ	= 0x1,$/;"	e	enum:__anon27
PROT_WRITE	runtime\defs_openbsd_amd64.h	/^	PROT_WRITE	= 0x2,$/;"	e	enum:__anon27
Pad_cgo_0	runtime\defs_openbsd_amd64.h	/^	byte	Pad_cgo_0[4];$/;"	m	struct:Sigaltstack
Pad_cgo_0	runtime\defs_openbsd_amd64.h	/^	byte	Pad_cgo_0[4];$/;"	m	struct:Siginfo
Pad_cgo_0	runtime\defs_openbsd_amd64.h	/^	byte	Pad_cgo_0[4];$/;"	m	struct:StackT
Pad_cgo_0	runtime\defs_openbsd_amd64.h	/^	byte	Pad_cgo_0[4];$/;"	m	struct:Timespec
SA_ONSTACK	runtime\defs_openbsd_amd64.h	/^	SA_ONSTACK	= 0x1,$/;"	e	enum:__anon27
SA_RESTART	runtime\defs_openbsd_amd64.h	/^	SA_RESTART	= 0x2,$/;"	e	enum:__anon27
SA_SIGINFO	runtime\defs_openbsd_amd64.h	/^	SA_SIGINFO	= 0x40,$/;"	e	enum:__anon27
SEGV_ACCERR	runtime\defs_openbsd_amd64.h	/^	SEGV_ACCERR	= 0x2,$/;"	e	enum:__anon27
SEGV_MAPERR	runtime\defs_openbsd_amd64.h	/^	SEGV_MAPERR	= 0x1,$/;"	e	enum:__anon27
SIGABRT	runtime\defs_openbsd_amd64.h	/^	SIGABRT		= 0x6,$/;"	e	enum:__anon27
SIGALRM	runtime\defs_openbsd_amd64.h	/^	SIGALRM		= 0xe,$/;"	e	enum:__anon27
SIGBUS	runtime\defs_openbsd_amd64.h	/^	SIGBUS		= 0xa,$/;"	e	enum:__anon27
SIGCHLD	runtime\defs_openbsd_amd64.h	/^	SIGCHLD		= 0x14,$/;"	e	enum:__anon27
SIGCONT	runtime\defs_openbsd_amd64.h	/^	SIGCONT		= 0x13,$/;"	e	enum:__anon27
SIGEMT	runtime\defs_openbsd_amd64.h	/^	SIGEMT		= 0x7,$/;"	e	enum:__anon27
SIGFPE	runtime\defs_openbsd_amd64.h	/^	SIGFPE		= 0x8,$/;"	e	enum:__anon27
SIGHUP	runtime\defs_openbsd_amd64.h	/^	SIGHUP		= 0x1,$/;"	e	enum:__anon27
SIGILL	runtime\defs_openbsd_amd64.h	/^	SIGILL		= 0x4,$/;"	e	enum:__anon27
SIGINFO	runtime\defs_openbsd_amd64.h	/^	SIGINFO		= 0x1d,$/;"	e	enum:__anon27
SIGINT	runtime\defs_openbsd_amd64.h	/^	SIGINT		= 0x2,$/;"	e	enum:__anon27
SIGIO	runtime\defs_openbsd_amd64.h	/^	SIGIO		= 0x17,$/;"	e	enum:__anon27
SIGKILL	runtime\defs_openbsd_amd64.h	/^	SIGKILL		= 0x9,$/;"	e	enum:__anon27
SIGPIPE	runtime\defs_openbsd_amd64.h	/^	SIGPIPE		= 0xd,$/;"	e	enum:__anon27
SIGPROF	runtime\defs_openbsd_amd64.h	/^	SIGPROF		= 0x1b,$/;"	e	enum:__anon27
SIGQUIT	runtime\defs_openbsd_amd64.h	/^	SIGQUIT		= 0x3,$/;"	e	enum:__anon27
SIGSEGV	runtime\defs_openbsd_amd64.h	/^	SIGSEGV		= 0xb,$/;"	e	enum:__anon27
SIGSTOP	runtime\defs_openbsd_amd64.h	/^	SIGSTOP		= 0x11,$/;"	e	enum:__anon27
SIGSYS	runtime\defs_openbsd_amd64.h	/^	SIGSYS		= 0xc,$/;"	e	enum:__anon27
SIGTERM	runtime\defs_openbsd_amd64.h	/^	SIGTERM		= 0xf,$/;"	e	enum:__anon27
SIGTRAP	runtime\defs_openbsd_amd64.h	/^	SIGTRAP		= 0x5,$/;"	e	enum:__anon27
SIGTSTP	runtime\defs_openbsd_amd64.h	/^	SIGTSTP		= 0x12,$/;"	e	enum:__anon27
SIGTTIN	runtime\defs_openbsd_amd64.h	/^	SIGTTIN		= 0x15,$/;"	e	enum:__anon27
SIGTTOU	runtime\defs_openbsd_amd64.h	/^	SIGTTOU		= 0x16,$/;"	e	enum:__anon27
SIGURG	runtime\defs_openbsd_amd64.h	/^	SIGURG		= 0x10,$/;"	e	enum:__anon27
SIGUSR1	runtime\defs_openbsd_amd64.h	/^	SIGUSR1		= 0x1e,$/;"	e	enum:__anon27
SIGUSR2	runtime\defs_openbsd_amd64.h	/^	SIGUSR2		= 0x1f,$/;"	e	enum:__anon27
SIGVTALRM	runtime\defs_openbsd_amd64.h	/^	SIGVTALRM	= 0x1a,$/;"	e	enum:__anon27
SIGWINCH	runtime\defs_openbsd_amd64.h	/^	SIGWINCH	= 0x1c,$/;"	e	enum:__anon27
SIGXCPU	runtime\defs_openbsd_amd64.h	/^	SIGXCPU		= 0x18,$/;"	e	enum:__anon27
SIGXFSZ	runtime\defs_openbsd_amd64.h	/^	SIGXFSZ		= 0x19,$/;"	e	enum:__anon27
Sigaltstack	runtime\defs_openbsd_amd64.h	/^struct Sigaltstack {$/;"	s
Sigaltstack	runtime\defs_openbsd_amd64.h	/^typedef struct Sigaltstack Sigaltstack;$/;"	t	typeref:struct:Sigaltstack
Sigcontext	runtime\defs_openbsd_amd64.h	/^struct Sigcontext {$/;"	s
Sigcontext	runtime\defs_openbsd_amd64.h	/^typedef struct Sigcontext Sigcontext;$/;"	t	typeref:struct:Sigcontext
Siginfo	runtime\defs_openbsd_amd64.h	/^struct Siginfo {$/;"	s
Siginfo	runtime\defs_openbsd_amd64.h	/^typedef struct Siginfo Siginfo;$/;"	t	typeref:struct:Siginfo
Sigset	runtime\defs_openbsd_amd64.h	/^typedef	uint32	Sigset;$/;"	t
Sigval	runtime\defs_openbsd_amd64.h	/^typedef	byte	Sigval[8];$/;"	t
StackT	runtime\defs_openbsd_amd64.h	/^struct StackT {$/;"	s
StackT	runtime\defs_openbsd_amd64.h	/^typedef struct StackT StackT;$/;"	t	typeref:struct:StackT
Tfork	runtime\defs_openbsd_amd64.h	/^struct Tfork {$/;"	s
Tfork	runtime\defs_openbsd_amd64.h	/^typedef struct Tfork Tfork;$/;"	t	typeref:struct:Tfork
Timespec	runtime\defs_openbsd_amd64.h	/^struct Timespec {$/;"	s
Timespec	runtime\defs_openbsd_amd64.h	/^typedef struct Timespec Timespec;$/;"	t	typeref:struct:Timespec
Timeval	runtime\defs_openbsd_amd64.h	/^struct Timeval {$/;"	s
Timeval	runtime\defs_openbsd_amd64.h	/^typedef struct Timeval Timeval;$/;"	t	typeref:struct:Timeval
_data	runtime\defs_openbsd_amd64.h	/^	byte	_data[120];$/;"	m	struct:Siginfo
data	runtime\defs_openbsd_amd64.h	/^	int32	data;$/;"	m	struct:Kevent
fflags	runtime\defs_openbsd_amd64.h	/^	uint32	fflags;$/;"	m	struct:Kevent
filter	runtime\defs_openbsd_amd64.h	/^	int16	filter;$/;"	m	struct:Kevent
flags	runtime\defs_openbsd_amd64.h	/^	uint16	flags;$/;"	m	struct:Kevent
ident	runtime\defs_openbsd_amd64.h	/^	uint32	ident;$/;"	m	struct:Kevent
it_interval	runtime\defs_openbsd_amd64.h	/^	Timeval	it_interval;$/;"	m	struct:Itimerval
it_value	runtime\defs_openbsd_amd64.h	/^	Timeval	it_value;$/;"	m	struct:Itimerval
sc_cs	runtime\defs_openbsd_amd64.h	/^	int64	sc_cs;$/;"	m	struct:Sigcontext
sc_ds	runtime\defs_openbsd_amd64.h	/^	int64	sc_ds;$/;"	m	struct:Sigcontext
sc_err	runtime\defs_openbsd_amd64.h	/^	int64	sc_err;$/;"	m	struct:Sigcontext
sc_es	runtime\defs_openbsd_amd64.h	/^	int64	sc_es;$/;"	m	struct:Sigcontext
sc_fpstate	runtime\defs_openbsd_amd64.h	/^	void	*sc_fpstate;$/;"	m	struct:Sigcontext
sc_fs	runtime\defs_openbsd_amd64.h	/^	int64	sc_fs;$/;"	m	struct:Sigcontext
sc_gs	runtime\defs_openbsd_amd64.h	/^	int64	sc_gs;$/;"	m	struct:Sigcontext
sc_mask	runtime\defs_openbsd_amd64.h	/^	int32	sc_mask;$/;"	m	struct:Sigcontext
sc_onstack	runtime\defs_openbsd_amd64.h	/^	int32	sc_onstack;$/;"	m	struct:Sigcontext
sc_r10	runtime\defs_openbsd_amd64.h	/^	int64	sc_r10;$/;"	m	struct:Sigcontext
sc_r11	runtime\defs_openbsd_amd64.h	/^	int64	sc_r11;$/;"	m	struct:Sigcontext
sc_r12	runtime\defs_openbsd_amd64.h	/^	int64	sc_r12;$/;"	m	struct:Sigcontext
sc_r13	runtime\defs_openbsd_amd64.h	/^	int64	sc_r13;$/;"	m	struct:Sigcontext
sc_r14	runtime\defs_openbsd_amd64.h	/^	int64	sc_r14;$/;"	m	struct:Sigcontext
sc_r15	runtime\defs_openbsd_amd64.h	/^	int64	sc_r15;$/;"	m	struct:Sigcontext
sc_r8	runtime\defs_openbsd_amd64.h	/^	int64	sc_r8;$/;"	m	struct:Sigcontext
sc_r9	runtime\defs_openbsd_amd64.h	/^	int64	sc_r9;$/;"	m	struct:Sigcontext
sc_rax	runtime\defs_openbsd_amd64.h	/^	int64	sc_rax;$/;"	m	struct:Sigcontext
sc_rbp	runtime\defs_openbsd_amd64.h	/^	int64	sc_rbp;$/;"	m	struct:Sigcontext
sc_rbx	runtime\defs_openbsd_amd64.h	/^	int64	sc_rbx;$/;"	m	struct:Sigcontext
sc_rcx	runtime\defs_openbsd_amd64.h	/^	int64	sc_rcx;$/;"	m	struct:Sigcontext
sc_rdi	runtime\defs_openbsd_amd64.h	/^	int64	sc_rdi;$/;"	m	struct:Sigcontext
sc_rdx	runtime\defs_openbsd_amd64.h	/^	int64	sc_rdx;$/;"	m	struct:Sigcontext
sc_rflags	runtime\defs_openbsd_amd64.h	/^	int64	sc_rflags;$/;"	m	struct:Sigcontext
sc_rip	runtime\defs_openbsd_amd64.h	/^	int64	sc_rip;$/;"	m	struct:Sigcontext
sc_rsi	runtime\defs_openbsd_amd64.h	/^	int64	sc_rsi;$/;"	m	struct:Sigcontext
sc_rsp	runtime\defs_openbsd_amd64.h	/^	int64	sc_rsp;$/;"	m	struct:Sigcontext
sc_ss	runtime\defs_openbsd_amd64.h	/^	int64	sc_ss;$/;"	m	struct:Sigcontext
sc_trapno	runtime\defs_openbsd_amd64.h	/^	int64	sc_trapno;$/;"	m	struct:Sigcontext
si_code	runtime\defs_openbsd_amd64.h	/^	int32	si_code;$/;"	m	struct:Siginfo
si_errno	runtime\defs_openbsd_amd64.h	/^	int32	si_errno;$/;"	m	struct:Siginfo
si_signo	runtime\defs_openbsd_amd64.h	/^	int32	si_signo;$/;"	m	struct:Siginfo
ss_flags	runtime\defs_openbsd_amd64.h	/^	int32	ss_flags;$/;"	m	struct:Sigaltstack
ss_flags	runtime\defs_openbsd_amd64.h	/^	int32	ss_flags;$/;"	m	struct:StackT
ss_size	runtime\defs_openbsd_amd64.h	/^	uint64	ss_size;$/;"	m	struct:Sigaltstack
ss_size	runtime\defs_openbsd_amd64.h	/^	uint64	ss_size;$/;"	m	struct:StackT
ss_sp	runtime\defs_openbsd_amd64.h	/^	byte	*ss_sp;$/;"	m	struct:Sigaltstack
ss_sp	runtime\defs_openbsd_amd64.h	/^	byte	*ss_sp;$/;"	m	struct:StackT
tf_stack	runtime\defs_openbsd_amd64.h	/^	byte	*tf_stack;$/;"	m	struct:Tfork
tf_tcb	runtime\defs_openbsd_amd64.h	/^	byte	*tf_tcb;$/;"	m	struct:Tfork
tf_tid	runtime\defs_openbsd_amd64.h	/^	int32	*tf_tid;$/;"	m	struct:Tfork
tv_nsec	runtime\defs_openbsd_amd64.h	/^	int64	tv_nsec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_openbsd_amd64.h	/^	int32	tv_sec;$/;"	m	struct:Timespec
tv_sec	runtime\defs_openbsd_amd64.h	/^	int64	tv_sec;$/;"	m	struct:Timeval
tv_usec	runtime\defs_openbsd_amd64.h	/^	int64	tv_usec;$/;"	m	struct:Timeval
udata	runtime\defs_openbsd_amd64.h	/^	byte	*udata;$/;"	m	struct:Kevent
PAGESIZE	runtime\defs_plan9_386.h	1;"	d
Ureg	runtime\defs_plan9_386.h	/^struct Ureg$/;"	s
Ureg	runtime\defs_plan9_386.h	/^typedef struct Ureg Ureg;$/;"	t	typeref:struct:Ureg
ax	runtime\defs_plan9_386.h	/^	uint32	ax;		\/* ... *\/$/;"	m	struct:Ureg
bp	runtime\defs_plan9_386.h	/^	uint32	bp;		\/* ... *\/$/;"	m	struct:Ureg
bx	runtime\defs_plan9_386.h	/^	uint32	bx;		\/* ... *\/$/;"	m	struct:Ureg
cs	runtime\defs_plan9_386.h	/^	uint32	cs;		\/* old context *\/$/;"	m	struct:Ureg
cx	runtime\defs_plan9_386.h	/^	uint32	cx;		\/* ... *\/$/;"	m	struct:Ureg
di	runtime\defs_plan9_386.h	/^	uint32	di;		\/* general registers *\/$/;"	m	struct:Ureg
ds	runtime\defs_plan9_386.h	/^	uint32	ds;		\/* ... *\/$/;"	m	struct:Ureg
dx	runtime\defs_plan9_386.h	/^	uint32	dx;		\/* ... *\/$/;"	m	struct:Ureg
ecode	runtime\defs_plan9_386.h	/^	uint32	ecode;		\/* error code (or zero) *\/$/;"	m	struct:Ureg
es	runtime\defs_plan9_386.h	/^	uint32	es;		\/* ... *\/$/;"	m	struct:Ureg
flags	runtime\defs_plan9_386.h	/^	uint32	flags;		\/* old flags *\/$/;"	m	struct:Ureg
fs	runtime\defs_plan9_386.h	/^	uint32	fs;		\/* ... *\/$/;"	m	struct:Ureg
gs	runtime\defs_plan9_386.h	/^	uint32	gs;		\/* data segments *\/$/;"	m	struct:Ureg
nsp	runtime\defs_plan9_386.h	/^	uint32	nsp;$/;"	m	struct:Ureg
pc	runtime\defs_plan9_386.h	/^	uint32	pc;		\/* pc *\/$/;"	m	struct:Ureg
si	runtime\defs_plan9_386.h	/^	uint32	si;		\/* ... *\/$/;"	m	struct:Ureg
sp	runtime\defs_plan9_386.h	/^		uint32	sp;$/;"	m	union:Ureg::__anon28
ss	runtime\defs_plan9_386.h	/^	uint32	ss;		\/* old stack segment *\/$/;"	m	struct:Ureg
trap	runtime\defs_plan9_386.h	/^	uint32	trap;		\/* trap type *\/$/;"	m	struct:Ureg
usp	runtime\defs_plan9_386.h	/^		uint32	usp;$/;"	m	union:Ureg::__anon28
PAGESIZE	runtime\defs_plan9_amd64.h	1;"	d
Ureg	runtime\defs_plan9_amd64.h	/^struct Ureg {$/;"	s
Ureg	runtime\defs_plan9_amd64.h	/^typedef struct Ureg Ureg;$/;"	t	typeref:struct:Ureg
ax	runtime\defs_plan9_amd64.h	/^	uint64	ax;$/;"	m	struct:Ureg
bp	runtime\defs_plan9_amd64.h	/^	uint64	bp;$/;"	m	struct:Ureg
bx	runtime\defs_plan9_amd64.h	/^	uint64	bx;$/;"	m	struct:Ureg
cs	runtime\defs_plan9_amd64.h	/^	uint64	cs;				\/* old context *\/$/;"	m	struct:Ureg
cx	runtime\defs_plan9_amd64.h	/^	uint64	cx;$/;"	m	struct:Ureg
di	runtime\defs_plan9_amd64.h	/^	uint64	di;$/;"	m	struct:Ureg
ds	runtime\defs_plan9_amd64.h	/^	uint16	ds;$/;"	m	struct:Ureg
dx	runtime\defs_plan9_amd64.h	/^	uint64	dx;$/;"	m	struct:Ureg
error	runtime\defs_plan9_amd64.h	/^	uint64	error;				\/* error code (or zero) *\/$/;"	m	struct:Ureg
es	runtime\defs_plan9_amd64.h	/^	uint16	es;$/;"	m	struct:Ureg
flags	runtime\defs_plan9_amd64.h	/^	uint64	flags;				\/* old flags *\/$/;"	m	struct:Ureg
fs	runtime\defs_plan9_amd64.h	/^	uint16	fs;$/;"	m	struct:Ureg
gs	runtime\defs_plan9_amd64.h	/^	uint16	gs;$/;"	m	struct:Ureg
ip	runtime\defs_plan9_amd64.h	/^	uint64	ip;				\/* pc *\/$/;"	m	struct:Ureg
r10	runtime\defs_plan9_amd64.h	/^	uint64	r10;$/;"	m	struct:Ureg
r11	runtime\defs_plan9_amd64.h	/^	uint64	r11;$/;"	m	struct:Ureg
r12	runtime\defs_plan9_amd64.h	/^	uint64	r12;$/;"	m	struct:Ureg
r13	runtime\defs_plan9_amd64.h	/^	uint64	r13;$/;"	m	struct:Ureg
r14	runtime\defs_plan9_amd64.h	/^	uint64	r14;$/;"	m	struct:Ureg
r15	runtime\defs_plan9_amd64.h	/^	uint64	r15;$/;"	m	struct:Ureg
r8	runtime\defs_plan9_amd64.h	/^	uint64	r8;$/;"	m	struct:Ureg
r9	runtime\defs_plan9_amd64.h	/^	uint64	r9;$/;"	m	struct:Ureg
si	runtime\defs_plan9_amd64.h	/^	uint64	si;$/;"	m	struct:Ureg
sp	runtime\defs_plan9_amd64.h	/^	uint64	sp;				\/* sp *\/$/;"	m	struct:Ureg
ss	runtime\defs_plan9_amd64.h	/^	uint64	ss;				\/* old stack segment *\/$/;"	m	struct:Ureg
type	runtime\defs_plan9_amd64.h	/^	uint64	type;$/;"	m	struct:Ureg
CONTEXT_CONTROL	runtime\defs_windows_386.h	/^	CONTEXT_CONTROL	= 0x10001,$/;"	e	enum:__anon29
CONTEXT_FULL	runtime\defs_windows_386.h	/^	CONTEXT_FULL	= 0x10007,$/;"	e	enum:__anon29
CTRL_BREAK_EVENT	runtime\defs_windows_386.h	/^	CTRL_BREAK_EVENT	= 0x1,$/;"	e	enum:__anon29
CTRL_C_EVENT	runtime\defs_windows_386.h	/^	CTRL_C_EVENT		= 0x0,$/;"	e	enum:__anon29
Context	runtime\defs_windows_386.h	/^struct Context {$/;"	s
Context	runtime\defs_windows_386.h	/^typedef struct Context Context;$/;"	t	typeref:struct:Context
ContextFlags	runtime\defs_windows_386.h	/^	uint32	ContextFlags;$/;"	m	struct:Context
ControlWord	runtime\defs_windows_386.h	/^	uint32	ControlWord;$/;"	m	struct:FloatingSaveArea
Cr0NpxState	runtime\defs_windows_386.h	/^	uint32	Cr0NpxState;$/;"	m	struct:FloatingSaveArea
DUPLICATE_SAME_ACCESS	runtime\defs_windows_386.h	/^	DUPLICATE_SAME_ACCESS	= 0x2,$/;"	e	enum:__anon29
DataOffset	runtime\defs_windows_386.h	/^	uint32	DataOffset;$/;"	m	struct:FloatingSaveArea
DataSelector	runtime\defs_windows_386.h	/^	uint32	DataSelector;$/;"	m	struct:FloatingSaveArea
Dr0	runtime\defs_windows_386.h	/^	uint32	Dr0;$/;"	m	struct:Context
Dr1	runtime\defs_windows_386.h	/^	uint32	Dr1;$/;"	m	struct:Context
Dr2	runtime\defs_windows_386.h	/^	uint32	Dr2;$/;"	m	struct:Context
Dr3	runtime\defs_windows_386.h	/^	uint32	Dr3;$/;"	m	struct:Context
Dr6	runtime\defs_windows_386.h	/^	uint32	Dr6;$/;"	m	struct:Context
Dr7	runtime\defs_windows_386.h	/^	uint32	Dr7;$/;"	m	struct:Context
EFlags	runtime\defs_windows_386.h	/^	uint32	EFlags;$/;"	m	struct:Context
EXCEPTION_ACCESS_VIOLATION	runtime\defs_windows_386.h	/^	EXCEPTION_ACCESS_VIOLATION	= 0xc0000005,$/;"	e	enum:__anon29
EXCEPTION_BREAKPOINT	runtime\defs_windows_386.h	/^	EXCEPTION_BREAKPOINT		= 0x80000003,$/;"	e	enum:__anon29
EXCEPTION_FLT_DENORMAL_OPERAND	runtime\defs_windows_386.h	/^	EXCEPTION_FLT_DENORMAL_OPERAND	= 0xc000008d,$/;"	e	enum:__anon29
EXCEPTION_FLT_DIVIDE_BY_ZERO	runtime\defs_windows_386.h	/^	EXCEPTION_FLT_DIVIDE_BY_ZERO	= 0xc000008e,$/;"	e	enum:__anon29
EXCEPTION_FLT_INEXACT_RESULT	runtime\defs_windows_386.h	/^	EXCEPTION_FLT_INEXACT_RESULT	= 0xc000008f,$/;"	e	enum:__anon29
EXCEPTION_FLT_OVERFLOW	runtime\defs_windows_386.h	/^	EXCEPTION_FLT_OVERFLOW		= 0xc0000091,$/;"	e	enum:__anon29
EXCEPTION_FLT_UNDERFLOW	runtime\defs_windows_386.h	/^	EXCEPTION_FLT_UNDERFLOW		= 0xc0000093,$/;"	e	enum:__anon29
EXCEPTION_INT_DIVIDE_BY_ZERO	runtime\defs_windows_386.h	/^	EXCEPTION_INT_DIVIDE_BY_ZERO	= 0xc0000094,$/;"	e	enum:__anon29
EXCEPTION_INT_OVERFLOW	runtime\defs_windows_386.h	/^	EXCEPTION_INT_OVERFLOW		= 0xc0000095,$/;"	e	enum:__anon29
Eax	runtime\defs_windows_386.h	/^	uint32	Eax;$/;"	m	struct:Context
Ebp	runtime\defs_windows_386.h	/^	uint32	Ebp;$/;"	m	struct:Context
Ebx	runtime\defs_windows_386.h	/^	uint32	Ebx;$/;"	m	struct:Context
Ecx	runtime\defs_windows_386.h	/^	uint32	Ecx;$/;"	m	struct:Context
Edi	runtime\defs_windows_386.h	/^	uint32	Edi;$/;"	m	struct:Context
Edx	runtime\defs_windows_386.h	/^	uint32	Edx;$/;"	m	struct:Context
Eip	runtime\defs_windows_386.h	/^	uint32	Eip;$/;"	m	struct:Context
ErrorOffset	runtime\defs_windows_386.h	/^	uint32	ErrorOffset;$/;"	m	struct:FloatingSaveArea
ErrorSelector	runtime\defs_windows_386.h	/^	uint32	ErrorSelector;$/;"	m	struct:FloatingSaveArea
Esi	runtime\defs_windows_386.h	/^	uint32	Esi;$/;"	m	struct:Context
Esp	runtime\defs_windows_386.h	/^	uint32	Esp;$/;"	m	struct:Context
ExceptionAddress	runtime\defs_windows_386.h	/^	byte	*ExceptionAddress;$/;"	m	struct:ExceptionRecord
ExceptionCode	runtime\defs_windows_386.h	/^	uint32	ExceptionCode;$/;"	m	struct:ExceptionRecord
ExceptionFlags	runtime\defs_windows_386.h	/^	uint32	ExceptionFlags;$/;"	m	struct:ExceptionRecord
ExceptionInformation	runtime\defs_windows_386.h	/^	uint32	ExceptionInformation[15];$/;"	m	struct:ExceptionRecord
ExceptionRecord	runtime\defs_windows_386.h	/^	ExceptionRecord	*ExceptionRecord;$/;"	m	struct:ExceptionRecord
ExceptionRecord	runtime\defs_windows_386.h	/^struct ExceptionRecord {$/;"	s
ExceptionRecord	runtime\defs_windows_386.h	/^typedef struct ExceptionRecord ExceptionRecord;$/;"	t	typeref:struct:ExceptionRecord
ExtendedRegisters	runtime\defs_windows_386.h	/^	uint8	ExtendedRegisters[512];$/;"	m	struct:Context
FloatSave	runtime\defs_windows_386.h	/^	FloatingSaveArea	FloatSave;$/;"	m	struct:Context
FloatingSaveArea	runtime\defs_windows_386.h	/^struct FloatingSaveArea {$/;"	s
FloatingSaveArea	runtime\defs_windows_386.h	/^typedef struct FloatingSaveArea FloatingSaveArea;$/;"	t	typeref:struct:FloatingSaveArea
INFINITE	runtime\defs_windows_386.h	/^	INFINITE	= 0xffffffff,$/;"	e	enum:__anon29
Internal	runtime\defs_windows_386.h	/^	uint32	Internal;$/;"	m	struct:Overlapped
InternalHigh	runtime\defs_windows_386.h	/^	uint32	InternalHigh;$/;"	m	struct:Overlapped
M128a	runtime\defs_windows_386.h	/^typedef struct M128a M128a;$/;"	t	typeref:struct:M128a
MAP_ANON	runtime\defs_windows_386.h	/^	MAP_ANON	= 1,$/;"	e	enum:__anon29
MAP_PRIVATE	runtime\defs_windows_386.h	/^	MAP_PRIVATE	= 2,$/;"	e	enum:__anon29
NumberParameters	runtime\defs_windows_386.h	/^	uint32	NumberParameters;$/;"	m	struct:ExceptionRecord
Overlapped	runtime\defs_windows_386.h	/^struct Overlapped {$/;"	s
Overlapped	runtime\defs_windows_386.h	/^typedef struct Overlapped Overlapped;$/;"	t	typeref:struct:Overlapped
PROT_EXEC	runtime\defs_windows_386.h	/^	PROT_EXEC	= 4,$/;"	e	enum:__anon29
PROT_NONE	runtime\defs_windows_386.h	/^	PROT_NONE	= 0,$/;"	e	enum:__anon29
PROT_READ	runtime\defs_windows_386.h	/^	PROT_READ	= 1,$/;"	e	enum:__anon29
PROT_WRITE	runtime\defs_windows_386.h	/^	PROT_WRITE	= 2,$/;"	e	enum:__anon29
RegisterArea	runtime\defs_windows_386.h	/^	uint8	RegisterArea[80];$/;"	m	struct:FloatingSaveArea
SIGINT	runtime\defs_windows_386.h	/^	SIGINT			= 0x2,$/;"	e	enum:__anon29
SegCs	runtime\defs_windows_386.h	/^	uint32	SegCs;$/;"	m	struct:Context
SegDs	runtime\defs_windows_386.h	/^	uint32	SegDs;$/;"	m	struct:Context
SegEs	runtime\defs_windows_386.h	/^	uint32	SegEs;$/;"	m	struct:Context
SegFs	runtime\defs_windows_386.h	/^	uint32	SegFs;$/;"	m	struct:Context
SegGs	runtime\defs_windows_386.h	/^	uint32	SegGs;$/;"	m	struct:Context
SegSs	runtime\defs_windows_386.h	/^	uint32	SegSs;$/;"	m	struct:Context
StatusWord	runtime\defs_windows_386.h	/^	uint32	StatusWord;$/;"	m	struct:FloatingSaveArea
SystemInfo	runtime\defs_windows_386.h	/^struct SystemInfo {$/;"	s
SystemInfo	runtime\defs_windows_386.h	/^typedef struct SystemInfo SystemInfo;$/;"	t	typeref:struct:SystemInfo
THREAD_PRIORITY_HIGHEST	runtime\defs_windows_386.h	/^	THREAD_PRIORITY_HIGHEST	= 0x2,$/;"	e	enum:__anon29
TagWord	runtime\defs_windows_386.h	/^	uint32	TagWord;$/;"	m	struct:FloatingSaveArea
WAIT_TIMEOUT	runtime\defs_windows_386.h	/^	WAIT_TIMEOUT	= 0x102,$/;"	e	enum:__anon29
anon0	runtime\defs_windows_386.h	/^	byte	anon0[4];$/;"	m	struct:SystemInfo
anon0	runtime\defs_windows_386.h	/^	byte	anon0[8];$/;"	m	struct:Overlapped
dwActiveProcessorMask	runtime\defs_windows_386.h	/^	uint32	dwActiveProcessorMask;$/;"	m	struct:SystemInfo
dwAllocationGranularity	runtime\defs_windows_386.h	/^	uint32	dwAllocationGranularity;$/;"	m	struct:SystemInfo
dwNumberOfProcessors	runtime\defs_windows_386.h	/^	uint32	dwNumberOfProcessors;$/;"	m	struct:SystemInfo
dwPageSize	runtime\defs_windows_386.h	/^	uint32	dwPageSize;$/;"	m	struct:SystemInfo
dwProcessorType	runtime\defs_windows_386.h	/^	uint32	dwProcessorType;$/;"	m	struct:SystemInfo
hEvent	runtime\defs_windows_386.h	/^	byte	*hEvent;$/;"	m	struct:Overlapped
lpMaximumApplicationAddress	runtime\defs_windows_386.h	/^	byte	*lpMaximumApplicationAddress;$/;"	m	struct:SystemInfo
lpMinimumApplicationAddress	runtime\defs_windows_386.h	/^	byte	*lpMinimumApplicationAddress;$/;"	m	struct:SystemInfo
wProcessorLevel	runtime\defs_windows_386.h	/^	uint16	wProcessorLevel;$/;"	m	struct:SystemInfo
wProcessorRevision	runtime\defs_windows_386.h	/^	uint16	wProcessorRevision;$/;"	m	struct:SystemInfo
CONTEXT_CONTROL	runtime\defs_windows_amd64.h	/^	CONTEXT_CONTROL	= 0x100001,$/;"	e	enum:__anon30
CONTEXT_FULL	runtime\defs_windows_amd64.h	/^	CONTEXT_FULL	= 0x10000b,$/;"	e	enum:__anon30
CTRL_BREAK_EVENT	runtime\defs_windows_amd64.h	/^	CTRL_BREAK_EVENT	= 0x1,$/;"	e	enum:__anon30
CTRL_C_EVENT	runtime\defs_windows_amd64.h	/^	CTRL_C_EVENT		= 0x0,$/;"	e	enum:__anon30
Context	runtime\defs_windows_amd64.h	/^struct Context {$/;"	s
Context	runtime\defs_windows_amd64.h	/^typedef struct Context Context;$/;"	t	typeref:struct:Context
ContextFlags	runtime\defs_windows_amd64.h	/^	uint32	ContextFlags;$/;"	m	struct:Context
DUPLICATE_SAME_ACCESS	runtime\defs_windows_amd64.h	/^	DUPLICATE_SAME_ACCESS	= 0x2,$/;"	e	enum:__anon30
DebugControl	runtime\defs_windows_amd64.h	/^	uint64	DebugControl;$/;"	m	struct:Context
Dr0	runtime\defs_windows_amd64.h	/^	uint64	Dr0;$/;"	m	struct:Context
Dr1	runtime\defs_windows_amd64.h	/^	uint64	Dr1;$/;"	m	struct:Context
Dr2	runtime\defs_windows_amd64.h	/^	uint64	Dr2;$/;"	m	struct:Context
Dr3	runtime\defs_windows_amd64.h	/^	uint64	Dr3;$/;"	m	struct:Context
Dr6	runtime\defs_windows_amd64.h	/^	uint64	Dr6;$/;"	m	struct:Context
Dr7	runtime\defs_windows_amd64.h	/^	uint64	Dr7;$/;"	m	struct:Context
EFlags	runtime\defs_windows_amd64.h	/^	uint32	EFlags;$/;"	m	struct:Context
EXCEPTION_ACCESS_VIOLATION	runtime\defs_windows_amd64.h	/^	EXCEPTION_ACCESS_VIOLATION	= 0xc0000005,$/;"	e	enum:__anon30
EXCEPTION_BREAKPOINT	runtime\defs_windows_amd64.h	/^	EXCEPTION_BREAKPOINT		= 0x80000003,$/;"	e	enum:__anon30
EXCEPTION_FLT_DENORMAL_OPERAND	runtime\defs_windows_amd64.h	/^	EXCEPTION_FLT_DENORMAL_OPERAND	= 0xc000008d,$/;"	e	enum:__anon30
EXCEPTION_FLT_DIVIDE_BY_ZERO	runtime\defs_windows_amd64.h	/^	EXCEPTION_FLT_DIVIDE_BY_ZERO	= 0xc000008e,$/;"	e	enum:__anon30
EXCEPTION_FLT_INEXACT_RESULT	runtime\defs_windows_amd64.h	/^	EXCEPTION_FLT_INEXACT_RESULT	= 0xc000008f,$/;"	e	enum:__anon30
EXCEPTION_FLT_OVERFLOW	runtime\defs_windows_amd64.h	/^	EXCEPTION_FLT_OVERFLOW		= 0xc0000091,$/;"	e	enum:__anon30
EXCEPTION_FLT_UNDERFLOW	runtime\defs_windows_amd64.h	/^	EXCEPTION_FLT_UNDERFLOW		= 0xc0000093,$/;"	e	enum:__anon30
EXCEPTION_INT_DIVIDE_BY_ZERO	runtime\defs_windows_amd64.h	/^	EXCEPTION_INT_DIVIDE_BY_ZERO	= 0xc0000094,$/;"	e	enum:__anon30
EXCEPTION_INT_OVERFLOW	runtime\defs_windows_amd64.h	/^	EXCEPTION_INT_OVERFLOW		= 0xc0000095,$/;"	e	enum:__anon30
ExceptionAddress	runtime\defs_windows_amd64.h	/^	byte	*ExceptionAddress;$/;"	m	struct:ExceptionRecord
ExceptionCode	runtime\defs_windows_amd64.h	/^	uint32	ExceptionCode;$/;"	m	struct:ExceptionRecord
ExceptionFlags	runtime\defs_windows_amd64.h	/^	uint32	ExceptionFlags;$/;"	m	struct:ExceptionRecord
ExceptionInformation	runtime\defs_windows_amd64.h	/^	uint64	ExceptionInformation[15];$/;"	m	struct:ExceptionRecord
ExceptionRecord	runtime\defs_windows_amd64.h	/^	ExceptionRecord	*ExceptionRecord;$/;"	m	struct:ExceptionRecord
ExceptionRecord	runtime\defs_windows_amd64.h	/^struct ExceptionRecord {$/;"	s
ExceptionRecord	runtime\defs_windows_amd64.h	/^typedef struct ExceptionRecord ExceptionRecord;$/;"	t	typeref:struct:ExceptionRecord
FloatingSaveArea	runtime\defs_windows_amd64.h	/^typedef struct FloatingSaveArea FloatingSaveArea;$/;"	t	typeref:struct:FloatingSaveArea
High	runtime\defs_windows_amd64.h	/^	int64	High;$/;"	m	struct:M128a
INFINITE	runtime\defs_windows_amd64.h	/^	INFINITE	= 0xffffffff,$/;"	e	enum:__anon30
Internal	runtime\defs_windows_amd64.h	/^	uint64	Internal;$/;"	m	struct:Overlapped
InternalHigh	runtime\defs_windows_amd64.h	/^	uint64	InternalHigh;$/;"	m	struct:Overlapped
LastBranchFromRip	runtime\defs_windows_amd64.h	/^	uint64	LastBranchFromRip;$/;"	m	struct:Context
LastBranchToRip	runtime\defs_windows_amd64.h	/^	uint64	LastBranchToRip;$/;"	m	struct:Context
LastExceptionFromRip	runtime\defs_windows_amd64.h	/^	uint64	LastExceptionFromRip;$/;"	m	struct:Context
LastExceptionToRip	runtime\defs_windows_amd64.h	/^	uint64	LastExceptionToRip;$/;"	m	struct:Context
Low	runtime\defs_windows_amd64.h	/^	uint64	Low;$/;"	m	struct:M128a
M128a	runtime\defs_windows_amd64.h	/^struct M128a {$/;"	s
M128a	runtime\defs_windows_amd64.h	/^typedef struct M128a M128a;$/;"	t	typeref:struct:M128a
MAP_ANON	runtime\defs_windows_amd64.h	/^	MAP_ANON	= 1,$/;"	e	enum:__anon30
MAP_PRIVATE	runtime\defs_windows_amd64.h	/^	MAP_PRIVATE	= 2,$/;"	e	enum:__anon30
MxCsr	runtime\defs_windows_amd64.h	/^	uint32	MxCsr;$/;"	m	struct:Context
NumberParameters	runtime\defs_windows_amd64.h	/^	uint32	NumberParameters;$/;"	m	struct:ExceptionRecord
Overlapped	runtime\defs_windows_amd64.h	/^struct Overlapped {$/;"	s
Overlapped	runtime\defs_windows_amd64.h	/^typedef struct Overlapped Overlapped;$/;"	t	typeref:struct:Overlapped
P1Home	runtime\defs_windows_amd64.h	/^	uint64	P1Home;$/;"	m	struct:Context
P2Home	runtime\defs_windows_amd64.h	/^	uint64	P2Home;$/;"	m	struct:Context
P3Home	runtime\defs_windows_amd64.h	/^	uint64	P3Home;$/;"	m	struct:Context
P4Home	runtime\defs_windows_amd64.h	/^	uint64	P4Home;$/;"	m	struct:Context
P5Home	runtime\defs_windows_amd64.h	/^	uint64	P5Home;$/;"	m	struct:Context
P6Home	runtime\defs_windows_amd64.h	/^	uint64	P6Home;$/;"	m	struct:Context
PROT_EXEC	runtime\defs_windows_amd64.h	/^	PROT_EXEC	= 4,$/;"	e	enum:__anon30
PROT_NONE	runtime\defs_windows_amd64.h	/^	PROT_NONE	= 0,$/;"	e	enum:__anon30
PROT_READ	runtime\defs_windows_amd64.h	/^	PROT_READ	= 1,$/;"	e	enum:__anon30
PROT_WRITE	runtime\defs_windows_amd64.h	/^	PROT_WRITE	= 2,$/;"	e	enum:__anon30
Pad_cgo_0	runtime\defs_windows_amd64.h	/^	byte	Pad_cgo_0[4];$/;"	m	struct:ExceptionRecord
R10	runtime\defs_windows_amd64.h	/^	uint64	R10;$/;"	m	struct:Context
R11	runtime\defs_windows_amd64.h	/^	uint64	R11;$/;"	m	struct:Context
R12	runtime\defs_windows_amd64.h	/^	uint64	R12;$/;"	m	struct:Context
R13	runtime\defs_windows_amd64.h	/^	uint64	R13;$/;"	m	struct:Context
R14	runtime\defs_windows_amd64.h	/^	uint64	R14;$/;"	m	struct:Context
R15	runtime\defs_windows_amd64.h	/^	uint64	R15;$/;"	m	struct:Context
R8	runtime\defs_windows_amd64.h	/^	uint64	R8;$/;"	m	struct:Context
R9	runtime\defs_windows_amd64.h	/^	uint64	R9;$/;"	m	struct:Context
Rax	runtime\defs_windows_amd64.h	/^	uint64	Rax;$/;"	m	struct:Context
Rbp	runtime\defs_windows_amd64.h	/^	uint64	Rbp;$/;"	m	struct:Context
Rbx	runtime\defs_windows_amd64.h	/^	uint64	Rbx;$/;"	m	struct:Context
Rcx	runtime\defs_windows_amd64.h	/^	uint64	Rcx;$/;"	m	struct:Context
Rdi	runtime\defs_windows_amd64.h	/^	uint64	Rdi;$/;"	m	struct:Context
Rdx	runtime\defs_windows_amd64.h	/^	uint64	Rdx;$/;"	m	struct:Context
Rip	runtime\defs_windows_amd64.h	/^	uint64	Rip;$/;"	m	struct:Context
Rsi	runtime\defs_windows_amd64.h	/^	uint64	Rsi;$/;"	m	struct:Context
Rsp	runtime\defs_windows_amd64.h	/^	uint64	Rsp;$/;"	m	struct:Context
SIGINT	runtime\defs_windows_amd64.h	/^	SIGINT			= 0x2,$/;"	e	enum:__anon30
SegCs	runtime\defs_windows_amd64.h	/^	uint16	SegCs;$/;"	m	struct:Context
SegDs	runtime\defs_windows_amd64.h	/^	uint16	SegDs;$/;"	m	struct:Context
SegEs	runtime\defs_windows_amd64.h	/^	uint16	SegEs;$/;"	m	struct:Context
SegFs	runtime\defs_windows_amd64.h	/^	uint16	SegFs;$/;"	m	struct:Context
SegGs	runtime\defs_windows_amd64.h	/^	uint16	SegGs;$/;"	m	struct:Context
SegSs	runtime\defs_windows_amd64.h	/^	uint16	SegSs;$/;"	m	struct:Context
SystemInfo	runtime\defs_windows_amd64.h	/^struct SystemInfo {$/;"	s
SystemInfo	runtime\defs_windows_amd64.h	/^typedef struct SystemInfo SystemInfo;$/;"	t	typeref:struct:SystemInfo
THREAD_PRIORITY_HIGHEST	runtime\defs_windows_amd64.h	/^	THREAD_PRIORITY_HIGHEST	= 0x2,$/;"	e	enum:__anon30
VectorControl	runtime\defs_windows_amd64.h	/^	uint64	VectorControl;$/;"	m	struct:Context
VectorRegister	runtime\defs_windows_amd64.h	/^	M128a	VectorRegister[26];$/;"	m	struct:Context
WAIT_TIMEOUT	runtime\defs_windows_amd64.h	/^	WAIT_TIMEOUT	= 0x102,$/;"	e	enum:__anon30
anon0	runtime\defs_windows_amd64.h	/^	byte	anon0[4];$/;"	m	struct:SystemInfo
anon0	runtime\defs_windows_amd64.h	/^	byte	anon0[512];$/;"	m	struct:Context
anon0	runtime\defs_windows_amd64.h	/^	byte	anon0[8];$/;"	m	struct:Overlapped
dwActiveProcessorMask	runtime\defs_windows_amd64.h	/^	uint64	dwActiveProcessorMask;$/;"	m	struct:SystemInfo
dwAllocationGranularity	runtime\defs_windows_amd64.h	/^	uint32	dwAllocationGranularity;$/;"	m	struct:SystemInfo
dwNumberOfProcessors	runtime\defs_windows_amd64.h	/^	uint32	dwNumberOfProcessors;$/;"	m	struct:SystemInfo
dwPageSize	runtime\defs_windows_amd64.h	/^	uint32	dwPageSize;$/;"	m	struct:SystemInfo
dwProcessorType	runtime\defs_windows_amd64.h	/^	uint32	dwProcessorType;$/;"	m	struct:SystemInfo
hEvent	runtime\defs_windows_amd64.h	/^	byte	*hEvent;$/;"	m	struct:Overlapped
lpMaximumApplicationAddress	runtime\defs_windows_amd64.h	/^	byte	*lpMaximumApplicationAddress;$/;"	m	struct:SystemInfo
lpMinimumApplicationAddress	runtime\defs_windows_amd64.h	/^	byte	*lpMinimumApplicationAddress;$/;"	m	struct:SystemInfo
wProcessorLevel	runtime\defs_windows_amd64.h	/^	uint16	wProcessorLevel;$/;"	m	struct:SystemInfo
wProcessorRevision	runtime\defs_windows_amd64.h	/^	uint16	wProcessorRevision;$/;"	m	struct:SystemInfo
getenv	runtime\env_plan9.c	/^runtime·getenv(int8 *s)$/;"	f
_cgo_setenv	runtime\env_posix.c	/^void (*_cgo_setenv)(byte**);$/;"	v
envs	runtime\env_posix.c	/^Slice syscall·envs;$/;"	v
getenv	runtime\env_posix.c	/^runtime·getenv(int8 *s)$/;"	f
setenv_c	runtime\env_posix.c	/^syscall·setenv_c(String k, String v)$/;"	f
GogoBytes	runtime\export_test.c	/^·GogoBytes(int32 x)$/;"	f
nan	runtime\float.c	/^uint64	·nan		= 0x7FF8000000000001ULL;$/;"	v
neginf	runtime\float.c	/^uint64	·neginf	= 0xFFF0000000000000ULL;$/;"	v
posinf	runtime\float.c	/^uint64	·posinf	= 0x7FF0000000000000ULL;$/;"	v
ARGSIZE	runtime\funcdata.h	16;"	d
ArgsSizeUnknown	runtime\funcdata.h	22;"	d
FUNCDATA_GCArgs	runtime\funcdata.h	12;"	d
FUNCDATA_GCLocals	runtime\funcdata.h	13;"	d
PCDATA_ArgSize	runtime\funcdata.h	10;"	d
B	runtime\hashmap.c	/^	uint8   B;            \/\/ log_2 of # of buckets (can hold up to LOAD * 2^B items)$/;"	m	struct:Hmap	file:
B	runtime\hashmap.c	/^	uint8 B;$/;"	m	struct:hash_iter	file:
BUCKETSIZE	runtime\hashmap.c	39;"	d	file:
Bucket	runtime\hashmap.c	/^struct Bucket$/;"	s	file:
Bucket	runtime\hashmap.c	/^typedef struct Bucket Bucket;$/;"	t	typeref:struct:Bucket	file:
CHECKTYPE	runtime\hashmap.c	565;"	d	file:
CHECKTYPE	runtime\hashmap.c	568;"	d	file:
CHECKTYPE	runtime\hashmap.c	573;"	d	file:
FASTKEY	runtime\hashmap.c	526;"	d	file:
FASTKEY	runtime\hashmap.c	537;"	d	file:
FASTKEY	runtime\hashmap.c	547;"	d	file:
FASTKEY	runtime\hashmap.c	558;"	d	file:
FASTKEY	runtime\hashmap.c	580;"	d	file:
HASHFUNC	runtime\hashmap.c	525;"	d	file:
HASHFUNC	runtime\hashmap.c	536;"	d	file:
HASHFUNC	runtime\hashmap.c	546;"	d	file:
HASHFUNC	runtime\hashmap.c	557;"	d	file:
HASHFUNC	runtime\hashmap.c	579;"	d	file:
HASH_LOOKUP1	runtime\hashmap.c	522;"	d	file:
HASH_LOOKUP1	runtime\hashmap.c	533;"	d	file:
HASH_LOOKUP1	runtime\hashmap.c	543;"	d	file:
HASH_LOOKUP1	runtime\hashmap.c	554;"	d	file:
HASH_LOOKUP1	runtime\hashmap.c	576;"	d	file:
HASH_LOOKUP2	runtime\hashmap.c	523;"	d	file:
HASH_LOOKUP2	runtime\hashmap.c	534;"	d	file:
HASH_LOOKUP2	runtime\hashmap.c	544;"	d	file:
HASH_LOOKUP2	runtime\hashmap.c	555;"	d	file:
HASH_LOOKUP2	runtime\hashmap.c	577;"	d	file:
Hmap	runtime\hashmap.c	/^struct Hmap$/;"	s	file:
IK	runtime\hashmap.c	121;"	d	file:
IV	runtime\hashmap.c	122;"	d	file:
IndirectKey	runtime\hashmap.c	/^	IndirectKey = 1,    \/\/ storing pointers to keys$/;"	e	enum:__anon31	file:
IndirectValue	runtime\hashmap.c	/^	IndirectValue = 2,  \/\/ storing pointers to values$/;"	e	enum:__anon31	file:
Iterator	runtime\hashmap.c	/^	Iterator = 4,       \/\/ there may be an iterator using buckets$/;"	e	enum:__anon31	file:
KEYTYPE	runtime\hashmap.c	524;"	d	file:
KEYTYPE	runtime\hashmap.c	535;"	d	file:
KEYTYPE	runtime\hashmap.c	545;"	d	file:
KEYTYPE	runtime\hashmap.c	556;"	d	file:
KEYTYPE	runtime\hashmap.c	578;"	d	file:
LOAD	runtime\hashmap.c	42;"	d	file:
MAXKEYSIZE	runtime\hashmap.c	71;"	d	file:
MAXVALUESIZE	runtime\hashmap.c	72;"	d	file:
MAYBE_EQ	runtime\hashmap.c	530;"	d	file:
MAYBE_EQ	runtime\hashmap.c	541;"	d	file:
MAYBE_EQ	runtime\hashmap.c	551;"	d	file:
MAYBE_EQ	runtime\hashmap.c	562;"	d	file:
MAYBE_EQ	runtime\hashmap.c	584;"	d	file:
OldIterator	runtime\hashmap.c	/^	OldIterator = 8,    \/\/ there may be an iterator using oldbuckets$/;"	e	enum:__anon31	file:
QUICK_EQ	runtime\hashmap.c	528;"	d	file:
QUICK_EQ	runtime\hashmap.c	539;"	d	file:
QUICK_EQ	runtime\hashmap.c	549;"	d	file:
QUICK_EQ	runtime\hashmap.c	560;"	d	file:
QUICK_EQ	runtime\hashmap.c	582;"	d	file:
QUICK_NE	runtime\hashmap.c	527;"	d	file:
QUICK_NE	runtime\hashmap.c	538;"	d	file:
QUICK_NE	runtime\hashmap.c	548;"	d	file:
QUICK_NE	runtime\hashmap.c	559;"	d	file:
QUICK_NE	runtime\hashmap.c	581;"	d	file:
SLOW_EQ	runtime\hashmap.c	529;"	d	file:
SLOW_EQ	runtime\hashmap.c	540;"	d	file:
SLOW_EQ	runtime\hashmap.c	550;"	d	file:
SLOW_EQ	runtime\hashmap.c	561;"	d	file:
SLOW_EQ	runtime\hashmap.c	583;"	d	file:
bptr	runtime\hashmap.c	/^	struct Bucket *bptr;$/;"	m	struct:hash_iter	typeref:struct:hash_iter::Bucket	file:
bucket	runtime\hashmap.c	/^	uintptr bucket;$/;"	m	struct:hash_iter	file:
buckets	runtime\hashmap.c	/^	byte    *buckets;     \/\/ array of 2^B Buckets. may be nil if count==0.$/;"	m	struct:Hmap	file:
buckets	runtime\hashmap.c	/^	byte *buckets;$/;"	m	struct:hash_iter	file:
bucketsize	runtime\hashmap.c	/^	uint16  bucketsize;   \/\/ bucket size in bytes$/;"	m	struct:Hmap	file:
check	runtime\hashmap.c	/^check(MapType *t, Hmap *h)$/;"	f	file:
check_bucket	runtime\hashmap.c	/^	intptr check_bucket;$/;"	m	struct:hash_iter	file:
checkgc	runtime\hashmap.c	/^	checkgc = 0 || docheck,  \/\/ check interaction of mallocgc() with the garbage collector$/;"	e	enum:__anon32	file:
count	runtime\hashmap.c	/^	uintgo  count;        \/\/ # live cells == size of map.  Must be first (used by len() builtin)$/;"	m	struct:Hmap	file:
data	runtime\hashmap.c	/^	byte   data[1];             \/\/ BUCKETSIZE keys followed by BUCKETSIZE values$/;"	m	struct:Bucket	file:
debug	runtime\hashmap.c	/^	debug = 0,    \/\/ print every operation$/;"	e	enum:__anon32	file:
docheck	runtime\hashmap.c	/^	docheck = 0,  \/\/ check invariants before and after every op.  Slow!!!$/;"	e	enum:__anon32	file:
empty_value	runtime\hashmap.c	/^static uint8 empty_value[MAXVALUESIZE];$/;"	v	file:
endbucket	runtime\hashmap.c	/^	uintptr endbucket;$/;"	m	struct:hash_iter	file:
evacuate	runtime\hashmap.c	/^evacuate(MapType *t, Hmap *h, uintptr oldbucket)$/;"	f	file:
evacuated	runtime\hashmap.c	91;"	d	file:
flags	runtime\hashmap.c	/^	uint32  flags;$/;"	m	struct:Hmap	file:
grow_work	runtime\hashmap.c	/^grow_work(MapType *t, Hmap *h, uintptr bucket)$/;"	f	file:
h	runtime\hashmap.c	/^	Hmap *h;$/;"	m	struct:hash_iter	file:
hash0	runtime\hashmap.c	/^	uint32  hash0;        \/\/ hash seed$/;"	m	struct:Hmap	file:
hashLoad	runtime\hashmap.c	/^float64 runtime·hashLoad = LOAD;$/;"	v
hash_grow	runtime\hashmap.c	/^hash_grow(MapType *t, Hmap *h)$/;"	f	file:
hash_init	runtime\hashmap.c	/^hash_init(MapType *t, Hmap *h, uint32 hint)$/;"	f	file:
hash_insert	runtime\hashmap.c	/^hash_insert(MapType *t, Hmap *h, void *key, void *value)$/;"	f	file:
hash_iter	runtime\hashmap.c	/^struct hash_iter$/;"	s	file:
hash_iter_init	runtime\hashmap.c	/^hash_iter_init(MapType *t, Hmap *h, struct hash_iter *it)$/;"	f	file:
hash_lookup	runtime\hashmap.c	/^hash_lookup(MapType *t, Hmap *h, byte **keyp)$/;"	f	file:
hash_next	runtime\hashmap.c	/^hash_next(struct hash_iter *it)$/;"	f	file:
hash_remove	runtime\hashmap.c	/^hash_remove(MapType *t, Hmap *h, void *key)$/;"	f	file:
i	runtime\hashmap.c	/^	uintptr i;$/;"	m	struct:hash_iter	file:
ismapkey	runtime\hashmap.c	/^reflect·ismapkey(Type *typ, bool ret)$/;"	f
key	runtime\hashmap.c	/^	uint8* key; \/\/ Must be in first position.  Write nil to indicate iteration end (see cmd\/gc\/range.c).$/;"	m	struct:hash_iter	file:
keysize	runtime\hashmap.c	/^	uint8   keysize;      \/\/ key size in bytes$/;"	m	struct:Hmap	file:
makemap	runtime\hashmap.c	/^reflect·makemap(MapType *t, Hmap *ret)$/;"	f
makemap	runtime\hashmap.c	/^runtime·makemap(MapType *typ, int64 hint, Hmap *ret)$/;"	f
makemap_c	runtime\hashmap.c	/^runtime·makemap_c(MapType *typ, int64 hint)$/;"	f
mapaccess	runtime\hashmap.c	/^reflect·mapaccess(MapType *t, Hmap *h, uintptr key, uintptr val, bool pres)$/;"	f
mapaccess	runtime\hashmap.c	/^runtime·mapaccess(MapType *t, Hmap *h, byte *ak, byte *av, bool *pres)$/;"	f
mapaccess1	runtime\hashmap.c	/^runtime·mapaccess1(MapType *t, Hmap *h, ...)$/;"	f
mapaccess2	runtime\hashmap.c	/^runtime·mapaccess2(MapType *t, Hmap *h, ...)$/;"	f
mapassign	runtime\hashmap.c	/^reflect·mapassign(MapType *t, Hmap *h, uintptr key, uintptr val, bool pres)$/;"	f
mapassign	runtime\hashmap.c	/^runtime·mapassign(MapType *t, Hmap *h, byte *ak, byte *av)$/;"	f
mapassign1	runtime\hashmap.c	/^runtime·mapassign1(MapType *t, Hmap *h, ...)$/;"	f
mapdelete	runtime\hashmap.c	/^runtime·mapdelete(MapType *t, Hmap *h, ...)$/;"	f
mapiter1	runtime\hashmap.c	/^runtime·mapiter1(struct hash_iter *it, ...)$/;"	f
mapiter2	runtime\hashmap.c	/^runtime·mapiter2(struct hash_iter *it, ...)$/;"	f
mapiterinit	runtime\hashmap.c	/^reflect·mapiterinit(MapType *t, Hmap *h, struct hash_iter *it)$/;"	f
mapiterinit	runtime\hashmap.c	/^runtime·mapiterinit(MapType *t, Hmap *h, struct hash_iter *it)$/;"	f
mapiterkey	runtime\hashmap.c	/^reflect·mapiterkey(struct hash_iter *it, uintptr key, bool ok)$/;"	f
mapiterkey	runtime\hashmap.c	/^runtime·mapiterkey(struct hash_iter *it, void *ak)$/;"	f
mapiternext	runtime\hashmap.c	/^reflect·mapiternext(struct hash_iter *it)$/;"	f
mapiternext	runtime\hashmap.c	/^runtime·mapiternext(struct hash_iter *it)$/;"	f
maplen	runtime\hashmap.c	/^reflect·maplen(Hmap *h, intgo len)$/;"	f
nevacuate	runtime\hashmap.c	/^	uintptr nevacuate;    \/\/ progress counter for evacuation (buckets less than this have been evacuated)$/;"	m	struct:Hmap	file:
oldbuckets	runtime\hashmap.c	/^	byte    *oldbuckets;  \/\/ previous bucket array of half the size, non-nil only when growing$/;"	m	struct:Hmap	file:
overflow	runtime\hashmap.c	/^	Bucket *overflow;           \/\/ overflow bucket, if any$/;"	m	struct:Bucket	file:
overflowptr	runtime\hashmap.c	92;"	d	file:
t	runtime\hashmap.c	/^	MapType *t;$/;"	m	struct:hash_iter	file:
tophash	runtime\hashmap.c	/^	uint8  tophash[BUCKETSIZE]; \/\/ top 8 bits of hash of each entry (0 = empty)$/;"	m	struct:Bucket	file:
value	runtime\hashmap.c	/^	uint8* value;$/;"	m	struct:hash_iter	file:
valuesize	runtime\hashmap.c	/^	uint8   valuesize;    \/\/ value size in bytes$/;"	m	struct:Hmap	file:
wrapped	runtime\hashmap.c	/^	bool wrapped;$/;"	m	struct:hash_iter	file:
HASH_LOOKUP1	runtime\hashmap_fast.c	/^HASH_LOOKUP1(MapType *t, Hmap *h, KEYTYPE key, byte *value)$/;"	f
HASH_LOOKUP2	runtime\hashmap_fast.c	/^HASH_LOOKUP2(MapType *t, Hmap *h, KEYTYPE key, byte *value, bool res)$/;"	f
assertE2E	runtime\iface.c	/^runtime·assertE2E(InterfaceType* inter, Eface e, Eface ret)$/;"	f
assertE2E2	runtime\iface.c	/^runtime·assertE2E2(InterfaceType* inter, Eface e, Eface ret, bool ok)$/;"	f
assertE2I	runtime\iface.c	/^runtime·assertE2I(InterfaceType* inter, Eface e, Iface ret)$/;"	f
assertE2I2	runtime\iface.c	/^runtime·assertE2I2(InterfaceType *inter, Eface e, Iface ret, bool ok)$/;"	f
assertE2T	runtime\iface.c	/^runtime·assertE2T(Type *t, Eface e, ...)$/;"	f
assertE2T2	runtime\iface.c	/^runtime·assertE2T2(Type *t, Eface e, ...)$/;"	f
assertE2TOK	runtime\iface.c	/^runtime·assertE2TOK(Type *t, Eface e, bool ok)$/;"	f
assertE2Tret	runtime\iface.c	/^assertE2Tret(Type *t, Eface e, byte *ret)$/;"	f	file:
assertI2E	runtime\iface.c	/^runtime·assertI2E(InterfaceType* inter, Iface i, Eface ret)$/;"	f
assertI2E2	runtime\iface.c	/^runtime·assertI2E2(InterfaceType* inter, Iface i, Eface ret, bool ok)$/;"	f
assertI2I	runtime\iface.c	/^runtime·assertI2I(InterfaceType* inter, Iface i, Iface ret)$/;"	f
assertI2I2	runtime\iface.c	/^runtime·assertI2I2(InterfaceType *inter, Iface i, Iface ret, bool ok)$/;"	f
assertI2T	runtime\iface.c	/^runtime·assertI2T(Type *t, Iface i, ...)$/;"	f
assertI2T2	runtime\iface.c	/^runtime·assertI2T2(Type *t, Iface i, ...)$/;"	f
assertI2TOK	runtime\iface.c	/^runtime·assertI2TOK(Type *t, Iface i, bool ok)$/;"	f
assertI2Tret	runtime\iface.c	/^assertI2Tret(Type *t, Iface i, byte *ret)$/;"	f	file:
convI2E	runtime\iface.c	/^runtime·convI2E(Iface i, Eface ret)$/;"	f
convI2I	runtime\iface.c	/^runtime·convI2I(InterfaceType* inter, Iface i, Iface ret)$/;"	f
convT2E	runtime\iface.c	/^runtime·convT2E(Type *t, ...)$/;"	f
convT2I	runtime\iface.c	/^runtime·convT2I(Type *t, InterfaceType *inter, Itab **cache, ...)$/;"	f
copyin	runtime\iface.c	/^copyin(Type *t, void *src, void **dst)$/;"	f	file:
copyout	runtime\iface.c	/^copyout(Type *t, void **src, void *dst)$/;"	f	file:
efaceeq	runtime\iface.c	/^runtime·efaceeq(Eface e1, Eface e2, bool ret)$/;"	f
efaceeq_c	runtime\iface.c	/^runtime·efaceeq_c(Eface e1, Eface e2)$/;"	f
efacehash	runtime\iface.c	/^runtime·efacehash(Eface a, uintptr h)$/;"	f
efacethash	runtime\iface.c	/^runtime·efacethash(Eface e1, uint32 ret)$/;"	f
hash	runtime\iface.c	/^static	Itab*	hash[1009];$/;"	v	file:
ifaceE2I	runtime\iface.c	/^reflect·ifaceE2I(InterfaceType *inter, Eface e, Iface *dst)$/;"	f
ifaceE2I	runtime\iface.c	/^runtime·ifaceE2I(InterfaceType *inter, Eface e, Iface *ret)$/;"	f
ifaceE2I2	runtime\iface.c	/^runtime·ifaceE2I2(InterfaceType *inter, Eface e, Iface *ret)$/;"	f
ifaceI2I	runtime\iface.c	/^runtime·ifaceI2I(InterfaceType *inter, Iface i, Iface *ret)$/;"	f
ifaceeq	runtime\iface.c	/^runtime·ifaceeq(Iface i1, Iface i2, bool ret)$/;"	f
ifaceeq1	runtime\iface.c	/^ifaceeq1(void *data1, void *data2, Type *t)$/;"	f	file:
ifaceeq_c	runtime\iface.c	/^runtime·ifaceeq_c(Iface i1, Iface i2)$/;"	f
ifacehash	runtime\iface.c	/^runtime·ifacehash(Iface a, uintptr h)$/;"	f
ifacehash1	runtime\iface.c	/^ifacehash1(void *data, Type *t, uintptr h)$/;"	f	file:
ifacelock	runtime\iface.c	/^static	Lock	ifacelock;$/;"	v	file:
ifacethash	runtime\iface.c	/^runtime·ifacethash(Iface i1, uint32 ret)$/;"	f
itab	runtime\iface.c	/^itab(InterfaceType *inter, Type *type, int32 canfail)$/;"	f	file:
printeface	runtime\iface.c	/^runtime·printeface(Eface e)$/;"	f
printiface	runtime\iface.c	/^runtime·printiface(Iface i)$/;"	f
typ2Itab	runtime\iface.c	/^runtime·typ2Itab(Type *t, InterfaceType *inter, Itab **cache, Itab *ret)$/;"	f
typelinks	runtime\iface.c	/^reflect·typelinks(Slice ret)$/;"	f
unsafe_New	runtime\iface.c	/^reflect·unsafe_New(Type *t, void *ret)$/;"	f
unsafe_NewArray	runtime\iface.c	/^reflect·unsafe_NewArray(Type *t, intgo n, void *ret)$/;"	f
unsafe_Typeof	runtime\iface.c	/^reflect·unsafe_Typeof(Eface e, Eface ret)$/;"	f
CNT_MASK	runtime\lfstack.c	18;"	d	file:
PTR_BITS	runtime\lfstack.c	13;"	d	file:
PTR_BITS	runtime\lfstack.c	15;"	d	file:
PTR_MASK	runtime\lfstack.c	17;"	d	file:
lfstackpop	runtime\lfstack.c	/^runtime·lfstackpop(uint64 *head)$/;"	f
lfstackpop2	runtime\lfstack.c	/^runtime·lfstackpop2(uint64 *head, LFNode *node)$/;"	f
lfstackpush	runtime\lfstack.c	/^runtime·lfstackpush(uint64 *head, LFNode *node)$/;"	f
ACTIVE_SPIN	runtime\lock_futex.c	/^	ACTIVE_SPIN = 4,$/;"	e	enum:__anon33	file:
ACTIVE_SPIN_CNT	runtime\lock_futex.c	/^	ACTIVE_SPIN_CNT = 30,$/;"	e	enum:__anon33	file:
MUTEX_LOCKED	runtime\lock_futex.c	/^	MUTEX_LOCKED = 1,$/;"	e	enum:__anon33	file:
MUTEX_SLEEPING	runtime\lock_futex.c	/^	MUTEX_SLEEPING = 2,$/;"	e	enum:__anon33	file:
MUTEX_UNLOCKED	runtime\lock_futex.c	/^	MUTEX_UNLOCKED = 0,$/;"	e	enum:__anon33	file:
PASSIVE_SPIN	runtime\lock_futex.c	/^	PASSIVE_SPIN = 1,$/;"	e	enum:__anon33	file:
lock	runtime\lock_futex.c	/^runtime·lock(Lock *l)$/;"	f
noteclear	runtime\lock_futex.c	/^runtime·noteclear(Note *n)$/;"	f
notesleep	runtime\lock_futex.c	/^runtime·notesleep(Note *n)$/;"	f
notetsleep	runtime\lock_futex.c	/^notetsleep(Note *n, int64 ns, int64 deadline, int64 now)$/;"	f	file:
notetsleep	runtime\lock_futex.c	/^runtime·notetsleep(Note *n, int64 ns)$/;"	f
notetsleepg	runtime\lock_futex.c	/^runtime·notetsleepg(Note *n, int64 ns)$/;"	f
notewakeup	runtime\lock_futex.c	/^runtime·notewakeup(Note *n)$/;"	f
unlock	runtime\lock_futex.c	/^runtime·unlock(Lock *l)$/;"	f
ACTIVE_SPIN	runtime\lock_sema.c	/^	ACTIVE_SPIN = 4,$/;"	e	enum:__anon34	file:
ACTIVE_SPIN_CNT	runtime\lock_sema.c	/^	ACTIVE_SPIN_CNT = 30,$/;"	e	enum:__anon34	file:
LOCKED	runtime\lock_sema.c	/^	LOCKED = 1,$/;"	e	enum:__anon34	file:
PASSIVE_SPIN	runtime\lock_sema.c	/^	PASSIVE_SPIN = 1,$/;"	e	enum:__anon34	file:
lock	runtime\lock_sema.c	/^runtime·lock(Lock *l)$/;"	f
noteclear	runtime\lock_sema.c	/^runtime·noteclear(Note *n)$/;"	f
notesleep	runtime\lock_sema.c	/^runtime·notesleep(Note *n)$/;"	f
notetsleep	runtime\lock_sema.c	/^notetsleep(Note *n, int64 ns, int64 deadline, M *mp)$/;"	f	file:
notetsleep	runtime\lock_sema.c	/^runtime·notetsleep(Note *n, int64 ns)$/;"	f
notetsleepg	runtime\lock_sema.c	/^runtime·notetsleepg(Note *n, int64 ns)$/;"	f
notewakeup	runtime\lock_sema.c	/^runtime·notewakeup(Note *n)$/;"	f
unlock	runtime\lock_sema.c	/^runtime·unlock(Lock *l)$/;"	f
DebugTypeAtBlockEnd	runtime\malloc.h	/^	DebugTypeAtBlockEnd = 0,$/;"	e	enum:__anon42
FixAlloc	runtime\malloc.h	/^struct FixAlloc$/;"	s
FixAllocChunk	runtime\malloc.h	/^	FixAllocChunk = 16<<10,		\/\/ Chunk size for FixAlloc$/;"	e	enum:__anon36
FlagNoGC	runtime\malloc.h	/^	FlagNoGC	= 1<<2,	\/\/ must not free or scan for pointers$/;"	e	enum:__anon41
FlagNoInvokeGC	runtime\malloc.h	/^	FlagNoInvokeGC	= 1<<4, \/\/ don't invoke GC$/;"	e	enum:__anon41
FlagNoProfiling	runtime\malloc.h	/^	FlagNoProfiling	= 1<<1,	\/\/ must not profile$/;"	e	enum:__anon41
FlagNoScan	runtime\malloc.h	/^	FlagNoScan	= 1<<0,	\/\/ GC doesn't have to scan object$/;"	e	enum:__anon41
FlagNoZero	runtime\malloc.h	/^	FlagNoZero	= 1<<3, \/\/ don't zero memory$/;"	e	enum:__anon41
GCStats	runtime\malloc.h	/^typedef struct GCStats	GCStats;$/;"	t	typeref:struct:GCStats
HeapAllocChunk	runtime\malloc.h	/^	HeapAllocChunk = 1<<20,		\/\/ Chunk size for heap growth$/;"	e	enum:__anon36
Lock	runtime\malloc.h	/^	Lock;$/;"	m	struct:MCentral
Lock	runtime\malloc.h	/^	Lock;$/;"	m	struct:MHeap
MCache	runtime\malloc.h	/^struct MCache$/;"	s
MCacheList	runtime\malloc.h	/^struct MCacheList$/;"	s
MCacheList	runtime\malloc.h	/^typedef struct MCacheList MCacheList;$/;"	t	typeref:struct:MCacheList
MCentral	runtime\malloc.h	/^		MCentral;$/;"	m	struct:MHeap::__anon40
MCentral	runtime\malloc.h	/^struct MCentral$/;"	s
MCentral	runtime\malloc.h	/^typedef struct MCentral	MCentral;$/;"	t	typeref:struct:MCentral
MHeap	runtime\malloc.h	/^struct MHeap$/;"	s
MHeap	runtime\malloc.h	/^typedef struct MHeap	MHeap;$/;"	t	typeref:struct:MHeap
MHeapMap_Bits	runtime\malloc.h	/^	MHeapMap_Bits = 35 - PageShift,$/;"	e	enum:__anon36
MLink	runtime\malloc.h	/^struct MLink$/;"	s
MLink	runtime\malloc.h	/^typedef struct MLink	MLink;$/;"	t	typeref:struct:MLink
MSpan	runtime\malloc.h	/^struct MSpan$/;"	s
MSpan	runtime\malloc.h	/^typedef struct MSpan	MSpan;$/;"	t	typeref:struct:MSpan
MSpanDead	runtime\malloc.h	/^	MSpanDead,$/;"	e	enum:__anon39
MSpanFree	runtime\malloc.h	/^	MSpanFree,$/;"	e	enum:__anon39
MSpanInUse	runtime\malloc.h	/^	MSpanInUse = 0,$/;"	e	enum:__anon39
MSpanListHead	runtime\malloc.h	/^	MSpanListHead,$/;"	e	enum:__anon39
MStats	runtime\malloc.h	/^struct MStats$/;"	s
MStats	runtime\malloc.h	/^typedef struct MStats	MStats;$/;"	t	typeref:struct:MStats
MTypes	runtime\malloc.h	/^struct MTypes$/;"	s
MTypes	runtime\malloc.h	/^typedef struct MTypes	MTypes;$/;"	t	typeref:struct:MTypes
MTypes_Bytes	runtime\malloc.h	/^	MTypes_Bytes = 3,$/;"	e	enum:__anon38
MTypes_Empty	runtime\malloc.h	/^	MTypes_Empty = 0,$/;"	e	enum:__anon38
MTypes_Single	runtime\malloc.h	/^	MTypes_Single = 1,$/;"	e	enum:__anon38
MTypes_Words	runtime\malloc.h	/^	MTypes_Words = 2,$/;"	e	enum:__anon38
MaxGcproc	runtime\malloc.h	/^	MaxGcproc = 8,$/;"	e	enum:__anon36
MaxMHeapList	runtime\malloc.h	/^	MaxMHeapList = 1<<(20 - PageShift),	\/\/ Maximum page length for fixed-size list in MHeap.$/;"	e	enum:__anon36
MaxMem	runtime\malloc.h	143;"	d
MaxMem	runtime\malloc.h	145;"	d
MaxSmallSize	runtime\malloc.h	/^	MaxSmallSize = 32<<10,$/;"	e	enum:__anon36
NumSizeClasses	runtime\malloc.h	/^	NumSizeClasses = 61,$/;"	e	enum:__anon36
PageID	runtime\malloc.h	/^typedef	uintptr	PageID;		\/\/ address >> PageShift$/;"	t
PageMask	runtime\malloc.h	/^	PageMask	= PageSize - 1,$/;"	e	enum:__anon35
PageShift	runtime\malloc.h	/^	PageShift	= 12,$/;"	e	enum:__anon35
PageSize	runtime\malloc.h	/^	PageSize	= 1<<PageShift,$/;"	e	enum:__anon35
TypeInfo_Array	runtime\malloc.h	/^	TypeInfo_Array = 1,$/;"	e	enum:__anon42
TypeInfo_Chan	runtime\malloc.h	/^	TypeInfo_Chan = 2,$/;"	e	enum:__anon42
TypeInfo_SingleObject	runtime\malloc.h	/^	TypeInfo_SingleObject = 0,$/;"	e	enum:__anon42
alloc	runtime\malloc.h	/^	uint64	alloc;		\/\/ bytes allocated and still in use$/;"	m	struct:MStats
allspans	runtime\malloc.h	/^	MSpan **allspans;$/;"	m	struct:MHeap
arena_end	runtime\malloc.h	/^	byte *arena_end;$/;"	m	struct:MHeap
arena_start	runtime\malloc.h	/^	byte *arena_start;$/;"	m	struct:MHeap
arena_used	runtime\malloc.h	/^	byte *arena_used;$/;"	m	struct:MHeap
arg	runtime\malloc.h	/^	void*	arg;$/;"	m	struct:FixAlloc
bitmap	runtime\malloc.h	/^	byte *bitmap;$/;"	m	struct:MHeap
bitmap_mapped	runtime\malloc.h	/^	uintptr bitmap_mapped;$/;"	m	struct:MHeap
buckhash_sys	runtime\malloc.h	/^	uint64	buckhash_sys;	\/\/ profiling bucket hash table$/;"	m	struct:MStats
by_size	runtime\malloc.h	/^	} by_size[NumSizeClasses];$/;"	m	struct:MStats	typeref:struct:MStats::__anon37
cachealloc	runtime\malloc.h	/^	FixAlloc cachealloc;	\/\/ allocator for MCache*$/;"	m	struct:MHeap
central	runtime\malloc.h	/^	} central[NumSizeClasses];$/;"	m	struct:MHeap	typeref:struct:MHeap::__anon40
chunk	runtime\malloc.h	/^	byte*	chunk;$/;"	m	struct:FixAlloc
compression	runtime\malloc.h	/^	byte	compression;	\/\/ one of MTypes_*$/;"	m	struct:MTypes
data	runtime\malloc.h	/^	uintptr	data;$/;"	m	struct:MTypes
debuggc	runtime\malloc.h	/^	bool	debuggc;$/;"	m	struct:MStats
elemsize	runtime\malloc.h	/^	uintptr	elemsize;	\/\/ computed from sizeclass or from npages$/;"	m	struct:MSpan
empty	runtime\malloc.h	/^	MSpan empty;$/;"	m	struct:MCentral
enablegc	runtime\malloc.h	/^	bool	enablegc;$/;"	m	struct:MStats
first	runtime\malloc.h	/^	void	(*first)(void *arg, byte *p);	\/\/ called first time p is returned$/;"	m	struct:FixAlloc
free	runtime\malloc.h	/^	MSpan free[MaxMHeapList];	\/\/ free lists of given length$/;"	m	struct:MHeap
freelist	runtime\malloc.h	/^	MLink	*freelist;	\/\/ list of free objects$/;"	m	struct:MSpan
gc_sys	runtime\malloc.h	/^	uint64	gc_sys;$/;"	m	struct:MStats
heap_alloc	runtime\malloc.h	/^	uint64	heap_alloc;	\/\/ bytes allocated and still in use$/;"	m	struct:MStats
heap_idle	runtime\malloc.h	/^	uint64	heap_idle;	\/\/ bytes in idle spans$/;"	m	struct:MStats
heap_inuse	runtime\malloc.h	/^	uint64	heap_inuse;	\/\/ bytes in non-idle spans$/;"	m	struct:MStats
heap_objects	runtime\malloc.h	/^	uint64	heap_objects;	\/\/ total number of allocated objects$/;"	m	struct:MStats
heap_released	runtime\malloc.h	/^	uint64	heap_released;	\/\/ bytes released to the OS$/;"	m	struct:MStats
heap_sys	runtime\malloc.h	/^	uint64	heap_sys;	\/\/ bytes obtained from system$/;"	m	struct:MStats
inuse	runtime\malloc.h	/^	uintptr	inuse;	\/\/ in-use bytes now$/;"	m	struct:FixAlloc
large	runtime\malloc.h	/^	MSpan large;			\/\/ free lists length >= MaxMHeapList$/;"	m	struct:MHeap
largefree	runtime\malloc.h	/^	uint64 largefree;	\/\/ bytes freed for large objects (>MaxSmallSize)$/;"	m	struct:MHeap
last_gc	runtime\malloc.h	/^	uint64  last_gc;	\/\/ last GC (in absolute time)$/;"	m	struct:MStats
limit	runtime\malloc.h	/^	byte	*limit;		\/\/ end of data in span$/;"	m	struct:MSpan
list	runtime\malloc.h	/^	MCacheList list[NumSizeClasses];$/;"	m	struct:MCache
list	runtime\malloc.h	/^	MLink *list;$/;"	m	struct:MCacheList
list	runtime\malloc.h	/^	MLink*	list;$/;"	m	struct:FixAlloc
local_cachealloc	runtime\malloc.h	/^	intptr local_cachealloc;	\/\/ bytes allocated (or freed) from cache since last lock of heap$/;"	m	struct:MCache
local_largefree	runtime\malloc.h	/^	uintptr local_largefree;	\/\/ bytes freed for large objects (>MaxSmallSize)$/;"	m	struct:MCache
local_nlargefree	runtime\malloc.h	/^	uintptr local_nlargefree;	\/\/ number of frees for large objects (>MaxSmallSize)$/;"	m	struct:MCache
local_nlookup	runtime\malloc.h	/^	uintptr local_nlookup;		\/\/ number of pointer lookups$/;"	m	struct:MCache
local_nsmallfree	runtime\malloc.h	/^	uintptr local_nsmallfree[NumSizeClasses];	\/\/ number of frees for small objects (<=MaxSmallSize)$/;"	m	struct:MCache
mcache_inuse	runtime\malloc.h	/^	uint64	mcache_inuse;	\/\/ MCache structures$/;"	m	struct:MStats
mcache_sys	runtime\malloc.h	/^	uint64	mcache_sys;$/;"	m	struct:MStats
mspan_inuse	runtime\malloc.h	/^	uint64	mspan_inuse;	\/\/ MSpan structures$/;"	m	struct:MStats
mspan_sys	runtime\malloc.h	/^	uint64	mspan_sys;$/;"	m	struct:MStats
mstats	runtime\malloc.h	258;"	d
nchunk	runtime\malloc.h	/^	uint32	nchunk;$/;"	m	struct:FixAlloc
next	runtime\malloc.h	/^	MLink *next;$/;"	m	struct:MLink
next	runtime\malloc.h	/^	MSpan	*next;		\/\/ in a span linked list$/;"	m	struct:MSpan
next_gc	runtime\malloc.h	/^	uint64	next_gc;	\/\/ next GC (in heap_alloc time)$/;"	m	struct:MStats
next_sample	runtime\malloc.h	/^	int32 next_sample;		\/\/ trigger heap sample after allocating this many bytes$/;"	m	struct:MCache
nfree	runtime\malloc.h	/^		uint64 nfree;$/;"	m	struct:MStats::__anon37
nfree	runtime\malloc.h	/^	int32 nfree;$/;"	m	struct:MCentral
nfree	runtime\malloc.h	/^	uint64	nfree;  \/\/ number of frees$/;"	m	struct:MStats
nlargefree	runtime\malloc.h	/^	uint64 nlargefree;	\/\/ number of frees for large objects (>MaxSmallSize)$/;"	m	struct:MHeap
nlist	runtime\malloc.h	/^	uint32 nlist;$/;"	m	struct:MCacheList
nlookup	runtime\malloc.h	/^	uint64	nlookup;	\/\/ number of pointer lookups$/;"	m	struct:MStats
nmalloc	runtime\malloc.h	/^		uint64 nmalloc;$/;"	m	struct:MStats::__anon37
nmalloc	runtime\malloc.h	/^	uint64	nmalloc;	\/\/ number of mallocs$/;"	m	struct:MStats
nonempty	runtime\malloc.h	/^	MSpan nonempty;$/;"	m	struct:MCentral
npages	runtime\malloc.h	/^	uintptr	npages;		\/\/ number of pages in span$/;"	m	struct:MSpan
npreleased	runtime\malloc.h	/^	uintptr npreleased;	\/\/ number of pages released to the OS$/;"	m	struct:MSpan
nsmallfree	runtime\malloc.h	/^	uint64 nsmallfree[NumSizeClasses];	\/\/ number of frees for small objects (<=MaxSmallSize)$/;"	m	struct:MHeap
nspan	runtime\malloc.h	/^	uint32	nspan;$/;"	m	struct:MHeap
nspancap	runtime\malloc.h	/^	uint32	nspancap;$/;"	m	struct:MHeap
numgc	runtime\malloc.h	/^	uint32	numgc;$/;"	m	struct:MStats
other_sys	runtime\malloc.h	/^	uint64	other_sys;$/;"	m	struct:MStats
pad	runtime\malloc.h	/^		byte pad[CacheLineSize];$/;"	m	struct:MHeap::__anon40
pause_ns	runtime\malloc.h	/^	uint64	pause_ns[256];$/;"	m	struct:MStats
pause_total_ns	runtime\malloc.h	/^	uint64	pause_total_ns;$/;"	m	struct:MStats
prev	runtime\malloc.h	/^	MSpan	*prev;		\/\/ in a span linked list$/;"	m	struct:MSpan
ref	runtime\malloc.h	/^	uint32	ref;		\/\/ number of allocated objects in this span$/;"	m	struct:MSpan
size	runtime\malloc.h	/^		uint32 size;$/;"	m	struct:MStats::__anon37
size	runtime\malloc.h	/^	uintptr	size;$/;"	m	struct:FixAlloc
sizeclass	runtime\malloc.h	/^	int32	sizeclass;	\/\/ size class$/;"	m	struct:MSpan
sizeclass	runtime\malloc.h	/^	int32 sizeclass;$/;"	m	struct:MCentral
spanalloc	runtime\malloc.h	/^	FixAlloc spanalloc;	\/\/ allocator for Span*$/;"	m	struct:MHeap
spans	runtime\malloc.h	/^	MSpan**	spans;$/;"	m	struct:MHeap
spans_mapped	runtime\malloc.h	/^	uintptr	spans_mapped;$/;"	m	struct:MHeap
stacks_inuse	runtime\malloc.h	/^	uint64	stacks_inuse;	\/\/ bootstrap stacks$/;"	m	struct:MStats
stacks_sys	runtime\malloc.h	/^	uint64	stacks_sys;$/;"	m	struct:MStats
start	runtime\malloc.h	/^	PageID	start;		\/\/ starting page number$/;"	m	struct:MSpan
stat	runtime\malloc.h	/^	uint64*	stat;$/;"	m	struct:FixAlloc
state	runtime\malloc.h	/^	uint32	state;		\/\/ MSpanInUse etc$/;"	m	struct:MSpan
sys	runtime\malloc.h	/^	uint64	sys;		\/\/ bytes obtained from system (should be sum of xxx_sys below, no locking, approximate)$/;"	m	struct:MStats
total_alloc	runtime\malloc.h	/^	uint64	total_alloc;	\/\/ bytes allocated (even if freed)$/;"	m	struct:MStats
types	runtime\malloc.h	/^	MTypes	types;		\/\/ types of allocated objects in this span$/;"	m	struct:MSpan
unusedsince	runtime\malloc.h	/^	int64   unusedsince;	\/\/ First time spotted by GC in MSpanFree state$/;"	m	struct:MSpan
MCache_Free	runtime\mcache.c	/^runtime·MCache_Free(MCache *c, void *v, int32 sizeclass, uintptr size)$/;"	f
MCache_Refill	runtime\mcache.c	/^runtime·MCache_Refill(MCache *c, int32 sizeclass)$/;"	f
MCache_ReleaseAll	runtime\mcache.c	/^runtime·MCache_ReleaseAll(MCache *c)$/;"	f
ReleaseN	runtime\mcache.c	/^ReleaseN(MCacheList *l, int32 n, int32 sizeclass)$/;"	f	file:
MCentral_AllocList	runtime\mcentral.c	/^runtime·MCentral_AllocList(MCentral *c, MLink **pfirst)$/;"	f
MCentral_Free	runtime\mcentral.c	/^MCentral_Free(MCentral *c, void *v)$/;"	f	file:
MCentral_FreeList	runtime\mcentral.c	/^runtime·MCentral_FreeList(MCentral *c, MLink *start)$/;"	f
MCentral_FreeSpan	runtime\mcentral.c	/^runtime·MCentral_FreeSpan(MCentral *c, MSpan *s, int32 n, MLink *start, MLink *end)$/;"	f
MCentral_Grow	runtime\mcentral.c	/^MCentral_Grow(MCentral *c)$/;"	f	file:
MCentral_Init	runtime\mcentral.c	/^runtime·MCentral_Init(MCentral *c, int32 sizeclass)$/;"	f
MGetSizeClassInfo	runtime\mcentral.c	/^runtime·MGetSizeClassInfo(int32 sizeclass, uintptr *sizep, int32 *npagesp, int32 *nobj)$/;"	f
ENOMEM	runtime\mem_darwin.c	/^	ENOMEM = 12,$/;"	e	enum:__anon43	file:
SysAlloc	runtime\mem_darwin.c	/^runtime·SysAlloc(uintptr n, uint64 *stat)$/;"	f
SysFree	runtime\mem_darwin.c	/^runtime·SysFree(void *v, uintptr n, uint64 *stat)$/;"	f
SysMap	runtime\mem_darwin.c	/^runtime·SysMap(void *v, uintptr n, uint64 *stat)$/;"	f
SysReserve	runtime\mem_darwin.c	/^runtime·SysReserve(void *v, uintptr n)$/;"	f
SysUnused	runtime\mem_darwin.c	/^runtime·SysUnused(void *v, uintptr n)$/;"	f
SysUsed	runtime\mem_darwin.c	/^runtime·SysUsed(void *v, uintptr n)$/;"	f
ENOMEM	runtime\mem_dragonfly.c	/^	ENOMEM = 12,$/;"	e	enum:__anon44	file:
SysAlloc	runtime\mem_dragonfly.c	/^runtime·SysAlloc(uintptr n, uint64 *stat)$/;"	f
SysFree	runtime\mem_dragonfly.c	/^runtime·SysFree(void *v, uintptr n, uint64 *stat)$/;"	f
SysMap	runtime\mem_dragonfly.c	/^runtime·SysMap(void *v, uintptr n, uint64 *stat)$/;"	f
SysReserve	runtime\mem_dragonfly.c	/^runtime·SysReserve(void *v, uintptr n)$/;"	f
SysUnused	runtime\mem_dragonfly.c	/^runtime·SysUnused(void *v, uintptr n)$/;"	f
SysUsed	runtime\mem_dragonfly.c	/^runtime·SysUsed(void *v, uintptr n)$/;"	f
ENOMEM	runtime\mem_freebsd.c	/^	ENOMEM = 12,$/;"	e	enum:__anon45	file:
SysAlloc	runtime\mem_freebsd.c	/^runtime·SysAlloc(uintptr n, uint64 *stat)$/;"	f
SysFree	runtime\mem_freebsd.c	/^runtime·SysFree(void *v, uintptr n, uint64 *stat)$/;"	f
SysMap	runtime\mem_freebsd.c	/^runtime·SysMap(void *v, uintptr n, uint64 *stat)$/;"	f
SysReserve	runtime\mem_freebsd.c	/^runtime·SysReserve(void *v, uintptr n)$/;"	f
SysUnused	runtime\mem_freebsd.c	/^runtime·SysUnused(void *v, uintptr n)$/;"	f
SysUsed	runtime\mem_freebsd.c	/^runtime·SysUsed(void *v, uintptr n)$/;"	f
SysAlloc	runtime\mem_linux.c	/^runtime·SysAlloc(uintptr n, uint64 *stat)$/;"	f
SysFree	runtime\mem_linux.c	/^runtime·SysFree(void *v, uintptr n, uint64 *stat)$/;"	f
SysMap	runtime\mem_linux.c	/^runtime·SysMap(void *v, uintptr n, uint64 *stat)$/;"	f
SysReserve	runtime\mem_linux.c	/^runtime·SysReserve(void *v, uintptr n)$/;"	f
SysUnused	runtime\mem_linux.c	/^runtime·SysUnused(void *v, uintptr n)$/;"	f
SysUsed	runtime\mem_linux.c	/^runtime·SysUsed(void *v, uintptr n)$/;"	f
_PAGE_SIZE	runtime\mem_linux.c	/^	_PAGE_SIZE = 4096,$/;"	e	enum:__anon46	file:
addrspace_free	runtime\mem_linux.c	/^addrspace_free(void *v, uintptr n)$/;"	f	file:
mmap_fixed	runtime\mem_linux.c	/^mmap_fixed(byte *v, uintptr n, int32 prot, int32 flags, int32 fd, uint32 offset)$/;"	f	file:
ENOMEM	runtime\mem_netbsd.c	/^	ENOMEM = 12,$/;"	e	enum:__anon47	file:
SysAlloc	runtime\mem_netbsd.c	/^runtime·SysAlloc(uintptr n, uint64 *stat)$/;"	f
SysFree	runtime\mem_netbsd.c	/^runtime·SysFree(void *v, uintptr n, uint64 *stat)$/;"	f
SysMap	runtime\mem_netbsd.c	/^runtime·SysMap(void *v, uintptr n, uint64 *stat)$/;"	f
SysReserve	runtime\mem_netbsd.c	/^runtime·SysReserve(void *v, uintptr n)$/;"	f
SysUnused	runtime\mem_netbsd.c	/^runtime·SysUnused(void *v, uintptr n)$/;"	f
SysUsed	runtime\mem_netbsd.c	/^runtime·SysUsed(void *v, uintptr n)$/;"	f
ENOMEM	runtime\mem_openbsd.c	/^	ENOMEM = 12,$/;"	e	enum:__anon48	file:
SysAlloc	runtime\mem_openbsd.c	/^runtime·SysAlloc(uintptr n, uint64 *stat)$/;"	f
SysFree	runtime\mem_openbsd.c	/^runtime·SysFree(void *v, uintptr n, uint64 *stat)$/;"	f
SysMap	runtime\mem_openbsd.c	/^runtime·SysMap(void *v, uintptr n, uint64 *stat)$/;"	f
SysReserve	runtime\mem_openbsd.c	/^runtime·SysReserve(void *v, uintptr n)$/;"	f
SysUnused	runtime\mem_openbsd.c	/^runtime·SysUnused(void *v, uintptr n)$/;"	f
SysUsed	runtime\mem_openbsd.c	/^runtime·SysUsed(void *v, uintptr n)$/;"	f
Round	runtime\mem_plan9.c	/^	Round = PAGESIZE-1$/;"	e	enum:__anon49	file:
SysAlloc	runtime\mem_plan9.c	/^runtime·SysAlloc(uintptr nbytes, uint64 *stat)$/;"	f
SysFree	runtime\mem_plan9.c	/^runtime·SysFree(void *v, uintptr nbytes, uint64 *stat)$/;"	f
SysMap	runtime\mem_plan9.c	/^runtime·SysMap(void *v, uintptr nbytes, uint64 *stat)$/;"	f
SysReserve	runtime\mem_plan9.c	/^runtime·SysReserve(void *v, uintptr nbytes)$/;"	f
SysUnused	runtime\mem_plan9.c	/^runtime·SysUnused(void *v, uintptr nbytes)$/;"	f
SysUsed	runtime\mem_plan9.c	/^runtime·SysUsed(void *v, uintptr nbytes)$/;"	f
bloc	runtime\mem_plan9.c	/^static byte *bloc = { end };$/;"	v	file:
memlock	runtime\mem_plan9.c	/^static Lock memlock;$/;"	v	file:
MEM_COMMIT	runtime\mem_windows.c	/^	MEM_COMMIT = 0x1000,$/;"	e	enum:__anon50	file:
MEM_DECOMMIT	runtime\mem_windows.c	/^	MEM_DECOMMIT = 0x4000,$/;"	e	enum:__anon50	file:
MEM_RELEASE	runtime\mem_windows.c	/^	MEM_RELEASE = 0x8000,$/;"	e	enum:__anon50	file:
MEM_RESERVE	runtime\mem_windows.c	/^	MEM_RESERVE = 0x2000,$/;"	e	enum:__anon50	file:
PAGE_READWRITE	runtime\mem_windows.c	/^	PAGE_READWRITE = 0x0004,$/;"	e	enum:__anon50	file:
SysAlloc	runtime\mem_windows.c	/^runtime·SysAlloc(uintptr n, uint64 *stat)$/;"	f
SysFree	runtime\mem_windows.c	/^runtime·SysFree(void *v, uintptr n, uint64 *stat)$/;"	f
SysMap	runtime\mem_windows.c	/^runtime·SysMap(void *v, uintptr n, uint64 *stat)$/;"	f
SysReserve	runtime\mem_windows.c	/^runtime·SysReserve(void *v, uintptr n)$/;"	f
SysUnused	runtime\mem_windows.c	/^runtime·SysUnused(void *v, uintptr n)$/;"	f
SysUsed	runtime\mem_windows.c	/^runtime·SysUsed(void *v, uintptr n)$/;"	f
N	runtime\memclr_arm.s	/^N = 12$/;"	d
TEXT	runtime\memclr_arm.s	/^TEXT runtime·memclr(SB),NOSPLIT,$0-8$/;"	l
TMP	runtime\memclr_arm.s	/^TMP = 12				\/* N and TMP don't overlap *\/$/;"	d
TO	runtime\memclr_arm.s	/^TO = 8$/;"	d
TOE	runtime\memclr_arm.s	/^TOE = 11$/;"	d
_1tail	runtime\memclr_arm.s	/^_1tail:$/;"	l
_4align	runtime\memclr_arm.s	/^_4align:				\/* align on 4 *\/$/;"	l
_4aligned	runtime\memclr_arm.s	/^_4aligned:$/;"	l
_4loop	runtime\memclr_arm.s	/^_4loop:$/;"	l
_4tail	runtime\memclr_arm.s	/^_4tail:$/;"	l
_f32loop	runtime\memclr_arm.s	/^_f32loop:$/;"	l
_return	runtime\memclr_arm.s	/^_return:$/;"	l
TEXT	runtime\memmove_386.s	/^TEXT runtime·memmove(SB), NOSPLIT, $0-12$/;"	l
back	runtime\memmove_386.s	/^back:$/;"	l
forward	runtime\memmove_386.s	/^forward:	$/;"	l
move_0	runtime\memmove_386.s	/^move_0:$/;"	l
move_17through32	runtime\memmove_386.s	/^move_17through32:$/;"	l
move_1or2	runtime\memmove_386.s	/^move_1or2:$/;"	l
move_33through64	runtime\memmove_386.s	/^move_33through64:$/;"	l
move_3or4	runtime\memmove_386.s	/^move_3or4:$/;"	l
move_5through8	runtime\memmove_386.s	/^move_5through8:$/;"	l
move_65through128	runtime\memmove_386.s	/^move_65through128:$/;"	l
move_9through16	runtime\memmove_386.s	/^move_9through16:$/;"	l
nosse2	runtime\memmove_386.s	/^nosse2:$/;"	l
tail	runtime\memmove_386.s	/^tail:$/;"	l
TEXT	runtime\memmove_amd64.s	/^TEXT runtime·memmove(SB), NOSPLIT, $0-24$/;"	l
back	runtime\memmove_amd64.s	/^back:$/;"	l
forward	runtime\memmove_amd64.s	/^forward:$/;"	l
move_0	runtime\memmove_amd64.s	/^move_0:$/;"	l
move_129through256	runtime\memmove_amd64.s	/^move_129through256:$/;"	l
move_17through32	runtime\memmove_amd64.s	/^move_17through32:$/;"	l
move_1or2	runtime\memmove_amd64.s	/^move_1or2:$/;"	l
move_33through64	runtime\memmove_amd64.s	/^move_33through64:$/;"	l
move_3or4	runtime\memmove_amd64.s	/^move_3or4:$/;"	l
move_5through8	runtime\memmove_amd64.s	/^move_5through8:$/;"	l
move_65through128	runtime\memmove_amd64.s	/^move_65through128:$/;"	l
move_9through16	runtime\memmove_amd64.s	/^move_9through16:$/;"	l
tail	runtime\memmove_amd64.s	/^tail:$/;"	l
BR0	runtime\memmove_arm.s	/^BR0 = 0					\/* shared with TS *\/$/;"	d
BR1	runtime\memmove_arm.s	/^BR1 = 1$/;"	d
BR2	runtime\memmove_arm.s	/^BR2 = 2$/;"	d
BR3	runtime\memmove_arm.s	/^BR3 = 3$/;"	d
BW0	runtime\memmove_arm.s	/^BW0 = 1$/;"	d
BW1	runtime\memmove_arm.s	/^BW1 = 2$/;"	d
BW2	runtime\memmove_arm.s	/^BW2 = 3$/;"	d
BW3	runtime\memmove_arm.s	/^BW3 = 4$/;"	d
FR0	runtime\memmove_arm.s	/^FR0 = 2$/;"	d
FR1	runtime\memmove_arm.s	/^FR1 = 3$/;"	d
FR2	runtime\memmove_arm.s	/^FR2 = 4$/;"	d
FR3	runtime\memmove_arm.s	/^FR3 = 8					\/* shared with TE *\/$/;"	d
FROM	runtime\memmove_arm.s	/^FROM = 11$/;"	d
FW0	runtime\memmove_arm.s	/^FW0 = 1$/;"	d
FW1	runtime\memmove_arm.s	/^FW1 = 2$/;"	d
FW2	runtime\memmove_arm.s	/^FW2 = 3$/;"	d
FW3	runtime\memmove_arm.s	/^FW3 = 4$/;"	d
LSHIFT	runtime\memmove_arm.s	/^LSHIFT = 6$/;"	d
N	runtime\memmove_arm.s	/^N = 12$/;"	d
OFFSET	runtime\memmove_arm.s	/^OFFSET = 7$/;"	d
RSHIFT	runtime\memmove_arm.s	/^RSHIFT = 5$/;"	d
TE	runtime\memmove_arm.s	/^TE = 8$/;"	d
TEXT	runtime\memmove_arm.s	/^TEXT runtime·memmove(SB), NOSPLIT, $4-12$/;"	l
TMP	runtime\memmove_arm.s	/^TMP = 12				\/* N and TMP don't overlap *\/$/;"	d
TMP1	runtime\memmove_arm.s	/^TMP1 = 5$/;"	d
TS	runtime\memmove_arm.s	/^TS = 0$/;"	d
_b1tail	runtime\memmove_arm.s	/^_b1tail:				\/* remaining bytes *\/$/;"	l
_b32loop	runtime\memmove_arm.s	/^_b32loop:$/;"	l
_b4align	runtime\memmove_arm.s	/^_b4align:				\/* align destination on 4 *\/$/;"	l
_b4aligned	runtime\memmove_arm.s	/^_b4aligned:				\/* is source now aligned? *\/$/;"	l
_b4loop	runtime\memmove_arm.s	/^_b4loop:$/;"	l
_b4tail	runtime\memmove_arm.s	/^_b4tail:				\/* do remaining words if possible *\/$/;"	l
_back	runtime\memmove_arm.s	/^_back:$/;"	l
_bu16loop	runtime\memmove_arm.s	/^_bu16loop:$/;"	l
_bu1tail	runtime\memmove_arm.s	/^_bu1tail:$/;"	l
_bunaligned	runtime\memmove_arm.s	/^_bunaligned:$/;"	l
_f1tail	runtime\memmove_arm.s	/^_f1tail:$/;"	l
_f32loop	runtime\memmove_arm.s	/^_f32loop:$/;"	l
_f4align	runtime\memmove_arm.s	/^_f4align:				\/* align destination on 4 *\/$/;"	l
_f4aligned	runtime\memmove_arm.s	/^_f4aligned:				\/* is source now aligned? *\/$/;"	l
_f4loop	runtime\memmove_arm.s	/^_f4loop:$/;"	l
_f4tail	runtime\memmove_arm.s	/^_f4tail:$/;"	l
_forward	runtime\memmove_arm.s	/^_forward:$/;"	l
_fu16loop	runtime\memmove_arm.s	/^_fu16loop:$/;"	l
_fu1tail	runtime\memmove_arm.s	/^_fu1tail:$/;"	l
_funaligned	runtime\memmove_arm.s	/^_funaligned:$/;"	l
_memmove	runtime\memmove_arm.s	/^_memmove:$/;"	l
_return	runtime\memmove_arm.s	/^_return:$/;"	l
Fin	runtime\mfinal.c	/^struct Fin$/;"	s	file:
Fin	runtime\mfinal.c	/^typedef struct Fin Fin;$/;"	t	typeref:struct:Fin	file:
Fintab	runtime\mfinal.c	/^	Fintab;$/;"	m	struct:__anon52	file:
Fintab	runtime\mfinal.c	/^struct Fintab$/;"	s	file:
Fintab	runtime\mfinal.c	/^typedef struct Fintab Fintab;$/;"	t	typeref:struct:Fintab	file:
Lock	runtime\mfinal.c	/^	Lock;$/;"	m	struct:Fintab	file:
TAB	runtime\mfinal.c	40;"	d	file:
TABSZ	runtime\mfinal.c	39;"	d	file:
addfinalizer	runtime\mfinal.c	/^runtime·addfinalizer(void *p, FuncVal *f, uintptr nret, Type *fint, PtrType *ot)$/;"	f
addfintab	runtime\mfinal.c	/^addfintab(Fintab *t, void *k, FuncVal *fn, uintptr nret, Type *fint, PtrType *ot)$/;"	f	file:
debug	runtime\mfinal.c	/^enum { debug = 0 };$/;"	e	enum:__anon51	file:
fint	runtime\mfinal.c	/^	Type *fint;$/;"	m	struct:Fin	file:
fintab	runtime\mfinal.c	/^} fintab[TABSZ];$/;"	v	typeref:struct:__anon52	file:
fn	runtime\mfinal.c	/^	FuncVal *fn;$/;"	m	struct:Fin	file:
getfinalizer	runtime\mfinal.c	/^runtime·getfinalizer(void *p, bool del, FuncVal **fn, uintptr *nret, Type **fint, PtrType **ot)$/;"	f
key	runtime\mfinal.c	/^	void **key;$/;"	m	struct:Fintab	file:
lookfintab	runtime\mfinal.c	/^lookfintab(Fintab *t, void *k, bool del, Fin *f)$/;"	f	file:
max	runtime\mfinal.c	/^	int32 max;	\/\/ size of key, val allocations$/;"	m	struct:Fintab	file:
ndead	runtime\mfinal.c	/^	int32 ndead;	\/\/ number of dead (-1) entries in key$/;"	m	struct:Fintab	file:
nkey	runtime\mfinal.c	/^	int32 nkey;	\/\/ number of non-nil entries in key$/;"	m	struct:Fintab	file:
nret	runtime\mfinal.c	/^	uintptr nret;$/;"	m	struct:Fin	file:
ot	runtime\mfinal.c	/^	PtrType *ot;$/;"	m	struct:Fin	file:
pad	runtime\mfinal.c	/^	uint8 pad[CacheLineSize - sizeof(Fintab)];	$/;"	m	struct:__anon52	file:
resizefintab	runtime\mfinal.c	/^resizefintab(Fintab *tab)$/;"	f	file:
val	runtime\mfinal.c	/^	Fin *val;$/;"	m	struct:Fintab	file:
walkfintab	runtime\mfinal.c	/^runtime·walkfintab(void (*fn)(void*))$/;"	f
FixAlloc_Alloc	runtime\mfixalloc.c	/^runtime·FixAlloc_Alloc(FixAlloc *f)$/;"	f
FixAlloc_Free	runtime\mfixalloc.c	/^runtime·FixAlloc_Free(FixAlloc *f, void *p)$/;"	f
FixAlloc_Init	runtime\mfixalloc.c	/^runtime·FixAlloc_Init(FixAlloc *f, uintptr size, void (*first)(void*, byte*), void *arg, uint64 *stat)$/;"	f
BitVector	runtime\mgc0.c	/^struct BitVector$/;"	s	file:
BitVector	runtime\mgc0.c	/^typedef struct BitVector BitVector;$/;"	t	typeref:struct:BitVector	file:
BitsEface	runtime\mgc0.c	/^	BitsEface = 3,$/;"	e	enum:__anon53	file:
BitsIface	runtime\mgc0.c	/^	BitsIface = 2,$/;"	e	enum:__anon53	file:
BitsNoPointer	runtime\mgc0.c	/^	BitsNoPointer = 0,$/;"	e	enum:__anon53	file:
BitsPerPointer	runtime\mgc0.c	/^	BitsPerPointer = 2,$/;"	e	enum:__anon53	file:
BitsPointer	runtime\mgc0.c	/^	BitsPointer = 1,$/;"	e	enum:__anon53	file:
BufferList	runtime\mgc0.c	/^struct BufferList$/;"	s	file:
BufferList	runtime\mgc0.c	/^typedef struct BufferList BufferList;$/;"	t	typeref:struct:BufferList	file:
CollectStats	runtime\mgc0.c	/^	CollectStats = 0,$/;"	e	enum:__anon53	file:
Debug	runtime\mgc0.c	/^	Debug = 0,$/;"	e	enum:__anon53	file:
DebugMark	runtime\mgc0.c	/^	DebugMark = 0,  \/\/ run second pass to check mark$/;"	e	enum:__anon53	file:
FinBlock	runtime\mgc0.c	/^struct FinBlock$/;"	s	file:
FinBlock	runtime\mgc0.c	/^typedef struct FinBlock FinBlock;$/;"	t	typeref:struct:FinBlock	file:
Finalizer	runtime\mgc0.c	/^struct Finalizer$/;"	s	file:
Finalizer	runtime\mgc0.c	/^typedef struct Finalizer Finalizer;$/;"	t	typeref:struct:Finalizer	file:
Frame	runtime\mgc0.c	/^struct Frame {$/;"	s	file:
Frame	runtime\mgc0.c	/^typedef struct Frame Frame;$/;"	t	typeref:struct:Frame	file:
GC_CHAN	runtime\mgc0.c	/^	GC_CHAN,$/;"	e	enum:__anon55	file:
GC_DEFAULT_PTR	runtime\mgc0.c	/^	GC_DEFAULT_PTR = GC_NUM_INSTR,$/;"	e	enum:__anon55	file:
GC_NUM_INSTR2	runtime\mgc0.c	/^	GC_NUM_INSTR2$/;"	e	enum:__anon55	file:
GcpercentUnknown	runtime\mgc0.c	1824;"	d	file:
IgnorePreciseGC	runtime\mgc0.c	/^	IgnorePreciseGC = 0,$/;"	e	enum:__anon53	file:
IntermediateBufferCapacity	runtime\mgc0.c	/^	IntermediateBufferCapacity = 64,$/;"	e	enum:__anon53	file:
LOOP	runtime\mgc0.c	/^	LOOP = 2,$/;"	e	enum:__anon53	file:
Lock	runtime\mgc0.c	/^	Lock;$/;"	m	struct:__anon54	file:
MHeap_MapBits	runtime\mgc0.c	/^runtime·MHeap_MapBits(MHeap *h)$/;"	f
Obj	runtime\mgc0.c	/^struct Obj$/;"	s	file:
Obj	runtime\mgc0.c	/^typedef struct Obj Obj;$/;"	t	typeref:struct:Obj	file:
PC_BITS	runtime\mgc0.c	/^	PC_BITS = PRECISE | LOOP,$/;"	e	enum:__anon53	file:
PRECISE	runtime\mgc0.c	/^	PRECISE = 1,$/;"	e	enum:__anon53	file:
PtrTarget	runtime\mgc0.c	/^struct PtrTarget$/;"	s	file:
PtrTarget	runtime\mgc0.c	/^typedef struct PtrTarget PtrTarget;$/;"	t	typeref:struct:PtrTarget	file:
ReadMemStats	runtime\mgc0.c	/^runtime·ReadMemStats(MStats *stats)$/;"	f
SIZE	runtime\mgc0.c	105;"	d	file:
SIZE	runtime\mgc0.c	110;"	d	file:
ScanStackByFrames	runtime\mgc0.c	/^	ScanStackByFrames = 0,$/;"	e	enum:__anon53	file:
Workbuf	runtime\mgc0.c	/^struct Workbuf$/;"	s	file:
Workbuf	runtime\mgc0.c	/^typedef struct Workbuf Workbuf;$/;"	t	typeref:struct:Workbuf	file:
_padding	runtime\mgc0.c	/^	uint8   _padding[SIZE%sizeof(Obj) + sizeof(Obj)];$/;"	m	struct:Workbuf	file:
addfinroots	runtime\mgc0.c	/^addfinroots(void *v)$/;"	f	file:
addframeroots	runtime\mgc0.c	/^addframeroots(Stkframe *frame, void*)$/;"	f	file:
addroot	runtime\mgc0.c	/^addroot(Obj obj)$/;"	f	file:
addroots	runtime\mgc0.c	/^addroots(void)$/;"	f	file:
addstackroots	runtime\mgc0.c	/^addstackroots(G *gp)$/;"	f	file:
alldone	runtime\mgc0.c	/^	Note	alldone;$/;"	m	struct:__anon54	file:
allfin	runtime\mgc0.c	/^static FinBlock *allfin; \/\/ list of all blocks$/;"	v	file:
alllink	runtime\mgc0.c	/^	FinBlock *alllink;$/;"	m	struct:FinBlock	file:
arg	runtime\mgc0.c	/^	void *arg;$/;"	m	struct:Finalizer	file:
b	runtime\mgc0.c	/^	uintptr count, elemsize, b;$/;"	m	struct:Frame	file:
bitAllocated	runtime\mgc0.c	70;"	d	file:
bitBlockBoundary	runtime\mgc0.c	74;"	d	file:
bitMarked	runtime\mgc0.c	72;"	d	file:
bitMask	runtime\mgc0.c	76;"	d	file:
bitNoScan	runtime\mgc0.c	71;"	d	file:
bitShift	runtime\mgc0.c	/^	bitShift = sizeof(void*)*8\/4,$/;"	e	enum:__anon53	file:
bitSpecial	runtime\mgc0.c	73;"	d	file:
blockspecial	runtime\mgc0.c	/^runtime·blockspecial(void *v)$/;"	f
bufferList	runtime\mgc0.c	/^static BufferList bufferList[MaxGcproc];$/;"	v	file:
busy	runtime\mgc0.c	/^	uint32 busy;$/;"	m	struct:BufferList	file:
cachestats	runtime\mgc0.c	/^cachestats(void)$/;"	f	file:
cap	runtime\mgc0.c	/^	int32 cap;$/;"	m	struct:FinBlock	file:
chanProg	runtime\mgc0.c	/^static uintptr chanProg[2] = {0, GC_CHAN};$/;"	v	file:
checkfreed	runtime\mgc0.c	/^runtime·checkfreed(void *v, uintptr n)$/;"	f
checkptr	runtime\mgc0.c	/^checkptr(void *obj, uintptr objti)$/;"	f	file:
chunk	runtime\mgc0.c	/^	byte	*chunk;$/;"	m	struct:__anon54	file:
cnt	runtime\mgc0.c	/^		uint64 cnt;$/;"	m	struct:__anon56::__anon57	file:
cnt	runtime\mgc0.c	/^		uint64 cnt;$/;"	m	struct:__anon56::__anon58	file:
cnt	runtime\mgc0.c	/^	int32 cnt;$/;"	m	struct:FinBlock	file:
count	runtime\mgc0.c	/^	uintptr count, elemsize, b;$/;"	m	struct:Frame	file:
data	runtime\mgc0.c	/^	uint32 data[];$/;"	m	struct:BitVector	file:
debug_scanblock	runtime\mgc0.c	/^debug_scanblock(byte *b, uintptr n)$/;"	f	file:
debugmarkdone	runtime\mgc0.c	/^	volatile uint32 debugmarkdone;$/;"	m	struct:__anon54	file:
defaultProg	runtime\mgc0.c	/^static uintptr defaultProg[2] = {PtrSize, GC_DEFAULT_PTR};$/;"	v	file:
dumpspan	runtime\mgc0.c	/^dumpspan(uint32 idx)$/;"	f	file:
elemsize	runtime\mgc0.c	/^	uintptr count, elemsize, b;$/;"	m	struct:Frame	file:
empty	runtime\mgc0.c	/^	uint64	empty; \/\/ lock-free list of empty blocks$/;"	m	struct:__anon54	file:
enqueue	runtime\mgc0.c	/^enqueue(Obj obj, Workbuf **_wbuf, Obj **_wp, uintptr *_nobj)$/;"	f	file:
fin	runtime\mgc0.c	/^	Finalizer fin[1];$/;"	m	struct:FinBlock	file:
finc	runtime\mgc0.c	/^static FinBlock *finc; \/\/ cache of free blocks$/;"	v	file:
fing	runtime\mgc0.c	/^static G *fing;$/;"	v	file:
fingwait	runtime\mgc0.c	/^static int32 fingwait;$/;"	v	file:
finlock	runtime\mgc0.c	/^static Lock finlock;$/;"	v	file:
finq	runtime\mgc0.c	/^static FinBlock *finq; \/\/ list of finalizers that are to be executed$/;"	v	file:
fint	runtime\mgc0.c	/^	Type *fint;$/;"	m	struct:Finalizer	file:
flushobjbuf	runtime\mgc0.c	/^flushobjbuf(Obj *objbuf, Obj **objbufpos, Obj **_wp, Workbuf **_wbuf, uintptr *_nobj)$/;"	f	file:
flushptrbuf	runtime\mgc0.c	/^	} flushptrbuf;$/;"	m	struct:__anon56	typeref:struct:__anon56::__anon59	file:
flushptrbuf	runtime\mgc0.c	/^flushptrbuf(PtrTarget *ptrbuf, PtrTarget **ptrbufpos, Obj **_wp, Workbuf **_wbuf, uintptr *_nobj)$/;"	f	file:
fn	runtime\mgc0.c	/^	FuncVal *fn;$/;"	m	struct:Finalizer	file:
foundbit	runtime\mgc0.c	/^		uint64 foundbit;$/;"	m	struct:__anon56::__anon59	file:
foundbit	runtime\mgc0.c	/^		uint64 foundbit;$/;"	m	struct:__anon56::__anon60	file:
foundspan	runtime\mgc0.c	/^		uint64 foundspan;$/;"	m	struct:__anon56::__anon59	file:
foundspan	runtime\mgc0.c	/^		uint64 foundspan;$/;"	m	struct:__anon56::__anon60	file:
foundword	runtime\mgc0.c	/^		uint64 foundword;$/;"	m	struct:__anon56::__anon59	file:
foundword	runtime\mgc0.c	/^		uint64 foundword;$/;"	m	struct:__anon56::__anon60	file:
full	runtime\mgc0.c	/^	uint64	full;  \/\/ lock-free list of full blocks$/;"	m	struct:__anon54	file:
gc	runtime\mgc0.c	/^gc(struct gc_args *args)$/;"	f	file:
gc	runtime\mgc0.c	/^runtime·gc(int32 force)$/;"	f
gc_args	runtime\mgc0.c	/^struct gc_args$/;"	s	file:
gchelper	runtime\mgc0.c	/^runtime·gchelper(void)$/;"	f
gchelperstart	runtime\mgc0.c	/^gchelperstart(void)$/;"	f	file:
gcpercent	runtime\mgc0.c	/^static int32 gcpercent = GcpercentUnknown;$/;"	v	file:
gcstats	runtime\mgc0.c	/^} gcstats;$/;"	v	typeref:struct:__anon56	file:
getempty	runtime\mgc0.c	/^getempty(Workbuf *b)$/;"	f	file:
getfull	runtime\mgc0.c	/^	uint64 getfull;$/;"	m	struct:__anon56	file:
getfull	runtime\mgc0.c	/^getfull(Workbuf *b)$/;"	f	file:
handlespecial	runtime\mgc0.c	/^handlespecial(byte *p, uintptr size)$/;"	f	file:
handoff	runtime\mgc0.c	/^handoff(Workbuf *b)$/;"	f	file:
handoffThreshold	runtime\mgc0.c	/^	handoffThreshold = 4,$/;"	e	enum:__anon53	file:
instr	runtime\mgc0.c	/^	uint64 instr[GC_NUM_INSTR2];$/;"	m	struct:__anon56	file:
itabtype	runtime\mgc0.c	/^static Type *itabtype;$/;"	v	file:
loop_or_ret	runtime\mgc0.c	/^	uintptr *loop_or_ret;$/;"	m	struct:Frame	file:
markallocated	runtime\mgc0.c	/^runtime·markallocated(void *v, uintptr n, bool noscan)$/;"	f
markfor	runtime\mgc0.c	/^	ParFor	*markfor;$/;"	m	struct:__anon54	file:
markfreed	runtime\mgc0.c	/^runtime·markfreed(void *v, uintptr n)$/;"	f
markonly	runtime\mgc0.c	/^	} markonly;$/;"	m	struct:__anon56	typeref:struct:__anon56::__anon60	file:
markonly	runtime\mgc0.c	/^markonly(void *obj)$/;"	f	file:
markroot	runtime\mgc0.c	/^markroot(ParFor *desc, uint32 i)$/;"	f	file:
markspan	runtime\mgc0.c	/^runtime·markspan(void *v, uintptr size, uintptr n, bool leftover)$/;"	f
memorydump	runtime\mgc0.c	/^runtime·memorydump(void)$/;"	f
mgc	runtime\mgc0.c	/^mgc(G *gp)$/;"	f	file:
n	runtime\mgc0.c	/^	int32 n;$/;"	m	struct:BitVector	file:
n	runtime\mgc0.c	/^	uintptr	n;	\/\/ size of data in bytes$/;"	m	struct:Obj	file:
nbytes	runtime\mgc0.c	/^	uint64 nbytes;$/;"	m	struct:__anon56	file:
nchunk	runtime\mgc0.c	/^	uintptr	nchunk;$/;"	m	struct:__anon54	file:
ndone	runtime\mgc0.c	/^	volatile uint32	ndone;$/;"	m	struct:__anon54	file:
next	runtime\mgc0.c	/^	FinBlock *next;$/;"	m	struct:FinBlock	file:
nobj	runtime\mgc0.c	/^	uintptr nobj;$/;"	m	struct:Workbuf	file:
node	runtime\mgc0.c	/^	LFNode  node; \/\/ must be first$/;"	m	struct:Workbuf	file:
notype	runtime\mgc0.c	/^		uint64 notype;$/;"	m	struct:__anon56::__anon58	file:
nproc	runtime\mgc0.c	/^	uint32	nproc;$/;"	m	struct:__anon54	file:
nret	runtime\mgc0.c	/^	uintptr nret;$/;"	m	struct:Finalizer	file:
nroot	runtime\mgc0.c	/^	uint32	nroot;$/;"	m	struct:__anon54	file:
nwait	runtime\mgc0.c	/^	volatile uint32	nwait;$/;"	m	struct:__anon54	file:
obj	runtime\mgc0.c	/^	Obj     obj[SIZE\/sizeof(Obj) - 1];$/;"	m	struct:Workbuf	file:
obj	runtime\mgc0.c	/^	Obj obj[IntermediateBufferCapacity];$/;"	m	struct:BufferList	file:
obj	runtime\mgc0.c	/^	} obj;$/;"	m	struct:__anon56	typeref:struct:__anon56::__anon58	file:
ot	runtime\mgc0.c	/^	PtrType *ot;$/;"	m	struct:Finalizer	file:
p	runtime\mgc0.c	/^	byte	*p;	\/\/ data pointer$/;"	m	struct:Obj	file:
p	runtime\mgc0.c	/^	void *p;$/;"	m	struct:PtrTarget	file:
pad	runtime\mgc0.c	/^	byte pad[CacheLineSize];$/;"	m	struct:BufferList	file:
pad0	runtime\mgc0.c	/^	byte	pad0[CacheLineSize]; \/\/ prevents false-sharing between full\/empty and nproc\/nwait$/;"	m	struct:__anon54	file:
ptr	runtime\mgc0.c	/^	} ptr;$/;"	m	struct:__anon56	typeref:struct:__anon56::__anon57	file:
ptrtarget	runtime\mgc0.c	/^	PtrTarget ptrtarget[IntermediateBufferCapacity];$/;"	m	struct:BufferList	file:
putempty	runtime\mgc0.c	/^	uint64 putempty;$/;"	m	struct:__anon56	file:
putempty	runtime\mgc0.c	/^putempty(Workbuf *b)$/;"	f	file:
readGCStats	runtime\mgc0.c	/^runtime∕debug·readGCStats(Slice *pauses)$/;"	f
readgogc	runtime\mgc0.c	/^readgogc(void)$/;"	f	file:
rescan	runtime\mgc0.c	/^	uint64 rescan;$/;"	m	struct:__anon56	file:
rescanbytes	runtime\mgc0.c	/^	uint64 rescanbytes;$/;"	m	struct:__anon56	file:
rootcap	runtime\mgc0.c	/^	uint32	rootcap;$/;"	m	struct:__anon54	file:
roots	runtime\mgc0.c	/^	Obj	*roots;$/;"	m	struct:__anon54	file:
runfinq	runtime\mgc0.c	/^runfinq(void)$/;"	f	file:
runfinqv	runtime\mgc0.c	/^static FuncVal runfinqv = {runfinq};$/;"	v	file:
scanbitvector	runtime\mgc0.c	/^scanbitvector(byte *scanp, BitVector *bv, bool afterprologue)$/;"	f	file:
scanblock	runtime\mgc0.c	/^scanblock(Workbuf *wbuf, Obj *wp, uintptr nobj, bool keepworking)$/;"	f	file:
scaninterfacedata	runtime\mgc0.c	/^scaninterfacedata(uintptr bits, byte *scanp, bool afterprologue)$/;"	f	file:
setGCPercent	runtime\mgc0.c	/^runtime∕debug·setGCPercent(intgo in, intgo out)$/;"	f
setblockspecial	runtime\mgc0.c	/^runtime·setblockspecial(void *v, bool s)$/;"	f
start_time	runtime\mgc0.c	/^	int64 start_time; \/\/ start time of GC in ns (just before stoptheworld)$/;"	m	struct:gc_args	file:
sum	runtime\mgc0.c	/^		uint64 sum;$/;"	m	struct:__anon56::__anon57	file:
sum	runtime\mgc0.c	/^		uint64 sum;$/;"	m	struct:__anon56::__anon58	file:
sweepfor	runtime\mgc0.c	/^	ParFor	*sweepfor;$/;"	m	struct:__anon54	file:
sweepspan	runtime\mgc0.c	/^sweepspan(ParFor *desc, uint32 idx)$/;"	f	file:
ti	runtime\mgc0.c	/^	uintptr	ti;	\/\/ type info$/;"	m	struct:Obj	file:
ti	runtime\mgc0.c	/^	uintptr ti;$/;"	m	struct:PtrTarget	file:
typelookup	runtime\mgc0.c	/^		uint64 typelookup;$/;"	m	struct:__anon56::__anon58	file:
unmarkspan	runtime\mgc0.c	/^runtime·unmarkspan(void *v, uintptr n)$/;"	f
updatememstats	runtime\mgc0.c	/^updatememstats(GCStats *stats)$/;"	f	file:
wordsPerBitmapWord	runtime\mgc0.c	/^	wordsPerBitmapWord = sizeof(void*)*8\/4,$/;"	e	enum:__anon53	file:
work	runtime\mgc0.c	/^} work;$/;"	v	typeref:struct:__anon54	file:
worldsema	runtime\mgc0.c	/^uint32 runtime·worldsema = 1;$/;"	v
GC_APTR	runtime\mgc0.h	/^	GC_APTR,        \/\/ Pointer to an arbitrary object. Args: (off)$/;"	e	enum:__anon61
GC_ARRAY_NEXT	runtime\mgc0.h	/^	GC_ARRAY_NEXT,  \/\/ The next element of an array. Args: none$/;"	e	enum:__anon61
GC_ARRAY_START	runtime\mgc0.h	/^	GC_ARRAY_START, \/\/ Start an array with a fixed length. Args: (off, len, elemsize)$/;"	e	enum:__anon61
GC_CALL	runtime\mgc0.h	/^	GC_CALL,        \/\/ Call a subroutine. Args: (off, objgcrel)$/;"	e	enum:__anon61
GC_CHAN_PTR	runtime\mgc0.h	/^	GC_CHAN_PTR,    \/\/ Go channel. Args: (off, ChanType*)$/;"	e	enum:__anon61
GC_EFACE	runtime\mgc0.h	/^	GC_EFACE,       \/\/ interface{}. Args: (off)$/;"	e	enum:__anon61
GC_END	runtime\mgc0.h	/^	GC_END,         \/\/ End of object, loop or subroutine. Args: none$/;"	e	enum:__anon61
GC_IFACE	runtime\mgc0.h	/^	GC_IFACE,       \/\/ interface{...}. Args: (off)$/;"	e	enum:__anon61
GC_NUM_INSTR	runtime\mgc0.h	/^	GC_NUM_INSTR,   \/\/ Number of instruction opcodes$/;"	e	enum:__anon61
GC_PTR	runtime\mgc0.h	/^	GC_PTR,         \/\/ A typed pointer. Args: (off, objgc)$/;"	e	enum:__anon61
GC_REGION	runtime\mgc0.h	/^	GC_REGION,      \/\/ A region\/part of the current object. Args: (off, size, objgc)$/;"	e	enum:__anon61
GC_SLICE	runtime\mgc0.h	/^	GC_SLICE,       \/\/ Go slice. Args: (off, objgc)$/;"	e	enum:__anon61
GC_STACK_CAPACITY	runtime\mgc0.h	/^	GC_STACK_CAPACITY = 8,	$/;"	e	enum:__anon62
GC_STRING	runtime\mgc0.h	/^	GC_STRING,      \/\/ Go string. Args: (off)$/;"	e	enum:__anon61
BestFit	runtime\mheap.c	/^BestFit(MSpan *list, uintptr npage, MSpan *best)$/;"	f	file:
MHeap_Alloc	runtime\mheap.c	/^runtime·MHeap_Alloc(MHeap *h, uintptr npage, int32 sizeclass, int32 acct, int32 zeroed)$/;"	f
MHeap_AllocLarge	runtime\mheap.c	/^MHeap_AllocLarge(MHeap *h, uintptr npage)$/;"	f	file:
MHeap_AllocLocked	runtime\mheap.c	/^MHeap_AllocLocked(MHeap *h, uintptr npage, int32 sizeclass)$/;"	f	file:
MHeap_Free	runtime\mheap.c	/^runtime·MHeap_Free(MHeap *h, MSpan *s, int32 acct)$/;"	f
MHeap_FreeLocked	runtime\mheap.c	/^MHeap_FreeLocked(MHeap *h, MSpan *s)$/;"	f	file:
MHeap_Grow	runtime\mheap.c	/^MHeap_Grow(MHeap *h, uintptr npage)$/;"	f	file:
MHeap_Init	runtime\mheap.c	/^runtime·MHeap_Init(MHeap *h)$/;"	f
MHeap_Lookup	runtime\mheap.c	/^runtime·MHeap_Lookup(MHeap *h, void *v)$/;"	f
MHeap_LookupMaybe	runtime\mheap.c	/^runtime·MHeap_LookupMaybe(MHeap *h, void *v)$/;"	f
MHeap_MapSpans	runtime\mheap.c	/^runtime·MHeap_MapSpans(MHeap *h)$/;"	f
MHeap_Scavenger	runtime\mheap.c	/^runtime·MHeap_Scavenger(void)$/;"	f
MSpanList_Init	runtime\mheap.c	/^runtime·MSpanList_Init(MSpan *list)$/;"	f
MSpanList_Insert	runtime\mheap.c	/^runtime·MSpanList_Insert(MSpan *list, MSpan *span)$/;"	f
MSpanList_IsEmpty	runtime\mheap.c	/^runtime·MSpanList_IsEmpty(MSpan *list)$/;"	f
MSpanList_Remove	runtime\mheap.c	/^runtime·MSpanList_Remove(MSpan *span)$/;"	f
MSpan_Init	runtime\mheap.c	/^runtime·MSpan_Init(MSpan *span, PageID start, uintptr npages)$/;"	f
RecordSpan	runtime\mheap.c	/^RecordSpan(void *vh, byte *p)$/;"	f	file:
forcegchelper	runtime\mheap.c	/^forcegchelper(Note *note)$/;"	f	file:
forcegchelperv	runtime\mheap.c	/^static FuncVal forcegchelperv = {(void(*)(void))forcegchelper};$/;"	v	file:
freeOSMemory	runtime\mheap.c	/^runtime∕debug·freeOSMemory(void)$/;"	f
scavenge	runtime\mheap.c	/^scavenge(int32 k, uint64 now, uint64 limit)$/;"	f	file:
scavengelist	runtime\mheap.c	/^scavengelist(MSpan *list, uint64 now, uint64 limit)$/;"	f	file:
InitSizes	runtime\msize.c	/^runtime·InitSizes(void)$/;"	f
SizeToClass	runtime\msize.c	/^SizeToClass(int32 size)$/;"	f	file:
class_to_allocnpages	runtime\msize.c	/^int32 runtime·class_to_allocnpages[NumSizeClasses];$/;"	v
class_to_size	runtime\msize.c	/^int32 runtime·class_to_size[NumSizeClasses];$/;"	v
size_to_class128	runtime\msize.c	/^int8 runtime·size_to_class128[(MaxSmallSize-1024)\/128 + 1];$/;"	v
size_to_class8	runtime\msize.c	/^int8 runtime·size_to_class8[1024\/8 + 1];$/;"	v
epfd	runtime\netpoll_epoll.c	/^static int32 epfd = -1;  \/\/ epoll descriptor$/;"	v	file:
netpoll	runtime\netpoll_epoll.c	/^runtime·netpoll(bool block)$/;"	f
netpollclose	runtime\netpoll_epoll.c	/^runtime·netpollclose(uintptr fd)$/;"	f
netpollinit	runtime\netpoll_epoll.c	/^runtime·netpollinit(void)$/;"	f
netpollopen	runtime\netpoll_epoll.c	/^runtime·netpollopen(uintptr fd, PollDesc *pd)$/;"	f
kq	runtime\netpoll_kqueue.c	/^static int32 kq = -1;$/;"	v	file:
netpoll	runtime\netpoll_kqueue.c	/^runtime·netpoll(bool block)$/;"	f
netpollclose	runtime\netpoll_kqueue.c	/^runtime·netpollclose(uintptr fd)$/;"	f
netpollinit	runtime\netpoll_kqueue.c	/^runtime·netpollinit(void)$/;"	f
netpollopen	runtime\netpoll_kqueue.c	/^runtime·netpollopen(uintptr fd, PollDesc *pd)$/;"	f
netpoll	runtime\netpoll_stub.c	/^runtime·netpoll(bool block)$/;"	f
DWORD_MAX	runtime\netpoll_windows.c	9;"	d	file:
INVALID_HANDLE_VALUE	runtime\netpoll_windows.c	19;"	d	file:
OverlappedEntry	runtime\netpoll_windows.c	/^struct OverlappedEntry$/;"	s	file:
OverlappedEntry	runtime\netpoll_windows.c	/^typedef struct OverlappedEntry OverlappedEntry;$/;"	t	typeref:struct:OverlappedEntry	file:
errno	runtime\netpoll_windows.c	/^	int32	errno;$/;"	m	struct:net_op	file:
handlecompletion	runtime\netpoll_windows.c	/^handlecompletion(G **gpp, net_op *op, int32 errno, uint32 qty)$/;"	f	file:
internal	runtime\netpoll_windows.c	/^	uintptr	internal;$/;"	m	struct:OverlappedEntry	file:
iocphandle	runtime\netpoll_windows.c	/^static uintptr iocphandle = INVALID_HANDLE_VALUE;  \/\/ completion port io handle$/;"	v	file:
key	runtime\netpoll_windows.c	/^	uintptr	key;$/;"	m	struct:OverlappedEntry	file:
mode	runtime\netpoll_windows.c	/^	int32	mode;$/;"	m	struct:net_op	file:
net_op	runtime\netpoll_windows.c	/^struct net_op$/;"	s	file:
net_op	runtime\netpoll_windows.c	/^typedef struct net_op net_op;$/;"	t	typeref:struct:net_op	file:
netpoll	runtime\netpoll_windows.c	/^runtime·netpoll(bool block)$/;"	f
netpollclose	runtime\netpoll_windows.c	/^runtime·netpollclose(uintptr fd)$/;"	f
netpollinit	runtime\netpoll_windows.c	/^runtime·netpollinit(void)$/;"	f
netpollopen	runtime\netpoll_windows.c	/^runtime·netpollopen(uintptr fd, PollDesc *pd)$/;"	f
o	runtime\netpoll_windows.c	/^	Overlapped	o;$/;"	m	struct:net_op	file:
op	runtime\netpoll_windows.c	/^	net_op*	op;  \/\/ In reality it's Overlapped*, but we cast it to net_op* anyway.$/;"	m	struct:OverlappedEntry	file:
pd	runtime\netpoll_windows.c	/^	PollDesc*	pd;$/;"	m	struct:net_op	file:
qty	runtime\netpoll_windows.c	/^	uint32	qty;$/;"	m	struct:OverlappedEntry	file:
qty	runtime\netpoll_windows.c	/^	uint32	qty;$/;"	m	struct:net_op	file:
CodeMsg	runtime\os_darwin.c	/^struct CodeMsg$/;"	s	file:
CodeMsg	runtime\os_darwin.c	/^typedef struct CodeMsg CodeMsg;$/;"	t	typeref:struct:CodeMsg	file:
DebugMach	runtime\os_darwin.c	/^	DebugMach = 0$/;"	e	enum:__anon63	file:
KERN_ABORTED	runtime\os_darwin.c	/^	KERN_ABORTED = 14,$/;"	e	enum:__anon65	file:
KERN_OPERATION_TIMED_OUT	runtime\os_darwin.c	/^	KERN_OPERATION_TIMED_OUT = 49,$/;"	e	enum:__anon65	file:
MACH_MSGH_BITS	runtime\os_darwin.c	163;"	d	file:
MinMachMsg	runtime\os_darwin.c	/^	MinMachMsg = 48,$/;"	e	enum:__anon64	file:
NDR	runtime\os_darwin.c	/^	MachNDR NDR;$/;"	m	struct:CodeMsg	file:
Reply	runtime\os_darwin.c	/^	Reply = 100,$/;"	e	enum:__anon64	file:
Rmach_semcreate	runtime\os_darwin.c	/^	Rmach_semcreate = Tmach_semcreate + Reply,$/;"	e	enum:__anon65	file:
Rmach_semcreateMsg	runtime\os_darwin.c	/^struct Rmach_semcreateMsg$/;"	s	file:
Rmach_semcreateMsg	runtime\os_darwin.c	/^typedef struct Rmach_semcreateMsg Rmach_semcreateMsg;$/;"	t	typeref:struct:Rmach_semcreateMsg	file:
Rmach_semdestroy	runtime\os_darwin.c	/^	Rmach_semdestroy = Tmach_semdestroy + Reply,$/;"	e	enum:__anon65	file:
Tmach_semcreate	runtime\os_darwin.c	/^	Tmach_semcreate = 3418,$/;"	e	enum:__anon65	file:
Tmach_semcreateMsg	runtime\os_darwin.c	/^struct Tmach_semcreateMsg$/;"	s	file:
Tmach_semcreateMsg	runtime\os_darwin.c	/^typedef struct Tmach_semcreateMsg Tmach_semcreateMsg;$/;"	t	typeref:struct:Tmach_semcreateMsg	file:
Tmach_semdestroy	runtime\os_darwin.c	/^	Tmach_semdestroy = 3419,$/;"	e	enum:__anon65	file:
Tmach_semdestroyMsg	runtime\os_darwin.c	/^struct Tmach_semdestroyMsg$/;"	s	file:
Tmach_semdestroyMsg	runtime\os_darwin.c	/^typedef struct Tmach_semdestroyMsg Tmach_semdestroyMsg;$/;"	t	typeref:struct:Tmach_semdestroyMsg	file:
body	runtime\os_darwin.c	/^	MachBody body;$/;"	m	struct:Rmach_semcreateMsg	file:
body	runtime\os_darwin.c	/^	MachBody body;$/;"	m	struct:Tmach_semdestroyMsg	file:
code	runtime\os_darwin.c	/^	int32 code;$/;"	m	struct:CodeMsg	file:
get_random_data	runtime\os_darwin.c	/^runtime·get_random_data(byte **rnd, int32 *rnd_len)$/;"	f
getsig	runtime\os_darwin.c	/^runtime·getsig(int32 i)$/;"	f
goenvs	runtime\os_darwin.c	/^runtime·goenvs(void)$/;"	f
h	runtime\os_darwin.c	/^	MachHeader h;$/;"	m	struct:CodeMsg	file:
h	runtime\os_darwin.c	/^	MachHeader h;$/;"	m	struct:Rmach_semcreateMsg	file:
h	runtime\os_darwin.c	/^	MachHeader h;$/;"	m	struct:Tmach_semcreateMsg	file:
h	runtime\os_darwin.c	/^	MachHeader h;$/;"	m	struct:Tmach_semdestroyMsg	file:
mach_msg	runtime\os_darwin.c	/^mach_msg(MachHeader *h,$/;"	f	file:
mach_semcreate	runtime\os_darwin.c	/^runtime·mach_semcreate(void)$/;"	f
mach_semdestroy	runtime\os_darwin.c	/^runtime·mach_semdestroy(uint32 sem)$/;"	f
mach_semrelease	runtime\os_darwin.c	/^runtime·mach_semrelease(uint32 sem)$/;"	f
machcall	runtime\os_darwin.c	/^machcall(MachHeader *h, int32 maxsize, int32 rxsize)$/;"	f	file:
macherror	runtime\os_darwin.c	/^macherror(int32 r, int8 *fn)$/;"	f	file:
memlimit	runtime\os_darwin.c	/^runtime·memlimit(void)$/;"	f
minit	runtime\os_darwin.c	/^runtime·minit(void)$/;"	f
mpreinit	runtime\os_darwin.c	/^runtime·mpreinit(M *mp)$/;"	f
ndr	runtime\os_darwin.c	/^	MachNDR ndr;$/;"	m	struct:Tmach_semcreateMsg	file:
newosproc	runtime\os_darwin.c	/^runtime·newosproc(M *mp, void *stk)$/;"	f
osinit	runtime\os_darwin.c	/^runtime·osinit(void)$/;"	f
osyield	runtime\os_darwin.c	/^runtime·osyield(void)$/;"	f
policy	runtime\os_darwin.c	/^	int32 policy;$/;"	m	struct:Tmach_semcreateMsg	file:
semacreate	runtime\os_darwin.c	/^runtime·semacreate(void)$/;"	f
semaphore	runtime\os_darwin.c	/^	MachPort semaphore;$/;"	m	struct:Rmach_semcreateMsg	file:
semaphore	runtime\os_darwin.c	/^	MachPort semaphore;$/;"	m	struct:Tmach_semdestroyMsg	file:
semasleep	runtime\os_darwin.c	/^runtime·semasleep(int64 ns)$/;"	f
semawakeup	runtime\os_darwin.c	/^runtime·semawakeup(M *mp)$/;"	f
setsig	runtime\os_darwin.c	/^runtime·setsig(int32 i, GoSighandler *fn, bool restart)$/;"	f
signalstack	runtime\os_darwin.c	/^runtime·signalstack(byte *p, int32 n)$/;"	f
sigpanic	runtime\os_darwin.c	/^runtime·sigpanic(void)$/;"	f
sigset_all	runtime\os_darwin.c	/^static Sigset sigset_all = ~(Sigset)0;$/;"	v	file:
sigset_none	runtime\os_darwin.c	/^static Sigset sigset_none;$/;"	v	file:
unimplemented	runtime\os_darwin.c	/^unimplemented(int8 *name)$/;"	f	file:
unminit	runtime\os_darwin.c	/^runtime·unminit(void)$/;"	f
value	runtime\os_darwin.c	/^	int32 value;$/;"	m	struct:Tmach_semcreateMsg	file:
zerondr	runtime\os_darwin.c	/^static MachNDR zerondr;$/;"	v	file:
NSIG	runtime\os_darwin.h	37;"	d
SIG_BLOCK	runtime\os_darwin.h	39;"	d
SIG_SETMASK	runtime\os_darwin.h	41;"	d
SIG_UNBLOCK	runtime\os_darwin.h	40;"	d
SI_USER	runtime\os_darwin.h	38;"	d
SS_DISABLE	runtime\os_darwin.h	5;"	d
Sigset	runtime\os_darwin.h	/^typedef uint32 Sigset;$/;"	t
kevent_udata	runtime\os_darwin.h	/^typedef byte* kevent_udata;$/;"	t
CTL_HW	runtime\os_dragonfly.c	17;"	d	file:
HW_NCPU	runtime\os_dragonfly.c	18;"	d	file:
Sigaction	runtime\os_dragonfly.c	/^} Sigaction;$/;"	t	typeref:struct:sigaction	file:
__sa_handler	runtime\os_dragonfly.c	/^		void    (*__sa_handler)(int32);$/;"	m	union:sigaction::__anon66	file:
__sa_sigaction	runtime\os_dragonfly.c	/^		void    (*__sa_sigaction)(int32, Siginfo*, void *);$/;"	m	union:sigaction::__anon66	file:
__sigaction_u	runtime\os_dragonfly.c	/^	} __sigaction_u;		\/* signal handler *\/$/;"	m	struct:sigaction	typeref:union:sigaction::__anon66	file:
futexsleep	runtime\os_dragonfly.c	/^runtime·futexsleep(uint32 *addr, uint32 val, int64 ns)$/;"	f
futexwakeup	runtime\os_dragonfly.c	/^runtime·futexwakeup(uint32 *addr, uint32 cnt)$/;"	f
get_random_data	runtime\os_dragonfly.c	/^runtime·get_random_data(byte **rnd, int32 *rnd_len)$/;"	f
getncpu	runtime\os_dragonfly.c	/^getncpu(void)$/;"	f	file:
getsig	runtime\os_dragonfly.c	/^runtime·getsig(int32 i)$/;"	f
goenvs	runtime\os_dragonfly.c	/^runtime·goenvs(void)$/;"	f
memlimit	runtime\os_dragonfly.c	/^runtime·memlimit(void)$/;"	f
minit	runtime\os_dragonfly.c	/^runtime·minit(void)$/;"	f
mpreinit	runtime\os_dragonfly.c	/^runtime·mpreinit(M *mp)$/;"	f
newosproc	runtime\os_dragonfly.c	/^runtime·newosproc(M *mp, void *stk)$/;"	f
osinit	runtime\os_dragonfly.c	/^runtime·osinit(void)$/;"	f
sa_flags	runtime\os_dragonfly.c	/^	int32	sa_flags;		\/* see signal options below *\/$/;"	m	struct:sigaction	file:
sa_mask	runtime\os_dragonfly.c	/^	Sigset	sa_mask;		\/* signal mask to apply *\/$/;"	m	struct:sigaction	file:
setsig	runtime\os_dragonfly.c	/^runtime·setsig(int32 i, GoSighandler *fn, bool restart)$/;"	f
sigaction	runtime\os_dragonfly.c	/^typedef struct sigaction {$/;"	s	file:
signalstack	runtime\os_dragonfly.c	/^runtime·signalstack(byte *p, int32 n)$/;"	f
sigpanic	runtime\os_dragonfly.c	/^runtime·sigpanic(void)$/;"	f
sigset_all	runtime\os_dragonfly.c	/^static Sigset sigset_all = { ~(uint32)0, ~(uint32)0, ~(uint32)0, ~(uint32)0, };$/;"	v	file:
sigset_none	runtime\os_dragonfly.c	/^static Sigset sigset_none;$/;"	v	file:
unminit	runtime\os_dragonfly.c	/^runtime·unminit(void)$/;"	f
NSIG	runtime\os_dragonfly.h	19;"	d
RLIMIT_AS	runtime\os_dragonfly.h	22;"	d
Rlimit	runtime\os_dragonfly.h	/^struct Rlimit {$/;"	s
Rlimit	runtime\os_dragonfly.h	/^typedef struct Rlimit Rlimit;$/;"	t	typeref:struct:Rlimit
SI_USER	runtime\os_dragonfly.h	20;"	d
SS_DISABLE	runtime\os_dragonfly.h	5;"	d
kevent_udata	runtime\os_dragonfly.h	/^typedef byte* kevent_udata;$/;"	t
rlim_cur	runtime\os_dragonfly.h	/^	int64	rlim_cur;$/;"	m	struct:Rlimit
rlim_max	runtime\os_dragonfly.h	/^	int64	rlim_max;$/;"	m	struct:Rlimit
CTL_HW	runtime\os_freebsd.c	16;"	d	file:
HW_NCPU	runtime\os_freebsd.c	17;"	d	file:
Sigaction	runtime\os_freebsd.c	/^} Sigaction;$/;"	t	typeref:struct:sigaction	file:
__sa_handler	runtime\os_freebsd.c	/^		void    (*__sa_handler)(int32);$/;"	m	union:sigaction::__anon67	file:
__sa_sigaction	runtime\os_freebsd.c	/^		void    (*__sa_sigaction)(int32, Siginfo*, void *);$/;"	m	union:sigaction::__anon67	file:
__sigaction_u	runtime\os_freebsd.c	/^	} __sigaction_u;		\/* signal handler *\/$/;"	m	struct:sigaction	typeref:union:sigaction::__anon67	file:
futexsleep	runtime\os_freebsd.c	/^runtime·futexsleep(uint32 *addr, uint32 val, int64 ns)$/;"	f
futexwakeup	runtime\os_freebsd.c	/^runtime·futexwakeup(uint32 *addr, uint32 cnt)$/;"	f
get_random_data	runtime\os_freebsd.c	/^runtime·get_random_data(byte **rnd, int32 *rnd_len)$/;"	f
getncpu	runtime\os_freebsd.c	/^getncpu(void)$/;"	f	file:
getsig	runtime\os_freebsd.c	/^runtime·getsig(int32 i)$/;"	f
goenvs	runtime\os_freebsd.c	/^runtime·goenvs(void)$/;"	f
memlimit	runtime\os_freebsd.c	/^runtime·memlimit(void)$/;"	f
minit	runtime\os_freebsd.c	/^runtime·minit(void)$/;"	f
mpreinit	runtime\os_freebsd.c	/^runtime·mpreinit(M *mp)$/;"	f
newosproc	runtime\os_freebsd.c	/^runtime·newosproc(M *mp, void *stk)$/;"	f
osinit	runtime\os_freebsd.c	/^runtime·osinit(void)$/;"	f
sa_flags	runtime\os_freebsd.c	/^	int32	sa_flags;		\/* see signal options below *\/$/;"	m	struct:sigaction	file:
sa_mask	runtime\os_freebsd.c	/^	Sigset	sa_mask;		\/* signal mask to apply *\/$/;"	m	struct:sigaction	file:
setsig	runtime\os_freebsd.c	/^runtime·setsig(int32 i, GoSighandler *fn, bool restart)$/;"	f
sigaction	runtime\os_freebsd.c	/^typedef struct sigaction {$/;"	s	file:
signalstack	runtime\os_freebsd.c	/^runtime·signalstack(byte *p, int32 n)$/;"	f
sigpanic	runtime\os_freebsd.c	/^runtime·sigpanic(void)$/;"	f
sigset_all	runtime\os_freebsd.c	/^static Sigset sigset_all = { ~(uint32)0, ~(uint32)0, ~(uint32)0, ~(uint32)0, };$/;"	v	file:
sigset_none	runtime\os_freebsd.c	/^static Sigset sigset_none;$/;"	v	file:
unminit	runtime\os_freebsd.c	/^runtime·unminit(void)$/;"	f
NSIG	runtime\os_freebsd.h	19;"	d
RLIMIT_AS	runtime\os_freebsd.h	22;"	d
Rlimit	runtime\os_freebsd.h	/^struct Rlimit {$/;"	s
Rlimit	runtime\os_freebsd.h	/^typedef struct Rlimit Rlimit;$/;"	t	typeref:struct:Rlimit
SI_USER	runtime\os_freebsd.h	20;"	d
SS_DISABLE	runtime\os_freebsd.h	5;"	d
kevent_udata	runtime\os_freebsd.h	/^typedef byte* kevent_udata;$/;"	t
rlim_cur	runtime\os_freebsd.h	/^	int64	rlim_cur;$/;"	m	struct:Rlimit
rlim_max	runtime\os_freebsd.h	/^	int64	rlim_max;$/;"	m	struct:Rlimit
checkgoarm	runtime\os_freebsd_arm.c	/^runtime·checkgoarm(void)$/;"	f
cputicks	runtime\os_freebsd_arm.c	/^runtime·cputicks(void)$/;"	f
CLONE_CHILD_CLEARTID	runtime\os_linux.c	/^	CLONE_CHILD_CLEARTID = 0x200000,$/;"	e	enum:__anon69	file:
CLONE_CHILD_SETTID	runtime\os_linux.c	/^	CLONE_CHILD_SETTID = 0x1000000,$/;"	e	enum:__anon69	file:
CLONE_FILES	runtime\os_linux.c	/^	CLONE_FILES = 0x400,$/;"	e	enum:__anon69	file:
CLONE_FS	runtime\os_linux.c	/^	CLONE_FS = 0x200,$/;"	e	enum:__anon69	file:
CLONE_NEWIPC	runtime\os_linux.c	/^	CLONE_NEWIPC = 0x8000000,$/;"	e	enum:__anon69	file:
CLONE_NEWNS	runtime\os_linux.c	/^	CLONE_NEWNS = 0x20000,$/;"	e	enum:__anon69	file:
CLONE_NEWUTS	runtime\os_linux.c	/^	CLONE_NEWUTS = 0x4000000,$/;"	e	enum:__anon69	file:
CLONE_PARENT	runtime\os_linux.c	/^	CLONE_PARENT = 0x8000,$/;"	e	enum:__anon69	file:
CLONE_PARENT_SETTID	runtime\os_linux.c	/^	CLONE_PARENT_SETTID = 0x100000,$/;"	e	enum:__anon69	file:
CLONE_PTRACE	runtime\os_linux.c	/^	CLONE_PTRACE = 0x2000,$/;"	e	enum:__anon69	file:
CLONE_SETTLS	runtime\os_linux.c	/^	CLONE_SETTLS = 0x80000,$/;"	e	enum:__anon69	file:
CLONE_SIGHAND	runtime\os_linux.c	/^	CLONE_SIGHAND = 0x800,$/;"	e	enum:__anon69	file:
CLONE_STOPPED	runtime\os_linux.c	/^	CLONE_STOPPED = 0x2000000,$/;"	e	enum:__anon69	file:
CLONE_SYSVSEM	runtime\os_linux.c	/^	CLONE_SYSVSEM = 0x40000,$/;"	e	enum:__anon69	file:
CLONE_THREAD	runtime\os_linux.c	/^	CLONE_THREAD = 0x10000,$/;"	e	enum:__anon69	file:
CLONE_UNTRACED	runtime\os_linux.c	/^	CLONE_UNTRACED = 0x800000,$/;"	e	enum:__anon69	file:
CLONE_VFORK	runtime\os_linux.c	/^	CLONE_VFORK = 0x4000,$/;"	e	enum:__anon69	file:
CLONE_VM	runtime\os_linux.c	/^	CLONE_VM = 0x100,$/;"	e	enum:__anon69	file:
FUTEX_WAIT	runtime\os_linux.c	/^	FUTEX_WAIT = 0,$/;"	e	enum:__anon68	file:
FUTEX_WAKE	runtime\os_linux.c	/^	FUTEX_WAKE = 1,$/;"	e	enum:__anon68	file:
futexsleep	runtime\os_linux.c	/^runtime·futexsleep(uint32 *addr, uint32 val, int64 ns)$/;"	f
futexwakeup	runtime\os_linux.c	/^runtime·futexwakeup(uint32 *addr, uint32 cnt)$/;"	f
get_random_data	runtime\os_linux.c	/^runtime·get_random_data(byte **rnd, int32 *rnd_len)$/;"	f
getproccount	runtime\os_linux.c	/^getproccount(void)$/;"	f	file:
getsig	runtime\os_linux.c	/^runtime·getsig(int32 i)$/;"	f
goenvs	runtime\os_linux.c	/^runtime·goenvs(void)$/;"	f
memlimit	runtime\os_linux.c	/^runtime·memlimit(void)$/;"	f
minit	runtime\os_linux.c	/^runtime·minit(void)$/;"	f
mpreinit	runtime\os_linux.c	/^runtime·mpreinit(M *mp)$/;"	f
newosproc	runtime\os_linux.c	/^runtime·newosproc(M *mp, void *stk)$/;"	f
osinit	runtime\os_linux.c	/^runtime·osinit(void)$/;"	f
sa_handler	runtime\os_linux.c	279;"	d	file:
setsig	runtime\os_linux.c	/^runtime·setsig(int32 i, GoSighandler *fn, bool restart)$/;"	f
signalstack	runtime\os_linux.c	/^runtime·signalstack(byte *p, int32 n)$/;"	f
sigpanic	runtime\os_linux.c	/^runtime·sigpanic(void)$/;"	f
sigset_all	runtime\os_linux.c	/^static Sigset sigset_all = { ~(uint32)0, ~(uint32)0 };$/;"	v	file:
sigset_none	runtime\os_linux.c	/^static Sigset sigset_none;$/;"	v	file:
startup_random_data	runtime\os_linux.c	/^byte*	runtime·startup_random_data;$/;"	v
startup_random_data_len	runtime\os_linux.c	/^uint32	runtime·startup_random_data_len;$/;"	v
unminit	runtime\os_linux.c	/^runtime·unminit(void)$/;"	f
NSIG	runtime\os_linux.h	19;"	d
RLIMIT_AS	runtime\os_linux.h	33;"	d
Rlimit	runtime\os_linux.h	/^struct Rlimit {$/;"	s
Rlimit	runtime\os_linux.h	/^typedef struct Rlimit Rlimit;$/;"	t	typeref:struct:Rlimit
SIG_SETMASK	runtime\os_linux.h	31;"	d
SI_USER	runtime\os_linux.h	20;"	d
SS_DISABLE	runtime\os_linux.h	5;"	d
Sigset	runtime\os_linux.h	/^struct Sigset$/;"	s
Sigset	runtime\os_linux.h	/^typedef struct Sigset Sigset;$/;"	t	typeref:struct:Sigset
mask	runtime\os_linux.h	/^	uint32 mask[2];$/;"	m	struct:Sigset
rlim_cur	runtime\os_linux.h	/^	uintptr	rlim_cur;$/;"	m	struct:Rlimit
rlim_max	runtime\os_linux.h	/^	uintptr	rlim_max;$/;"	m	struct:Rlimit
AT_NULL	runtime\os_linux_386.c	10;"	d	file:
AT_RANDOM	runtime\os_linux_386.c	11;"	d	file:
AT_SYSINFO	runtime\os_linux_386.c	12;"	d	file:
linux_setup_vdso	runtime\os_linux_386.c	/^runtime·linux_setup_vdso(int32 argc, byte **argv)$/;"	f
AT_HWCAP	runtime\os_linux_arm.c	12;"	d	file:
AT_NULL	runtime\os_linux_arm.c	10;"	d	file:
AT_PLATFORM	runtime\os_linux_arm.c	11;"	d	file:
AT_RANDOM	runtime\os_linux_arm.c	13;"	d	file:
HWCAP_VFP	runtime\os_linux_arm.c	14;"	d	file:
HWCAP_VFPv3	runtime\os_linux_arm.c	15;"	d	file:
armArch	runtime\os_linux_arm.c	/^uint8  runtime·armArch = 6;	\/\/ we default to ARMv6$/;"	v
checkgoarm	runtime\os_linux_arm.c	/^runtime·checkgoarm(void)$/;"	f
cputicks	runtime\os_linux_arm.c	/^runtime·cputicks(void)$/;"	f
goarm	runtime\os_linux_arm.c	/^uint8  runtime·goarm;	\/\/ set by 5l$/;"	v
hwcap	runtime\os_linux_arm.c	/^uint32 runtime·hwcap;	\/\/ set by setup_auxv$/;"	v
randomNumber	runtime\os_linux_arm.c	/^static uint32 runtime·randomNumber;$/;"	v	file:
setup_auxv	runtime\os_linux_arm.c	/^runtime·setup_auxv(int32 argc, byte **argv)$/;"	f
CLOCK_MONOTONIC	runtime\os_netbsd.c	/^	CLOCK_MONOTONIC = 3$/;"	e	enum:__anon70	file:
CLOCK_PROF	runtime\os_netbsd.c	/^	CLOCK_PROF = 2,$/;"	e	enum:__anon70	file:
CLOCK_REALTIME	runtime\os_netbsd.c	/^	CLOCK_REALTIME = 0,$/;"	e	enum:__anon70	file:
CLOCK_VIRTUAL	runtime\os_netbsd.c	/^	CLOCK_VIRTUAL = 1,$/;"	e	enum:__anon70	file:
CTL_HW	runtime\os_netbsd.c	37;"	d	file:
ENOTSUP	runtime\os_netbsd.c	/^	ENOTSUP = 91,$/;"	e	enum:__anon70	file:
ESRCH	runtime\os_netbsd.c	/^	ESRCH = 3,$/;"	e	enum:__anon70	file:
HW_NCPU	runtime\os_netbsd.c	38;"	d	file:
Sigaction	runtime\os_netbsd.c	/^} Sigaction;$/;"	t	typeref:struct:sigaction	file:
_sa_handler	runtime\os_netbsd.c	/^		void    (*_sa_handler)(int32);$/;"	m	union:sigaction::__anon71	file:
_sa_sigaction	runtime\os_netbsd.c	/^		void    (*_sa_sigaction)(int32, Siginfo*, void *);$/;"	m	union:sigaction::__anon71	file:
_sa_u	runtime\os_netbsd.c	/^	} _sa_u;			\/* signal handler *\/$/;"	m	struct:sigaction	typeref:union:sigaction::__anon71	file:
get_random_data	runtime\os_netbsd.c	/^runtime·get_random_data(byte **rnd, int32 *rnd_len)$/;"	f
getncpu	runtime\os_netbsd.c	/^getncpu(void)$/;"	f	file:
getsig	runtime\os_netbsd.c	/^runtime·getsig(int32 i)$/;"	f
goenvs	runtime\os_netbsd.c	/^runtime·goenvs(void)$/;"	f
memlimit	runtime\os_netbsd.c	/^runtime·memlimit(void)$/;"	f
minit	runtime\os_netbsd.c	/^runtime·minit(void)$/;"	f
mpreinit	runtime\os_netbsd.c	/^runtime·mpreinit(M *mp)$/;"	f
newosproc	runtime\os_netbsd.c	/^runtime·newosproc(M *mp, void *stk)$/;"	f
osinit	runtime\os_netbsd.c	/^runtime·osinit(void)$/;"	f
sa_flags	runtime\os_netbsd.c	/^	int32	sa_flags;		\/* see signal options below *\/$/;"	m	struct:sigaction	file:
sa_mask	runtime\os_netbsd.c	/^	uint32	sa_mask[4];		\/* signal mask to apply *\/$/;"	m	struct:sigaction	file:
semacreate	runtime\os_netbsd.c	/^runtime·semacreate(void)$/;"	f
semasleep	runtime\os_netbsd.c	/^runtime·semasleep(int64 ns)$/;"	f
semawakeup	runtime\os_netbsd.c	/^runtime·semawakeup(M *mp)$/;"	f
setsig	runtime\os_netbsd.c	/^runtime·setsig(int32 i, GoSighandler *fn, bool restart)$/;"	f
sigaction	runtime\os_netbsd.c	/^typedef struct sigaction {$/;"	s	file:
signalstack	runtime\os_netbsd.c	/^runtime·signalstack(byte *p, int32 n)$/;"	f
sigpanic	runtime\os_netbsd.c	/^runtime·sigpanic(void)$/;"	f
sigset_all	runtime\os_netbsd.c	/^static Sigset sigset_all = { ~(uint32)0, ~(uint32)0, ~(uint32)0, ~(uint32)0, };$/;"	v	file:
sigset_none	runtime\os_netbsd.c	/^static Sigset sigset_none;$/;"	v	file:
unminit	runtime\os_netbsd.c	/^runtime·unminit(void)$/;"	f
NSIG	runtime\os_netbsd.h	24;"	d
SIG_BLOCK	runtime\os_netbsd.h	7;"	d
SIG_SETMASK	runtime\os_netbsd.h	9;"	d
SIG_UNBLOCK	runtime\os_netbsd.h	8;"	d
SI_USER	runtime\os_netbsd.h	25;"	d
SS_DISABLE	runtime\os_netbsd.h	5;"	d
_UC_CPU	runtime\os_netbsd.h	29;"	d
_UC_SIGMASK	runtime\os_netbsd.h	28;"	d
kevent_udata	runtime\os_netbsd.h	/^typedef uintptr kevent_udata;$/;"	t
lwp_mcontext_init	runtime\os_netbsd_386.c	/^runtime·lwp_mcontext_init(McontextT *mc, void *stack, M *mp, G *gp, void (*fn)(void))$/;"	f
lwp_mcontext_init	runtime\os_netbsd_amd64.c	/^runtime·lwp_mcontext_init(McontextT *mc, void *stack, M *mp, G *gp, void (*fn)(void))$/;"	f
checkgoarm	runtime\os_netbsd_arm.c	/^runtime·checkgoarm(void)$/;"	f
cputicks	runtime\os_netbsd_arm.c	/^runtime·cputicks() {$/;"	f
lwp_mcontext_init	runtime\os_netbsd_arm.c	/^runtime·lwp_mcontext_init(McontextT *mc, void *stack, M *mp, G *gp, void (*fn)(void))$/;"	f
CLOCK_MONOTONIC	runtime\os_openbsd.c	/^	CLOCK_MONOTONIC = 3$/;"	e	enum:__anon72	file:
CLOCK_PROF	runtime\os_openbsd.c	/^	CLOCK_PROF = 2,$/;"	e	enum:__anon72	file:
CLOCK_REALTIME	runtime\os_openbsd.c	/^	CLOCK_REALTIME = 0,$/;"	e	enum:__anon72	file:
CLOCK_VIRTUAL	runtime\os_openbsd.c	/^	CLOCK_VIRTUAL = 1,$/;"	e	enum:__anon72	file:
CTL_HW	runtime\os_openbsd.c	34;"	d	file:
ENOTSUP	runtime\os_openbsd.c	/^	ENOTSUP = 91,$/;"	e	enum:__anon72	file:
ESRCH	runtime\os_openbsd.c	/^	ESRCH = 3,$/;"	e	enum:__anon72	file:
HW_NCPU	runtime\os_openbsd.c	35;"	d	file:
Sigaction	runtime\os_openbsd.c	/^} Sigaction;$/;"	t	typeref:struct:sigaction	file:
__sa_handler	runtime\os_openbsd.c	/^		void    (*__sa_handler)(int32);$/;"	m	union:sigaction::__anon73	file:
__sa_sigaction	runtime\os_openbsd.c	/^		void    (*__sa_sigaction)(int32, Siginfo*, void *);$/;"	m	union:sigaction::__anon73	file:
__sigaction_u	runtime\os_openbsd.c	/^	} __sigaction_u;		\/* signal handler *\/$/;"	m	struct:sigaction	typeref:union:sigaction::__anon73	file:
get_random_data	runtime\os_openbsd.c	/^runtime·get_random_data(byte **rnd, int32 *rnd_len)$/;"	f
getncpu	runtime\os_openbsd.c	/^getncpu(void)$/;"	f	file:
getsig	runtime\os_openbsd.c	/^runtime·getsig(int32 i)$/;"	f
goenvs	runtime\os_openbsd.c	/^runtime·goenvs(void)$/;"	f
memlimit	runtime\os_openbsd.c	/^runtime·memlimit(void)$/;"	f
minit	runtime\os_openbsd.c	/^runtime·minit(void)$/;"	f
mpreinit	runtime\os_openbsd.c	/^runtime·mpreinit(M *mp)$/;"	f
newosproc	runtime\os_openbsd.c	/^runtime·newosproc(M *mp, void *stk)$/;"	f
osinit	runtime\os_openbsd.c	/^runtime·osinit(void)$/;"	f
sa_flags	runtime\os_openbsd.c	/^	int32	sa_flags;		\/* see signal options below *\/$/;"	m	struct:sigaction	file:
sa_mask	runtime\os_openbsd.c	/^	uint32	sa_mask;		\/* signal mask to apply *\/$/;"	m	struct:sigaction	file:
semacreate	runtime\os_openbsd.c	/^runtime·semacreate(void)$/;"	f
semasleep	runtime\os_openbsd.c	/^runtime·semasleep(int64 ns)$/;"	f
semawakeup	runtime\os_openbsd.c	/^runtime·semawakeup(M *mp)$/;"	f
setsig	runtime\os_openbsd.c	/^runtime·setsig(int32 i, GoSighandler *fn, bool restart)$/;"	f
sigaction	runtime\os_openbsd.c	/^typedef struct sigaction {$/;"	s	file:
signalstack	runtime\os_openbsd.c	/^runtime·signalstack(byte *p, int32 n)$/;"	f
sigpanic	runtime\os_openbsd.c	/^runtime·sigpanic(void)$/;"	f
sigset_all	runtime\os_openbsd.c	/^static Sigset sigset_all = ~(Sigset)0;$/;"	v	file:
sigset_none	runtime\os_openbsd.c	/^static Sigset sigset_none;$/;"	v	file:
unminit	runtime\os_openbsd.c	/^runtime·unminit(void)$/;"	f
NSIG	runtime\os_openbsd.h	23;"	d
SIG_BLOCK	runtime\os_openbsd.h	7;"	d
SIG_SETMASK	runtime\os_openbsd.h	9;"	d
SIG_UNBLOCK	runtime\os_openbsd.h	8;"	d
SI_USER	runtime\os_openbsd.h	24;"	d
SS_DISABLE	runtime\os_openbsd.h	5;"	d
kevent_udata	runtime\os_openbsd.h	/^typedef byte* kevent_udata;$/;"	t
badsignal	runtime\os_plan9.c	/^static int8 badsignal[] = "runtime: signal received on thread not created by Go.\\n";$/;"	v	file:
badsignal2	runtime\os_plan9.c	/^runtime·badsignal2(void)$/;"	f
crash	runtime\os_plan9.c	/^runtime·crash(void)$/;"	f
exit	runtime\os_plan9.c	/^runtime·exit(int32 e)$/;"	f
get_random_data	runtime\os_plan9.c	/^runtime·get_random_data(byte **rnd, int32 *rnd_len)$/;"	f
getpid	runtime\os_plan9.c	/^getpid(void)$/;"	f	file:
getproccount	runtime\os_plan9.c	/^getproccount(void)$/;"	f	file:
goenvs	runtime\os_plan9.c	/^runtime·goenvs(void)$/;"	f
goexitsall	runtime\os_plan9.c	/^runtime·goexitsall(int8 *status)$/;"	f
goos	runtime\os_plan9.c	/^int8 *goos = "plan9";$/;"	v
initsig	runtime\os_plan9.c	/^runtime·initsig(void)$/;"	f
itoa	runtime\os_plan9.c	/^runtime·itoa(int32 n, byte *p, uint32 len)$/;"	f
memlimit	runtime\os_plan9.c	/^runtime·memlimit(void)$/;"	f
minit	runtime\os_plan9.c	/^runtime·minit(void)$/;"	f
mpreinit	runtime\os_plan9.c	/^runtime·mpreinit(M *mp)$/;"	f
newosproc	runtime\os_plan9.c	/^runtime·newosproc(M *mp, void *stk)$/;"	f
now	runtime\os_plan9.c	/^time·now(int64 sec, int32 nsec)$/;"	f
osinit	runtime\os_plan9.c	/^runtime·osinit(void)$/;"	f
osyield	runtime\os_plan9.c	/^runtime·osyield(void)$/;"	f
postnote	runtime\os_plan9.c	/^runtime·postnote(int32 pid, int8* msg)$/;"	f
read	runtime\os_plan9.c	/^runtime·read(int32 fd, void *buf, int32 nbytes)$/;"	f
semacreate	runtime\os_plan9.c	/^runtime·semacreate(void)$/;"	f
semasleep	runtime\os_plan9.c	/^runtime·semasleep(int64 ns)$/;"	f
semawakeup	runtime\os_plan9.c	/^runtime·semawakeup(M *mp)$/;"	f
sigpanic	runtime\os_plan9.c	/^runtime·sigpanic(void)$/;"	f
sigpipe	runtime\os_plan9.c	/^os·sigpipe(void)$/;"	f
unminit	runtime\os_plan9.c	/^runtime·unminit(void)$/;"	f
write	runtime\os_plan9.c	/^runtime·write(int32 fd, void *buf, int32 nbytes)$/;"	f
ERRMAX	runtime\os_plan9.h	82;"	d
NCONT	runtime\os_plan9.h	/^	NCONT	= 0,$/;"	e	enum:__anon76
NDFLT	runtime\os_plan9.h	/^	NDFLT	= 1$/;"	e	enum:__anon76
NSIG	runtime\os_plan9.h	81;"	d
OCEXEC	runtime\os_plan9.h	/^	OCEXEC	= 32,$/;"	e	enum:__anon74
OEXCL	runtime\os_plan9.h	/^	OEXCL	= 0x1000$/;"	e	enum:__anon74
OEXEC	runtime\os_plan9.h	/^	OEXEC	= 3,$/;"	e	enum:__anon74
ORCLOSE	runtime\os_plan9.h	/^	ORCLOSE	= 64,$/;"	e	enum:__anon74
ORDWR	runtime\os_plan9.h	/^	ORDWR	= 2,$/;"	e	enum:__anon74
OREAD	runtime\os_plan9.h	/^	OREAD	= 0,$/;"	e	enum:__anon74
OTRUNC	runtime\os_plan9.h	/^	OTRUNC	= 16,$/;"	e	enum:__anon74
OWRITE	runtime\os_plan9.h	/^	OWRITE	= 1,$/;"	e	enum:__anon74
Plink	runtime\os_plan9.h	/^typedef intptr Plink;$/;"	t
RFCENVG	runtime\os_plan9.h	/^	RFCENVG         = (1<<11),$/;"	e	enum:__anon75
RFCFDG	runtime\os_plan9.h	/^	RFCFDG          = (1<<12),$/;"	e	enum:__anon75
RFCNAMEG	runtime\os_plan9.h	/^	RFCNAMEG        = (1<<10),$/;"	e	enum:__anon75
RFENVG	runtime\os_plan9.h	/^	RFENVG          = (1<<1),$/;"	e	enum:__anon75
RFFDG	runtime\os_plan9.h	/^	RFFDG           = (1<<2),$/;"	e	enum:__anon75
RFMEM	runtime\os_plan9.h	/^	RFMEM           = (1<<5),$/;"	e	enum:__anon75
RFNAMEG	runtime\os_plan9.h	/^	RFNAMEG         = (1<<0),$/;"	e	enum:__anon75
RFNOMNT	runtime\os_plan9.h	/^	RFNOMNT         = (1<<14)$/;"	e	enum:__anon75
RFNOTEG	runtime\os_plan9.h	/^	RFNOTEG         = (1<<3),$/;"	e	enum:__anon75
RFNOWAIT	runtime\os_plan9.h	/^	RFNOWAIT        = (1<<6),$/;"	e	enum:__anon75
RFPROC	runtime\os_plan9.h	/^	RFPROC          = (1<<4),$/;"	e	enum:__anon75
RFREND	runtime\os_plan9.h	/^	RFREND          = (1<<13),$/;"	e	enum:__anon75
Tos	runtime\os_plan9.h	/^struct Tos {$/;"	s
Tos	runtime\os_plan9.h	/^typedef struct Tos Tos;$/;"	t	typeref:struct:Tos
clock	runtime\os_plan9.h	/^	uint32	clock;$/;"	m	struct:Tos
cyclefreq	runtime\os_plan9.h	/^	uint64	cyclefreq;	\/* cycle clock frequency if there is one, 0 otherwise *\/$/;"	m	struct:Tos
first	runtime\os_plan9.h	/^		Plink	*first;$/;"	m	struct:Tos::__anon77
kcycles	runtime\os_plan9.h	/^	int64	kcycles;	\/* cycles spent in kernel *\/$/;"	m	struct:Tos
last	runtime\os_plan9.h	/^		Plink	*last;$/;"	m	struct:Tos::__anon77
next	runtime\os_plan9.h	/^		Plink	*next;	\/* known to be 4(ptr) *\/$/;"	m	struct:Tos::__anon77
pcycles	runtime\os_plan9.h	/^	int64	pcycles;	\/* cycles spent in process (kernel + user) *\/$/;"	m	struct:Tos
pid	runtime\os_plan9.h	/^		uint32	pid;$/;"	m	struct:Tos::__anon77
pid	runtime\os_plan9.h	/^	uint32	pid;		\/* might as well put the pid here *\/$/;"	m	struct:Tos
pp	runtime\os_plan9.h	/^		Plink	*pp;	\/* known to be 0(ptr) *\/$/;"	m	struct:Tos::__anon77
prof	runtime\os_plan9.h	/^	} prof;$/;"	m	struct:Tos	typeref:struct:Tos::__anon77
what	runtime\os_plan9.h	/^		uint32	what;$/;"	m	struct:Tos::__anon77
dumpregs	runtime\os_plan9_386.c	/^runtime·dumpregs(Ureg *u)$/;"	f
resetcpuprofiler	runtime\os_plan9_386.c	/^runtime·resetcpuprofiler(int32 hz)$/;"	f
sigdisable	runtime\os_plan9_386.c	/^runtime·sigdisable(uint32 sig)$/;"	f
sigenable	runtime\os_plan9_386.c	/^runtime·sigenable(uint32 sig)$/;"	f
sighandler	runtime\os_plan9_386.c	/^runtime·sighandler(void *v, int8 *s, G *gp)$/;"	f
dumpregs	runtime\os_plan9_amd64.c	/^runtime·dumpregs(Ureg *u)$/;"	f
resetcpuprofiler	runtime\os_plan9_amd64.c	/^runtime·resetcpuprofiler(int32 hz)$/;"	f
sigdisable	runtime\os_plan9_amd64.c	/^runtime·sigdisable(uint32 sig)$/;"	f
sigenable	runtime\os_plan9_amd64.c	/^runtime·sigenable(uint32 sig)$/;"	f
sighandler	runtime\os_plan9_amd64.c	/^runtime·sighandler(void *v, int8 *s, G *gp)$/;"	f
GetQueuedCompletionStatusEx	runtime\os_windows.c	/^void *runtime·GetQueuedCompletionStatusEx;$/;"	v
INFINITE	runtime\os_windows.c	185;"	d	file:
STACK_SIZE_PARAM_IS_A_RESERVATION	runtime\os_windows.c	216;"	d	file:
badsignallen	runtime\os_windows.c	/^int32 runtime·badsignallen = sizeof runtime·badsignalmsg - 1;$/;"	v
badsignalmsg	runtime\os_windows.c	/^int8 runtime·badsignalmsg[] = "runtime: signal received on thread not created by Go.\\n";$/;"	v
crash	runtime\os_windows.c	/^runtime·crash(void)$/;"	f
ctrlhandler1	runtime\os_windows.c	/^runtime·ctrlhandler1(uint32 type)$/;"	f
exit	runtime\os_windows.c	/^runtime·exit(int32 code)$/;"	f
get_random_data	runtime\os_windows.c	/^runtime·get_random_data(byte **rnd, int32 *rnd_len)$/;"	f
getproccount	runtime\os_windows.c	/^getproccount(void)$/;"	f	file:
goenvs	runtime\os_windows.c	/^runtime·goenvs(void)$/;"	f
initsig	runtime\os_windows.c	/^runtime·initsig(void)$/;"	f
issigpanic	runtime\os_windows.c	/^runtime·issigpanic(uint32 code)$/;"	f
memlimit	runtime\os_windows.c	/^runtime·memlimit(void)$/;"	f
minit	runtime\os_windows.c	/^runtime·minit(void)$/;"	f
mpreinit	runtime\os_windows.c	/^runtime·mpreinit(M *mp)$/;"	f
nanotime	runtime\os_windows.c	/^runtime·nanotime(void)$/;"	f
newosproc	runtime\os_windows.c	/^runtime·newosproc(M *mp, void *stk)$/;"	f
now	runtime\os_windows.c	/^time·now(int64 sec, int32 usec)$/;"	f
osinit	runtime\os_windows.c	/^runtime·osinit(void)$/;"	f
osyield	runtime\os_windows.c	/^runtime·osyield(void)$/;"	f
profileloop1	runtime\os_windows.c	/^runtime·profileloop1(void)$/;"	f
profilem	runtime\os_windows.c	/^profilem(M *mp)$/;"	f	file:
profiletimer	runtime\os_windows.c	/^static void *profiletimer;$/;"	v	file:
resetcpuprofiler	runtime\os_windows.c	/^runtime·resetcpuprofiler(int32 hz)$/;"	f
semacreate	runtime\os_windows.c	/^runtime·semacreate(void)$/;"	f
semasleep	runtime\os_windows.c	/^runtime·semasleep(int64 ns)$/;"	f
semawakeup	runtime\os_windows.c	/^runtime·semawakeup(M *mp)$/;"	f
sigpanic	runtime\os_windows.c	/^runtime·sigpanic(void)$/;"	f
sigpipe	runtime\os_windows.c	/^os·sigpipe(void)$/;"	f
stdcall	runtime\os_windows.c	/^runtime·stdcall(void *fn, int32 count, ...)$/;"	f
unminit	runtime\os_windows.c	/^runtime·unminit(void)$/;"	f
usleep	runtime\os_windows.c	/^runtime·usleep(uint32 us)$/;"	f
write	runtime\os_windows.c	/^runtime·write(int32 fd, void *buf, int32 n)$/;"	f
NSIG	runtime\os_windows.h	36;"	d
dosigprof	runtime\os_windows_386.c	/^runtime·dosigprof(Context *r, G *gp)$/;"	f
dumpregs	runtime\os_windows_386.c	/^runtime·dumpregs(Context *r)$/;"	f
sigdisable	runtime\os_windows_386.c	/^runtime·sigdisable(uint32 sig)$/;"	f
sigenable	runtime\os_windows_386.c	/^runtime·sigenable(uint32 sig)$/;"	f
sighandler	runtime\os_windows_386.c	/^runtime·sighandler(ExceptionRecord *info, Context *r, G *gp)$/;"	f
dosigprof	runtime\os_windows_amd64.c	/^runtime·dosigprof(Context *r, G *gp)$/;"	f
dumpregs	runtime\os_windows_amd64.c	/^runtime·dumpregs(Context *r)$/;"	f
sigdisable	runtime\os_windows_amd64.c	/^runtime·sigdisable(uint32 sig)$/;"	f
sigenable	runtime\os_windows_amd64.c	/^runtime·sigenable(uint32 sig)$/;"	f
sighandler	runtime\os_windows_amd64.c	/^runtime·sighandler(ExceptionRecord *info, Context *r, G *gp)$/;"	f
DeferChunkSize	runtime\panic.c	/^	DeferChunkSize = 2048$/;"	e	enum:__anon78	file:
Goexit	runtime\panic.c	/^runtime·Goexit(void)$/;"	f
deferproc	runtime\panic.c	/^runtime·deferproc(int32 siz, FuncVal *fn, ...)$/;"	f
deferreturn	runtime\panic.c	/^runtime·deferreturn(uintptr arg0, ...)$/;"	f
dopanic	runtime\panic.c	/^runtime·dopanic(int32 unused)$/;"	f
freedefer	runtime\panic.c	/^freedefer(Defer *d)$/;"	f	file:
newdefer	runtime\panic.c	/^newdefer(int32 siz)$/;"	f	file:
panic	runtime\panic.c	/^runtime·panic(Eface e)$/;"	f
panicindex	runtime\panic.c	/^runtime·panicindex(void)$/;"	f
panicking	runtime\panic.c	/^uint32 runtime·panicking;$/;"	v
paniclk	runtime\panic.c	/^static Lock paniclk;$/;"	v	file:
panicslice	runtime\panic.c	/^runtime·panicslice(void)$/;"	f
panicstring	runtime\panic.c	/^runtime·panicstring(int8 *s)$/;"	f
popdefer	runtime\panic.c	/^popdefer(void)$/;"	f	file:
printpanics	runtime\panic.c	/^printpanics(Panic *p)$/;"	f	file:
recover	runtime\panic.c	/^runtime·recover(byte *argp, Eface ret)$/;"	f
recovery	runtime\panic.c	/^recovery(G *gp)$/;"	f	file:
rundefer	runtime\panic.c	/^rundefer(void)$/;"	f	file:
startpanic	runtime\panic.c	/^runtime·startpanic(void)$/;"	f
throw	runtime\panic.c	/^runtime·throw(int8 *s)$/;"	f
throwinit	runtime\panic.c	/^runtime·throwinit(void)$/;"	f
throwreturn	runtime\panic.c	/^runtime·throwreturn(void)$/;"	f
unwindstack	runtime\panic.c	/^runtime·unwindstack(G *gp, byte *sp)$/;"	f
ParForThread	runtime\parfor.c	/^struct ParForThread$/;"	s	file:
nosyield	runtime\parfor.c	/^	uint64 nosyield;$/;"	m	struct:ParForThread	file:
nprocyield	runtime\parfor.c	/^	uint64 nprocyield;$/;"	m	struct:ParForThread	file:
nsleep	runtime\parfor.c	/^	uint64 nsleep;$/;"	m	struct:ParForThread	file:
nsteal	runtime\parfor.c	/^	uint64 nsteal;$/;"	m	struct:ParForThread	file:
nstealcnt	runtime\parfor.c	/^	uint64 nstealcnt;$/;"	m	struct:ParForThread	file:
pad	runtime\parfor.c	/^	byte pad[CacheLineSize];$/;"	m	struct:ParForThread	file:
parforalloc	runtime\parfor.c	/^runtime·parforalloc(uint32 nthrmax)$/;"	f
parforalloc2	runtime\parfor.c	/^runtime·parforalloc2(uint32 nthrmax, ParFor *desc)$/;"	f
parfordo	runtime\parfor.c	/^runtime·parfordo(ParFor *desc)$/;"	f
parforiters	runtime\parfor.c	/^runtime·parforiters(ParFor *desc, uintptr tid, uintptr start, uintptr end)$/;"	f
parforsetup	runtime\parfor.c	/^runtime·parforsetup(ParFor *desc, uint32 nthr, uint32 n, void *ctx, bool wait, void (*body)(ParFor*, uint32))$/;"	f
parforsetup2	runtime\parfor.c	/^runtime·parforsetup2(ParFor *desc, uint32 nthr, uint32 n, void *ctx, bool wait, void *body)$/;"	f
pos	runtime\parfor.c	/^	uint64 pos;$/;"	m	struct:ParForThread	file:
dump	runtime\print.c	/^runtime·dump(byte *p, int32 n)$/;"	f
goprintf	runtime\print.c	/^runtime·goprintf(String s, ...)$/;"	f
gwrite	runtime\print.c	/^gwrite(void *v, intgo n)$/;"	f	file:
printbool	runtime\print.c	/^runtime·printbool(bool v)$/;"	f
printbyte	runtime\print.c	/^runtime·printbyte(int8 c)$/;"	f
printcomplex	runtime\print.c	/^runtime·printcomplex(Complex128 v)$/;"	f
printf	runtime\print.c	/^runtime·printf(int8 *s, ...)$/;"	f
printfloat	runtime\print.c	/^runtime·printfloat(float64 v)$/;"	f
printhex	runtime\print.c	/^runtime·printhex(uint64 v)$/;"	f
printint	runtime\print.c	/^runtime·printint(int64 v)$/;"	f
printnl	runtime\print.c	/^runtime·printnl(void)$/;"	f
printpc	runtime\print.c	/^runtime·printpc(void *p)$/;"	f
printpointer	runtime\print.c	/^runtime·printpointer(void *p)$/;"	f
prints	runtime\print.c	/^runtime·prints(int8 *s)$/;"	f
printsp	runtime\print.c	/^runtime·printsp(void)$/;"	f
printstring	runtime\print.c	/^runtime·printstring(String v)$/;"	f
printuint	runtime\print.c	/^runtime·printuint(uint64 v)$/;"	f
typestring	runtime\print.c	/^runtime·typestring(Eface e, String s)$/;"	f
vprintf	runtime\print.c	/^vprintf(int8 *s, byte *base)$/;"	f	file:
Breakpoint	runtime\proc.c	/^runtime·Breakpoint(void)$/;"	f
CgoThreadStart	runtime\proc.c	/^struct CgoThreadStart$/;"	s	file:
CgoThreadStart	runtime\proc.c	/^typedef struct CgoThreadStart CgoThreadStart;$/;"	t	typeref:struct:CgoThreadStart	file:
Gosched	runtime\proc.c	/^runtime·Gosched(void)$/;"	f
Lock	runtime\proc.c	/^	Lock;$/;"	m	struct:Sched	file:
Lock	runtime\proc.c	/^	Lock;$/;"	m	struct:__anon80	file:
LockOSThread	runtime\proc.c	/^runtime·LockOSThread(void)$/;"	f
MLOCKED	runtime\proc.c	847;"	d	file:
MaxGomaxprocs	runtime\proc.c	/^enum { MaxGomaxprocs = 1<<8 };$/;"	e	enum:__anon79	file:
NumGoroutine	runtime\proc.c	/^runtime·NumGoroutine(intgo ret)$/;"	f
Pdesc	runtime\proc.c	/^struct Pdesc$/;"	s	file:
Pdesc	runtime\proc.c	/^typedef struct Pdesc Pdesc;$/;"	t	typeref:struct:Pdesc	file:
Sched	runtime\proc.c	/^struct Sched {$/;"	s	file:
Sched	runtime\proc.c	/^typedef struct Sched Sched;$/;"	t	typeref:struct:Sched	file:
System	runtime\proc.c	/^System(void)$/;"	f	file:
UnlockOSThread	runtime\proc.c	/^runtime·UnlockOSThread(void)$/;"	f
_cgo_thread_start	runtime\proc.c	/^void (*_cgo_thread_start)(void*);$/;"	v
acquirep	runtime\proc.c	/^acquirep(P *p)$/;"	f	file:
allg	runtime\proc.c	/^G*	runtime·allg;$/;"	v
allm	runtime\proc.c	/^M*	runtime·allm;$/;"	v
allocm	runtime\proc.c	/^runtime·allocm(P *p)$/;"	f
badmcall	runtime\proc.c	/^runtime·badmcall(void (*fn)(G*))  \/\/ called from assembly$/;"	f
badmcall2	runtime\proc.c	/^runtime·badmcall2(void (*fn)(G*))  \/\/ called from assembly$/;"	f
badreflectcall	runtime\proc.c	/^runtime·badreflectcall(void) \/\/ called from assembly$/;"	f
checkdead	runtime\proc.c	/^checkdead(void)$/;"	f	file:
checkmcount	runtime\proc.c	/^checkmcount(void)$/;"	f	file:
dropm	runtime\proc.c	/^runtime·dropm(void)$/;"	f
entersyscall	runtime\proc.c	/^·entersyscall(int32 dummy)$/;"	f
entersyscallblock	runtime\proc.c	/^·entersyscallblock(int32 dummy)$/;"	f
execute	runtime\proc.c	/^execute(G *gp)$/;"	f	file:
exitsyscall	runtime\proc.c	/^runtime·exitsyscall(void)$/;"	f
exitsyscall0	runtime\proc.c	/^exitsyscall0(G *gp)$/;"	f	file:
exitsyscallfast	runtime\proc.c	/^exitsyscallfast(void)$/;"	f	file:
experiment	runtime\proc.c	/^static int8 experiment[] = GOEXPERIMENT; \/\/ defined in zaexperiment.h$/;"	v	file:
extram	runtime\proc.c	/^M*	runtime·extram;$/;"	v
findrunnable	runtime\proc.c	/^findrunnable(void)$/;"	f	file:
fn	runtime\proc.c	/^	void (*fn)(uintptr*, int32);$/;"	m	struct:__anon80	file:
fn	runtime\proc.c	/^	void (*fn)(void);$/;"	m	struct:CgoThreadStart	file:
freezetheworld	runtime\proc.c	/^runtime·freezetheworld(void)$/;"	f
g	runtime\proc.c	/^	G *g;$/;"	m	struct:CgoThreadStart	file:
g0	runtime\proc.c	/^G	runtime·g0;	 \/\/ idle goroutine for m0$/;"	v
gcount	runtime\proc.c	/^runtime·gcount(void)$/;"	f
gcprocs	runtime\proc.c	/^runtime·gcprocs(void)$/;"	f
gcstopm	runtime\proc.c	/^gcstopm(void)$/;"	f	file:
gcwaiting	runtime\proc.c	/^	uint32	gcwaiting;	\/\/ gc is waiting to run$/;"	m	struct:Sched	file:
gfget	runtime\proc.c	/^gfget(P *p)$/;"	f	file:
gflock	runtime\proc.c	/^	Lock	gflock;$/;"	m	struct:Sched	file:
gfpurge	runtime\proc.c	/^gfpurge(P *p)$/;"	f	file:
gfput	runtime\proc.c	/^gfput(P *p, G *gp)$/;"	f	file:
gfree	runtime\proc.c	/^	G*	gfree;$/;"	m	struct:Sched	file:
globrunqget	runtime\proc.c	/^globrunqget(P *p, int32 max)$/;"	f	file:
globrunqput	runtime\proc.c	/^globrunqput(G *gp)$/;"	f	file:
goexit	runtime\proc.c	/^runtime·goexit(void)$/;"	f
goexit0	runtime\proc.c	/^goexit0(G *gp)$/;"	f	file:
goidgen	runtime\proc.c	/^	uint64	goidgen;$/;"	m	struct:Sched	file:
golockedOSThread	runtime\proc.c	/^runtime·golockedOSThread(bool ret)$/;"	f
gomaxprocs	runtime\proc.c	/^int32	runtime·gomaxprocs;$/;"	v
gomaxprocsfunc	runtime\proc.c	/^runtime·gomaxprocsfunc(int32 n)$/;"	f
goos	runtime\proc.c	/^int8*	runtime·goos;$/;"	v
goroutineheader	runtime\proc.c	/^runtime·goroutineheader(G *gp)$/;"	f
gosched	runtime\proc.c	/^runtime·gosched(void)$/;"	f
gosched0	runtime\proc.c	/^runtime·gosched0(G *gp)$/;"	f
handoffp	runtime\proc.c	/^handoffp(P *p)$/;"	f	file:
haveexperiment	runtime\proc.c	/^haveexperiment(int8 *name)$/;"	f	file:
helpgc	runtime\proc.c	/^runtime·helpgc(int32 nproc)$/;"	f
hz	runtime\proc.c	/^	int32 hz;$/;"	m	struct:__anon80	file:
incidlelocked	runtime\proc.c	/^incidlelocked(int32 v)$/;"	f	file:
initDone	runtime\proc.c	/^static FuncVal initDone = { runtime·unlockOSThread };$/;"	v	file:
injectglist	runtime\proc.c	/^injectglist(G *glist)$/;"	f	file:
iscgo	runtime\proc.c	/^bool	runtime·iscgo;$/;"	v
lastg	runtime\proc.c	/^G*	runtime·lastg;$/;"	v
lastpoll	runtime\proc.c	/^	uint64	lastpoll;$/;"	m	struct:Sched	file:
lockOSThread	runtime\proc.c	/^lockOSThread(void)$/;"	f	file:
lockOSThread	runtime\proc.c	/^runtime·lockOSThread(void)$/;"	f
lockedOSThread	runtime\proc.c	/^runtime·lockedOSThread(void)$/;"	f
lockextra	runtime\proc.c	/^lockextra(bool nilokay)$/;"	f	file:
m	runtime\proc.c	/^	M *m;$/;"	m	struct:CgoThreadStart	file:
m0	runtime\proc.c	/^M	runtime·m0;$/;"	v
main	runtime\proc.c	/^runtime·main(void)$/;"	f
malg	runtime\proc.c	/^runtime·malg(int32 stacksize)$/;"	f
maxmcount	runtime\proc.c	/^	int32	maxmcount;	\/\/ maximum number of m's allowed (or die)$/;"	m	struct:Sched	file:
mcommoninit	runtime\proc.c	/^mcommoninit(M *mp)$/;"	f	file:
mcount	runtime\proc.c	/^	int32	mcount;	 \/\/ number of m's that have been created$/;"	m	struct:Sched	file:
mcount	runtime\proc.c	/^runtime·mcount(void)$/;"	f
mget	runtime\proc.c	/^mget(void)$/;"	f	file:
mhelpgc	runtime\proc.c	/^mhelpgc(void)$/;"	f	file:
midle	runtime\proc.c	/^	M*	midle;	 \/\/ idle m's waiting for work$/;"	m	struct:Sched	file:
mput	runtime\proc.c	/^mput(M *mp)$/;"	f	file:
mspinning	runtime\proc.c	/^mspinning(void)$/;"	f	file:
mstackalloc	runtime\proc.c	/^mstackalloc(G *gp)$/;"	f	file:
mstart	runtime\proc.c	/^runtime·mstart(void)$/;"	f
ncpu	runtime\proc.c	/^int32	runtime·ncpu;$/;"	v
needaddgcproc	runtime\proc.c	/^needaddgcproc(void)$/;"	f	file:
needextram	runtime\proc.c	/^uint32	runtime·needextram;$/;"	v
needm	runtime\proc.c	/^runtime·needm(byte x)$/;"	f
newextram	runtime\proc.c	/^runtime·newextram(void)$/;"	f
newm	runtime\proc.c	/^newm(void(*fn)(void), P *p)$/;"	f	file:
newproc	runtime\proc.c	/^runtime·newproc(int32 siz, FuncVal* fn, ...)$/;"	f
newproc1	runtime\proc.c	/^runtime·newproc1(FuncVal *fn, byte *argp, int32 narg, int32 nret, void *callerpc)$/;"	f
newprocs	runtime\proc.c	/^static int32	newprocs;$/;"	v	file:
nmidle	runtime\proc.c	/^	int32	nmidle;	 \/\/ number of idle m's waiting for work$/;"	m	struct:Sched	file:
nmidlelocked	runtime\proc.c	/^	int32	nmidlelocked; \/\/ number of locked m's waiting for work$/;"	m	struct:Sched	file:
nmspinning	runtime\proc.c	/^	uint32	nmspinning;$/;"	m	struct:Sched	file:
npidle	runtime\proc.c	/^	uint32	npidle;$/;"	m	struct:Sched	file:
park	runtime\proc.c	/^runtime·park(void(*unlockf)(Lock*), Lock *lock, int8 *reason)$/;"	f
park0	runtime\proc.c	/^park0(G *gp)$/;"	f	file:
pcbuf	runtime\proc.c	/^	uintptr pcbuf[100];$/;"	m	struct:__anon80	file:
pdesc	runtime\proc.c	/^static Pdesc pdesc[MaxGomaxprocs];$/;"	v	file:
pidle	runtime\proc.c	/^	P*	pidle;  \/\/ idle P's$/;"	m	struct:Sched	file:
pidleget	runtime\proc.c	/^pidleget(void)$/;"	f	file:
pidleput	runtime\proc.c	/^pidleput(P *p)$/;"	f	file:
preemptall	runtime\proc.c	/^preemptall(void)$/;"	f	file:
preemptone	runtime\proc.c	/^preemptone(P *p)$/;"	f	file:
procresize	runtime\proc.c	/^procresize(int32 new)$/;"	f	file:
prof	runtime\proc.c	/^} prof;$/;"	v	typeref:struct:__anon80	file:
profilehz	runtime\proc.c	/^	int32	profilehz;	\/\/ cpu profiling rate$/;"	m	struct:Sched	file:
ready	runtime\proc.c	/^runtime·ready(G *gp)$/;"	f
releasep	runtime\proc.c	/^releasep(void)$/;"	f	file:
resetspinning	runtime\proc.c	/^resetspinning(void)$/;"	f	file:
retake	runtime\proc.c	/^retake(int64 now)$/;"	f	file:
runqget	runtime\proc.c	/^runqget(P *p)$/;"	f	file:
runqgrow	runtime\proc.c	/^runqgrow(P *p)$/;"	f	file:
runqhead	runtime\proc.c	/^	G*	runqhead;$/;"	m	struct:Sched	file:
runqput	runtime\proc.c	/^runqput(P *p, G *gp)$/;"	f	file:
runqsize	runtime\proc.c	/^	int32	runqsize;$/;"	m	struct:Sched	file:
runqsteal	runtime\proc.c	/^runqsteal(P *p, P *p2)$/;"	f	file:
runqtail	runtime\proc.c	/^	G*	runqtail;$/;"	m	struct:Sched	file:
runtime_AfterFork	runtime\proc.c	/^syscall·runtime_AfterFork(void)$/;"	f
runtime_BeforeFork	runtime\proc.c	/^syscall·runtime_BeforeFork(void)$/;"	f
save	runtime\proc.c	/^save(void *pc, uintptr sp)$/;"	f	file:
scavenger	runtime\proc.c	/^static FuncVal scavenger = {runtime·MHeap_Scavenger};$/;"	v	file:
sched	runtime\proc.c	/^Sched	runtime·sched;$/;"	v
schedinit	runtime\proc.c	/^runtime·schedinit(void)$/;"	f
schedtick	runtime\proc.c	/^	uint32	schedtick;$/;"	m	struct:Pdesc	file:
schedtrace	runtime\proc.c	/^runtime·schedtrace(bool detailed)$/;"	f
schedule	runtime\proc.c	/^schedule(void)$/;"	f	file:
schedwhen	runtime\proc.c	/^	int64	schedwhen;$/;"	m	struct:Pdesc	file:
setMaxThreads	runtime\proc.c	/^runtime∕debug·setMaxThreads(intgo in, intgo out)$/;"	f
setcpuprofilerate	runtime\proc.c	/^runtime·setcpuprofilerate(void (*fn)(uintptr*, int32), int32 hz)$/;"	f
sigprof	runtime\proc.c	/^runtime·sigprof(uint8 *pc, uint8 *sp, uint8 *lr, G *gp)$/;"	f
startlockedm	runtime\proc.c	/^startlockedm(G *gp)$/;"	f	file:
startm	runtime\proc.c	/^startm(P *p, bool spinning)$/;"	f	file:
starttheworld	runtime\proc.c	/^runtime·starttheworld(void)$/;"	f
stoplockedm	runtime\proc.c	/^stoplockedm(void)$/;"	f	file:
stopm	runtime\proc.c	/^stopm(void)$/;"	f	file:
stopnote	runtime\proc.c	/^	Note	stopnote;$/;"	m	struct:Sched	file:
stoptheworld	runtime\proc.c	/^runtime·stoptheworld(void)$/;"	f
stopwait	runtime\proc.c	/^	int32	stopwait;$/;"	m	struct:Sched	file:
syscalltick	runtime\proc.c	/^	uint32	syscalltick;$/;"	m	struct:Pdesc	file:
syscallwhen	runtime\proc.c	/^	int64	syscallwhen;$/;"	m	struct:Pdesc	file:
sysmon	runtime\proc.c	/^sysmon(void)$/;"	f	file:
sysmonnote	runtime\proc.c	/^	Note	sysmonnote;$/;"	m	struct:Sched	file:
sysmonwait	runtime\proc.c	/^	uint32	sysmonwait;$/;"	m	struct:Sched	file:
testSchedLocalQueue	runtime\proc.c	/^runtime·testSchedLocalQueue(void)$/;"	f
testSchedLocalQueueSteal	runtime\proc.c	/^runtime·testSchedLocalQueueSteal(void)$/;"	f
topofstack	runtime\proc.c	/^runtime·topofstack(Func *f)$/;"	f
tracebackothers	runtime\proc.c	/^runtime·tracebackothers(G *me)$/;"	f
unlockOSThread	runtime\proc.c	/^runtime·unlockOSThread(void)$/;"	f
unlockOSThread	runtime\proc.c	/^unlockOSThread(void)$/;"	f	file:
unlockextra	runtime\proc.c	/^unlockextra(M *mp)$/;"	f	file:
wakep	runtime\proc.c	/^wakep(void)$/;"	f	file:
mnextg	runtime\proc.p	/^ * mnextg is like the C function mnextg(m, g).$/;"	f
RaceAcquire	runtime\race.c	/^runtime·RaceAcquire(void *addr)$/;"	f
RaceDisable	runtime\race.c	/^runtime·RaceDisable(void)$/;"	f
RaceEnable	runtime\race.c	/^runtime·RaceEnable(void)$/;"	f
RaceRead	runtime\race.c	/^runtime·RaceRead(void *addr)$/;"	f
RaceReadRange	runtime\race.c	/^runtime·RaceReadRange(void *addr, intgo len)$/;"	f
RaceRelease	runtime\race.c	/^runtime·RaceRelease(void *addr)$/;"	f
RaceReleaseMerge	runtime\race.c	/^runtime·RaceReleaseMerge(void *addr)$/;"	f
RaceSemacquire	runtime\race.c	/^runtime·RaceSemacquire(uint32 *s)$/;"	f
RaceSemrelease	runtime\race.c	/^runtime·RaceSemrelease(uint32 *s)$/;"	f
RaceWrite	runtime\race.c	/^runtime·RaceWrite(void *addr)$/;"	f
RaceWriteRange	runtime\race.c	/^runtime·RaceWriteRange(void *addr, intgo len)$/;"	f
memoryaccess	runtime\race.c	/^memoryaccess(void *addr, uintptr callpc, uintptr pc, bool write)$/;"	f	file:
onstack	runtime\race.c	/^onstack(uintptr argp)$/;"	f	file:
raceacquire	runtime\race.c	/^runtime·raceacquire(void *addr)$/;"	f
raceacquireg	runtime\race.c	/^runtime·raceacquireg(G *gp, void *addr)$/;"	f
racefingo	runtime\race.c	/^runtime·racefingo(void)$/;"	f
racefini	runtime\race.c	/^runtime·racefini(void)$/;"	f
racefree	runtime\race.c	/^runtime·racefree(void *p)$/;"	f
racefuncenter1	runtime\race.c	/^runtime·racefuncenter1(uintptr pc)$/;"	f
racefuncexit	runtime\race.c	/^runtime·racefuncexit(void)$/;"	f
racegoend	runtime\race.c	/^runtime·racegoend(void)$/;"	f
racegostart	runtime\race.c	/^runtime·racegostart(void *pc)$/;"	f
raceinit	runtime\race.c	/^runtime·raceinit(void)$/;"	f
racemalloc	runtime\race.c	/^runtime·racemalloc(void *p, uintptr sz)$/;"	f
racemapshadow	runtime\race.c	/^runtime·racemapshadow(void *addr, uintptr size)$/;"	f
raceread	runtime\race.c	/^runtime·raceread(uintptr addr)$/;"	f
racereadpc	runtime\race.c	/^runtime·racereadpc(void *addr, void *callpc, void *pc)$/;"	f
racereadrange	runtime\race.c	/^runtime·racereadrange(uintptr addr, uintptr sz)$/;"	f
racereadrangepc	runtime\race.c	/^runtime·racereadrangepc(void *addr, uintptr sz, void *callpc, void *pc)$/;"	f
racerelease	runtime\race.c	/^runtime·racerelease(void *addr)$/;"	f
racereleaseg	runtime\race.c	/^runtime·racereleaseg(G *gp, void *addr)$/;"	f
racereleasemerge	runtime\race.c	/^runtime·racereleasemerge(void *addr)$/;"	f
racereleasemergeg	runtime\race.c	/^runtime·racereleasemergeg(G *gp, void *addr)$/;"	f
racewrite	runtime\race.c	/^runtime·racewrite(uintptr addr)$/;"	f
racewritepc	runtime\race.c	/^runtime·racewritepc(void *addr, void *callpc, void *pc)$/;"	f
racewriterange	runtime\race.c	/^runtime·racewriterange(uintptr addr, uintptr sz)$/;"	f
racewriterangepc	runtime\race.c	/^runtime·racewriterangepc(void *addr, uintptr sz, void *callpc, void *pc)$/;"	f
rangeaccess	runtime\race.c	/^rangeaccess(void *addr, uintptr size, uintptr callpc, uintptr pc, bool write)$/;"	f	file:
raceenabled	runtime\race.h	/^enum { raceenabled = 0 };$/;"	e	enum:__anon82
raceenabled	runtime\race.h	/^enum { raceenabled = 1 };$/;"	e	enum:__anon81
raceacquire	runtime\race0.c	/^runtime·raceacquire(void *addr)$/;"	f
raceacquireg	runtime\race0.c	/^runtime·raceacquireg(G *gp, void *addr)$/;"	f
racefingo	runtime\race0.c	/^runtime·racefingo(void)$/;"	f
racefini	runtime\race0.c	/^runtime·racefini(void)$/;"	f
racefree	runtime\race0.c	/^runtime·racefree(void *p)$/;"	f
racegoend	runtime\race0.c	/^runtime·racegoend(void)$/;"	f
racegostart	runtime\race0.c	/^runtime·racegostart(void *pc)$/;"	f
raceinit	runtime\race0.c	/^runtime·raceinit(void)$/;"	f
racemalloc	runtime\race0.c	/^runtime·racemalloc(void *p, uintptr sz)$/;"	f
racemapshadow	runtime\race0.c	/^runtime·racemapshadow(void *addr, uintptr size)$/;"	f
racereadpc	runtime\race0.c	/^runtime·racereadpc(void *addr, void *callpc, void *pc)$/;"	f
racereadrangepc	runtime\race0.c	/^runtime·racereadrangepc(void *addr, uintptr sz, void *callpc, void *pc)$/;"	f
racerelease	runtime\race0.c	/^runtime·racerelease(void *addr)$/;"	f
racereleaseg	runtime\race0.c	/^runtime·racereleaseg(G *gp, void *addr)$/;"	f
racereleasemerge	runtime\race0.c	/^runtime·racereleasemerge(void *addr)$/;"	f
racereleasemergeg	runtime\race0.c	/^runtime·racereleasemergeg(G *gp, void *addr)$/;"	f
racewritepc	runtime\race0.c	/^runtime·racewritepc(void *addr, void *callpc, void *pc)$/;"	f
racewriterangepc	runtime\race0.c	/^runtime·racewriterangepc(void *addr, uintptr sz, void *callpc, void *pc)$/;"	f
TEXT	runtime\race_amd64.s	/^TEXT	runtime·racefuncenter(SB), NOSPLIT, $16-8$/;"	l
TEXT	runtime\rt0_darwin_386.s	/^TEXT _rt0_386_darwin(SB),NOSPLIT,$8$/;"	l
TEXT	runtime\rt0_darwin_386.s	/^TEXT main(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\rt0_darwin_amd64.s	/^TEXT _rt0_amd64_darwin(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\rt0_darwin_amd64.s	/^TEXT main(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\rt0_dragonfly_386.s	/^TEXT _rt0_386_dragonfly(SB),NOSPLIT,$8$/;"	l
TEXT	runtime\rt0_dragonfly_386.s	/^TEXT main(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\rt0_dragonfly_amd64.s	/^TEXT _rt0_amd64_dragonfly(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\rt0_dragonfly_amd64.s	/^TEXT main(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\rt0_freebsd_386.s	/^TEXT _rt0_386_freebsd(SB),NOSPLIT,$8$/;"	l
TEXT	runtime\rt0_freebsd_386.s	/^TEXT main(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\rt0_freebsd_amd64.s	/^TEXT _rt0_amd64_freebsd(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\rt0_freebsd_amd64.s	/^TEXT main(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\rt0_freebsd_arm.s	/^TEXT _rt0_arm_freebsd(SB),NOSPLIT,$-4$/;"	l
DATA	runtime\rt0_linux_386.s	/^DATA	runtime·_vdso(SB)\/4, $_fallback_vdso(SB)$/;"	l
GLOBL	runtime\rt0_linux_386.s	/^GLOBL	runtime·_vdso(SB), $4$/;"	l
TEXT	runtime\rt0_linux_386.s	/^TEXT _fallback_vdso(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\rt0_linux_386.s	/^TEXT _rt0_386_linux(SB),NOSPLIT,$8$/;"	l
TEXT	runtime\rt0_linux_386.s	/^TEXT main(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\rt0_linux_amd64.s	/^TEXT _rt0_amd64_linux(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\rt0_linux_amd64.s	/^TEXT main(SB),NOSPLIT,$-8$/;"	l
DATA	runtime\rt0_linux_arm.s	/^DATA bad_abi_msg+0x00(SB)\/8, $"This pro"$/;"	l
DATA	runtime\rt0_linux_arm.s	/^DATA bad_abi_msg+0x08(SB)\/8, $"gram can"$/;"	l
DATA	runtime\rt0_linux_arm.s	/^DATA bad_abi_msg+0x10(SB)\/8, $" only be"$/;"	l
DATA	runtime\rt0_linux_arm.s	/^DATA bad_abi_msg+0x18(SB)\/8, $" run on "$/;"	l
DATA	runtime\rt0_linux_arm.s	/^DATA bad_abi_msg+0x20(SB)\/8, $"EABI ker"$/;"	l
DATA	runtime\rt0_linux_arm.s	/^DATA bad_abi_msg+0x28(SB)\/4, $"nels"$/;"	l
DATA	runtime\rt0_linux_arm.s	/^DATA bad_abi_msg+0x2c(SB)\/1, $0xa$/;"	l
GLOBL	runtime\rt0_linux_arm.s	/^GLOBL bad_abi_msg(SB), $45$/;"	l
TEXT	runtime\rt0_linux_arm.s	/^TEXT _rt0_arm_linux(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\rt0_linux_arm.s	/^TEXT _rt0_arm_linux1(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\rt0_linux_arm.s	/^TEXT bad_abi<>(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\rt0_linux_arm.s	/^TEXT main(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\rt0_linux_arm.s	/^TEXT oabi_syscall<>(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\rt0_netbsd_386.s	/^TEXT _rt0_386_netbsd(SB),NOSPLIT,$8$/;"	l
TEXT	runtime\rt0_netbsd_386.s	/^TEXT main(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\rt0_netbsd_amd64.s	/^TEXT _rt0_amd64_netbsd(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\rt0_netbsd_amd64.s	/^TEXT main(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\rt0_netbsd_arm.s	/^TEXT _rt0_arm_netbsd(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\rt0_openbsd_386.s	/^TEXT _rt0_386_openbsd(SB),NOSPLIT,$8$/;"	l
TEXT	runtime\rt0_openbsd_386.s	/^TEXT main(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\rt0_openbsd_amd64.s	/^TEXT _rt0_amd64_openbsd(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\rt0_openbsd_amd64.s	/^TEXT main(SB),NOSPLIT,$-8$/;"	l
DATA	runtime\rt0_plan9_386.s	/^DATA  runtime·isplan9(SB)\/4, $1$/;"	l
GLOBL	runtime\rt0_plan9_386.s	/^GLOBL _tos(SB), $4$/;"	l
GLOBL	runtime\rt0_plan9_386.s	/^GLOBL runtime·isplan9(SB), $4$/;"	l
TEXT	runtime\rt0_plan9_386.s	/^TEXT _rt0_386_plan9(SB),NOSPLIT, $0$/;"	l
argv_fix	runtime\rt0_plan9_386.s	/^argv_fix:$/;"	l
DATA	runtime\rt0_plan9_amd64.s	/^DATA runtime·isplan9(SB)\/4, $1$/;"	l
GLOBL	runtime\rt0_plan9_amd64.s	/^GLOBL runtime·isplan9(SB), $4$/;"	l
TEXT	runtime\rt0_plan9_amd64.s	/^TEXT _rt0_amd64_plan9(SB),NOSPLIT,$-8$/;"	l
DATA	runtime\rt0_windows_386.s	/^DATA  runtime·iswindows(SB)\/4, $1$/;"	l
GLOBL	runtime\rt0_windows_386.s	/^GLOBL runtime·iswindows(SB), $4$/;"	l
TEXT	runtime\rt0_windows_386.s	/^TEXT _rt0_386_windows(SB),NOSPLIT,$12$/;"	l
TEXT	runtime\rt0_windows_386.s	/^TEXT main(SB),NOSPLIT,$0$/;"	l
DATA	runtime\rt0_windows_amd64.s	/^DATA  runtime·iswindows(SB)\/4, $1$/;"	l
GLOBL	runtime\rt0_windows_amd64.s	/^GLOBL runtime·iswindows(SB), $4$/;"	l
TEXT	runtime\rt0_windows_amd64.s	/^TEXT _rt0_amd64_windows(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\rt0_windows_amd64.s	/^TEXT main(SB),NOSPLIT,$-8$/;"	l
Bad	runtime\rune.c	/^	Bad	= Runeerror,$/;"	e	enum:__anon83	file:
Bit1	runtime\rune.c	/^	Bit1	= 7,$/;"	e	enum:__anon83	file:
Bit2	runtime\rune.c	/^	Bit2	= 5,$/;"	e	enum:__anon83	file:
Bit3	runtime\rune.c	/^	Bit3	= 4,$/;"	e	enum:__anon83	file:
Bit4	runtime\rune.c	/^	Bit4	= 3,$/;"	e	enum:__anon83	file:
Bit5	runtime\rune.c	/^	Bit5	= 2,$/;"	e	enum:__anon83	file:
Bitx	runtime\rune.c	/^	Bitx	= 6,$/;"	e	enum:__anon83	file:
Maskx	runtime\rune.c	/^	Maskx	= (1<<Bitx)-1,			\/* 0011 1111 *\/$/;"	e	enum:__anon83	file:
Rune1	runtime\rune.c	/^	Rune1	= (1<<(Bit1+0*Bitx))-1,		\/* 0000 0000 0111 1111 *\/$/;"	e	enum:__anon83	file:
Rune2	runtime\rune.c	/^	Rune2	= (1<<(Bit2+1*Bitx))-1,		\/* 0000 0111 1111 1111 *\/$/;"	e	enum:__anon83	file:
Rune3	runtime\rune.c	/^	Rune3	= (1<<(Bit3+2*Bitx))-1,		\/* 1111 1111 1111 1111 *\/$/;"	e	enum:__anon83	file:
Rune4	runtime\rune.c	/^	Rune4	= (1<<(Bit4+3*Bitx))-1,		\/* 0001 1111 1111 1111 1111 1111 *\/$/;"	e	enum:__anon83	file:
Runeerror	runtime\rune.c	/^	Runeerror	= 0xFFFD,$/;"	e	enum:__anon83	file:
Runemax	runtime\rune.c	/^	Runemax	= 0x10FFFF,	\/* maximum rune value *\/$/;"	e	enum:__anon83	file:
Runeself	runtime\rune.c	/^	Runeself	= 0x80,$/;"	e	enum:__anon83	file:
SurrogateMax	runtime\rune.c	/^	SurrogateMax = 0xDFFF,$/;"	e	enum:__anon83	file:
SurrogateMin	runtime\rune.c	/^	SurrogateMin = 0xD800,$/;"	e	enum:__anon83	file:
T1	runtime\rune.c	/^	T1	= ((1<<(Bit1+1))-1) ^ 0xFF,	\/* 0000 0000 *\/$/;"	e	enum:__anon83	file:
T2	runtime\rune.c	/^	T2	= ((1<<(Bit2+1))-1) ^ 0xFF,	\/* 1100 0000 *\/$/;"	e	enum:__anon83	file:
T3	runtime\rune.c	/^	T3	= ((1<<(Bit3+1))-1) ^ 0xFF,	\/* 1110 0000 *\/$/;"	e	enum:__anon83	file:
T4	runtime\rune.c	/^	T4	= ((1<<(Bit4+1))-1) ^ 0xFF,	\/* 1111 0000 *\/$/;"	e	enum:__anon83	file:
T5	runtime\rune.c	/^	T5	= ((1<<(Bit5+1))-1) ^ 0xFF,	\/* 1111 1000 *\/$/;"	e	enum:__anon83	file:
Testx	runtime\rune.c	/^	Testx	= Maskx ^ 0xFF,			\/* 1100 0000 *\/$/;"	e	enum:__anon83	file:
Tx	runtime\rune.c	/^	Tx	= ((1<<(Bitx+1))-1) ^ 0xFF,	\/* 1000 0000 *\/$/;"	e	enum:__anon83	file:
charntorune	runtime\rune.c	/^runtime·charntorune(int32 *rune, uint8 *str, int32 length)$/;"	f
runetochar	runtime\rune.c	/^runtime·runetochar(byte *str, int32 rune)  \/* note: in original, arg2 was pointer *\/$/;"	f
ChanTypePrinter	runtime\runtime-gdb.py	/^class ChanTypePrinter:$/;"	c
DTypeFunc	runtime\runtime-gdb.py	/^class DTypeFunc(gdb.Function):$/;"	c
GoCapFunc	runtime\runtime-gdb.py	/^class GoCapFunc(gdb.Function):$/;"	c
GoIfaceCmd	runtime\runtime-gdb.py	/^class GoIfaceCmd(gdb.Command):$/;"	c
GoLenFunc	runtime\runtime-gdb.py	/^class GoLenFunc(gdb.Function):$/;"	c
GoroutineCmd	runtime\runtime-gdb.py	/^class GoroutineCmd(gdb.Command):$/;"	c
GoroutinesCmd	runtime\runtime-gdb.py	/^class GoroutinesCmd(gdb.Command):$/;"	c
IfacePrinter	runtime\runtime-gdb.py	/^class IfacePrinter:$/;"	c
MapTypePrinter	runtime\runtime-gdb.py	/^class MapTypePrinter:$/;"	c
SliceTypePrinter	runtime\runtime-gdb.py	/^class SliceTypePrinter:$/;"	c
StringTypePrinter	runtime\runtime-gdb.py	/^class StringTypePrinter:$/;"	c
__init__	runtime\runtime-gdb.py	/^	def __init__(self):$/;"	m	class:DTypeFunc
__init__	runtime\runtime-gdb.py	/^	def __init__(self):$/;"	m	class:GoCapFunc
__init__	runtime\runtime-gdb.py	/^	def __init__(self):$/;"	m	class:GoIfaceCmd
__init__	runtime\runtime-gdb.py	/^	def __init__(self):$/;"	m	class:GoLenFunc
__init__	runtime\runtime-gdb.py	/^	def __init__(self):$/;"	m	class:GoroutineCmd
__init__	runtime\runtime-gdb.py	/^	def __init__(self):$/;"	m	class:GoroutinesCmd
__init__	runtime\runtime-gdb.py	/^	def __init__(self, val):$/;"	m	class:ChanTypePrinter
__init__	runtime\runtime-gdb.py	/^	def __init__(self, val):$/;"	m	class:IfacePrinter
__init__	runtime\runtime-gdb.py	/^	def __init__(self, val):$/;"	m	class:MapTypePrinter
__init__	runtime\runtime-gdb.py	/^	def __init__(self, val):$/;"	m	class:SliceTypePrinter
__init__	runtime\runtime-gdb.py	/^	def __init__(self, val):$/;"	m	class:StringTypePrinter
_rctp_type	runtime\runtime-gdb.py	/^_rctp_type = gdb.lookup_type("struct runtime.rtype").pointer()$/;"	v
children	runtime\runtime-gdb.py	/^	def children(self):$/;"	m	class:ChanTypePrinter
children	runtime\runtime-gdb.py	/^	def children(self):$/;"	m	class:MapTypePrinter
children	runtime\runtime-gdb.py	/^	def children(self):$/;"	m	class:SliceTypePrinter
display_hint	runtime\runtime-gdb.py	/^	def display_hint(self):$/;"	m	class:ChanTypePrinter
display_hint	runtime\runtime-gdb.py	/^	def display_hint(self):$/;"	m	class:IfacePrinter
display_hint	runtime\runtime-gdb.py	/^	def display_hint(self):$/;"	m	class:MapTypePrinter
display_hint	runtime\runtime-gdb.py	/^	def display_hint(self):$/;"	m	class:SliceTypePrinter
display_hint	runtime\runtime-gdb.py	/^	def display_hint(self):$/;"	m	class:StringTypePrinter
find_goroutine	runtime\runtime-gdb.py	/^def find_goroutine(goid):$/;"	f
goobjfile	runtime\runtime-gdb.py	/^goobjfile = gdb.current_objfile() or gdb.objfiles()[0]$/;"	v
how	runtime\runtime-gdb.py	/^	how = ((SliceTypePrinter, 'cap'),$/;"	v	class:GoCapFunc
how	runtime\runtime-gdb.py	/^	how = ((StringTypePrinter, 'len'),$/;"	v	class:GoLenFunc
iface_commontype	runtime\runtime-gdb.py	/^def iface_commontype(obj):$/;"	f
iface_dtype	runtime\runtime-gdb.py	/^def iface_dtype(obj):$/;"	f
iface_dtype_name	runtime\runtime-gdb.py	/^def iface_dtype_name(obj):$/;"	f
ifacematcher	runtime\runtime-gdb.py	/^def ifacematcher(val):$/;"	f
invoke	runtime\runtime-gdb.py	/^	def invoke(self, arg, from_tty):$/;"	m	class:GoIfaceCmd
invoke	runtime\runtime-gdb.py	/^	def invoke(self, arg, from_tty):$/;"	m	class:GoroutineCmd
invoke	runtime\runtime-gdb.py	/^	def invoke(self, arg, from_tty):$/;"	m	class:GoroutinesCmd
invoke	runtime\runtime-gdb.py	/^	def invoke(self, obj):$/;"	m	class:DTypeFunc
invoke	runtime\runtime-gdb.py	/^	def invoke(self, obj):$/;"	m	class:GoCapFunc
invoke	runtime\runtime-gdb.py	/^	def invoke(self, obj):$/;"	m	class:GoLenFunc
is_eface	runtime\runtime-gdb.py	/^def is_eface(val):$/;"	f
is_iface	runtime\runtime-gdb.py	/^def is_iface(val):$/;"	f
linked_list	runtime\runtime-gdb.py	/^def linked_list(ptr, linkfield):$/;"	f
lookup_type	runtime\runtime-gdb.py	/^def lookup_type(name):$/;"	f
makematcher	runtime\runtime-gdb.py	/^def makematcher(klass):$/;"	f
matcher	runtime\runtime-gdb.py	/^	def matcher(val):$/;"	f	function:makematcher
pattern	runtime\runtime-gdb.py	/^	pattern = re.compile(r'^struct \\[\\]')$/;"	v	class:SliceTypePrinter
pattern	runtime\runtime-gdb.py	/^	pattern = re.compile(r'^struct hash<.*>$')$/;"	v	class:MapTypePrinter
pattern	runtime\runtime-gdb.py	/^	pattern = re.compile(r'^struct hchan<.*>$')$/;"	v	class:ChanTypePrinter
pattern	runtime\runtime-gdb.py	/^	pattern = re.compile(r'^struct string$')$/;"	v	class:StringTypePrinter
re	runtime\runtime-gdb.py	/^import sys, re$/;"	i
sts	runtime\runtime-gdb.py	/^sts = ('idle', 'runnable', 'running', 'syscall', 'waiting', 'moribund', 'dead', 'recovery')$/;"	v
sys	runtime\runtime-gdb.py	/^import sys, re$/;"	i
to_string	runtime\runtime-gdb.py	/^	def to_string(self):$/;"	m	class:ChanTypePrinter
to_string	runtime\runtime-gdb.py	/^	def to_string(self):$/;"	m	class:IfacePrinter
to_string	runtime\runtime-gdb.py	/^	def to_string(self):$/;"	m	class:MapTypePrinter
to_string	runtime\runtime-gdb.py	/^	def to_string(self):$/;"	m	class:SliceTypePrinter
to_string	runtime\runtime-gdb.py	/^	def to_string(self):$/;"	m	class:StringTypePrinter
Args	runtime\runtime.c	/^Slice os·Args;$/;"	v
Caller	runtime\runtime.c	/^runtime·Caller(intgo skip, uintptr retpc, String retfile, intgo retline, bool retbool)$/;"	f
Callers	runtime\runtime.c	/^runtime·Callers(intgo skip, Slice pc, intgo retn)$/;"	f
FuncForPC	runtime\runtime.c	/^runtime·FuncForPC(uintptr pc, void *retf)$/;"	f
TestAtomic64	runtime\runtime.c	/^TestAtomic64(void)$/;"	f	file:
argc	runtime\runtime.c	/^static int32	argc;$/;"	v	file:
args	runtime\runtime.c	/^runtime·args(int32 c, uint8 **v)$/;"	f
argv	runtime\runtime.c	/^static uint8**	argv;$/;"	v	file:
atoi	runtime\runtime.c	/^runtime·atoi(byte *p)$/;"	f
check	runtime\runtime.c	/^runtime·check(void)$/;"	f
cpuid_ecx	runtime\runtime.c	/^uint32 runtime·cpuid_ecx;$/;"	v
cpuid_edx	runtime\runtime.c	/^uint32 runtime·cpuid_edx;$/;"	v
dbgvar	runtime\runtime.c	/^} dbgvar[] = {$/;"	v	typeref:struct:__anon85	file:
debug	runtime\runtime.c	/^DebugVars	runtime·debug;$/;"	v
envs	runtime\runtime.c	/^Slice syscall·envs;$/;"	v
fastrand1	runtime\runtime.c	/^runtime·fastrand1(void)$/;"	f
getgoroot	runtime\runtime.c	/^runtime·getgoroot(String out)$/;"	f
goargs	runtime\runtime.c	/^runtime·goargs(void)$/;"	f
goenvs_unix	runtime\runtime.c	/^runtime·goenvs_unix(void)$/;"	f
gotraceback	runtime\runtime.c	/^runtime·gotraceback(bool *crash)$/;"	f
isplan9	runtime\runtime.c	/^int32 runtime·isplan9;$/;"	v
iswindows	runtime\runtime.c	/^int32 runtime·iswindows;$/;"	v
maxround	runtime\runtime.c	/^	maxround = sizeof(uintptr),$/;"	e	enum:__anon84	file:
mchr	runtime\runtime.c	/^runtime·mchr(byte *p, byte c, byte *ep)$/;"	f
mcmp	runtime\runtime.c	/^runtime·mcmp(byte *s1, byte *s2, uintptr n)$/;"	f
name	runtime\runtime.c	/^	int8*	name;$/;"	m	struct:__anon85	file:
parsedebugvars	runtime\runtime.c	/^runtime·parsedebugvars(void)$/;"	f
runtime_cyclesPerSecond	runtime\runtime.c	/^runtime∕pprof·runtime_cyclesPerSecond(int64 res)$/;"	f
ticks	runtime\runtime.c	/^static int64 ticks;$/;"	v	file:
ticksLock	runtime\runtime.c	/^static Lock ticksLock;$/;"	v	file:
tickspersecond	runtime\runtime.c	/^runtime·tickspersecond(void)$/;"	f
timediv	runtime\runtime.c	/^runtime·timediv(int64 v, int32 div, int32 *rem)$/;"	f
value	runtime\runtime.c	/^	int32*	value;$/;"	m	struct:__anon85	file:
ACPLX128	runtime\runtime.h	/^	ACPLX128,$/;"	e	enum:__anon96
ACPLX64	runtime\runtime.h	/^	ACPLX64,$/;"	e	enum:__anon96
AFLOAT32	runtime\runtime.h	/^	AFLOAT32,$/;"	e	enum:__anon96
AFLOAT64	runtime\runtime.h	/^	AFLOAT64,$/;"	e	enum:__anon96
AINTER	runtime\runtime.h	/^	AINTER,$/;"	e	enum:__anon96
AMEM	runtime\runtime.h	/^	AMEM,$/;"	e	enum:__anon96
AMEM0	runtime\runtime.h	/^	AMEM0,$/;"	e	enum:__anon96
AMEM128	runtime\runtime.h	/^	AMEM128,$/;"	e	enum:__anon96
AMEM16	runtime\runtime.h	/^	AMEM16,$/;"	e	enum:__anon96
AMEM32	runtime\runtime.h	/^	AMEM32,$/;"	e	enum:__anon96
AMEM64	runtime\runtime.h	/^	AMEM64,$/;"	e	enum:__anon96
AMEM8	runtime\runtime.h	/^	AMEM8,$/;"	e	enum:__anon96
ANILINTER	runtime\runtime.h	/^	ANILINTER,$/;"	e	enum:__anon96
ANOEQ	runtime\runtime.h	/^	ANOEQ,$/;"	e	enum:__anon96
ANOEQ0	runtime\runtime.h	/^	ANOEQ0,$/;"	e	enum:__anon96
ANOEQ128	runtime\runtime.h	/^	ANOEQ128,$/;"	e	enum:__anon96
ANOEQ16	runtime\runtime.h	/^	ANOEQ16,$/;"	e	enum:__anon96
ANOEQ32	runtime\runtime.h	/^	ANOEQ32,$/;"	e	enum:__anon96
ANOEQ64	runtime\runtime.h	/^	ANOEQ64,$/;"	e	enum:__anon96
ANOEQ8	runtime\runtime.h	/^	ANOEQ8,$/;"	e	enum:__anon96
ASLICE	runtime\runtime.h	/^	ASLICE,$/;"	e	enum:__anon96
ASTRING	runtime\runtime.h	/^	ASTRING,$/;"	e	enum:__anon96
Alg	runtime\runtime.h	/^struct	Alg$/;"	s
Alg	runtime\runtime.h	/^typedef	struct	Alg		Alg;$/;"	t	typeref:struct:Alg
Amax	runtime\runtime.h	/^	Amax$/;"	e	enum:__anon96
CgoMal	runtime\runtime.h	/^struct CgoMal$/;"	s
CgoMal	runtime\runtime.h	/^typedef	struct	CgoMal		CgoMal;$/;"	t	typeref:struct:CgoMal
ChanType	runtime\runtime.h	/^typedef	struct	ChanType		ChanType;$/;"	t	typeref:struct:ChanType
Complex128	runtime\runtime.h	/^struct Complex128$/;"	s
Complex128	runtime\runtime.h	/^typedef	struct	Complex128	Complex128;$/;"	t	typeref:struct:Complex128
Complex64	runtime\runtime.h	/^struct Complex64$/;"	s
Complex64	runtime\runtime.h	/^typedef	struct	Complex64	Complex64;$/;"	t	typeref:struct:Complex64
DebugVars	runtime\runtime.h	/^struct DebugVars$/;"	s
DebugVars	runtime\runtime.h	/^typedef	struct	DebugVars	DebugVars;$/;"	t	typeref:struct:DebugVars
Defer	runtime\runtime.h	/^struct Defer$/;"	s
Defer	runtime\runtime.h	/^typedef	struct	Defer		Defer;$/;"	t	typeref:struct:Defer
DeferChunk	runtime\runtime.h	/^struct DeferChunk$/;"	s
DeferChunk	runtime\runtime.h	/^typedef	struct	DeferChunk	DeferChunk;$/;"	t	typeref:struct:DeferChunk
EACCES	runtime\runtime.h	963;"	d
Eface	runtime\runtime.h	/^struct Eface$/;"	s
Eface	runtime\runtime.h	/^typedef	struct	Eface		Eface;$/;"	t	typeref:struct:Eface
FLUSH	runtime\runtime.h	735;"	d
FixAlloc	runtime\runtime.h	/^typedef	struct	FixAlloc	FixAlloc;$/;"	t	typeref:struct:FixAlloc
Func	runtime\runtime.h	/^struct	Func$/;"	s
Func	runtime\runtime.h	/^typedef	struct	Func		Func;$/;"	t	typeref:struct:Func
FuncVal	runtime\runtime.h	/^struct FuncVal$/;"	s
FuncVal	runtime\runtime.h	/^typedef	struct	FuncVal		FuncVal;$/;"	t	typeref:struct:FuncVal
G	runtime\runtime.h	/^struct	G$/;"	s
G	runtime\runtime.h	/^typedef	struct	G		G;$/;"	t	typeref:struct:G
GCStats	runtime\runtime.h	/^struct	GCStats$/;"	s
GCStats	runtime\runtime.h	/^typedef	struct	GCStats		GCStats;$/;"	t	typeref:struct:GCStats
Gdead	runtime\runtime.h	/^	Gdead,$/;"	e	enum:__anon86
Gidle	runtime\runtime.h	/^	Gidle,$/;"	e	enum:__anon86
Gmoribund_unused	runtime\runtime.h	/^	Gmoribund_unused,  \/\/ currently unused, but hardcoded in gdb scripts$/;"	e	enum:__anon86
Gobuf	runtime\runtime.h	/^struct	Gobuf$/;"	s
Gobuf	runtime\runtime.h	/^typedef	struct	Gobuf		Gobuf;$/;"	t	typeref:struct:Gobuf
Grunnable	runtime\runtime.h	/^	Grunnable,$/;"	e	enum:__anon86
Grunning	runtime\runtime.h	/^	Grunning,$/;"	e	enum:__anon86
Gsyscall	runtime\runtime.h	/^	Gsyscall,$/;"	e	enum:__anon86
Gwaiting	runtime\runtime.h	/^	Gwaiting,$/;"	e	enum:__anon86
HashRandomBytes	runtime\runtime.h	/^	HashRandomBytes = 32$/;"	e	enum:__anon97
Hchan	runtime\runtime.h	/^typedef	struct	Hchan		Hchan;$/;"	t	typeref:struct:Hchan
Hmap	runtime\runtime.h	/^typedef	struct	Hmap		Hmap;$/;"	t	typeref:struct:Hmap
ISNAN	runtime\runtime.h	1063;"	d
Iface	runtime\runtime.h	/^struct Iface$/;"	s
Iface	runtime\runtime.h	/^typedef	struct	Iface		Iface;$/;"	t	typeref:struct:Iface
InterfaceType	runtime\runtime.h	/^typedef	struct	InterfaceType	InterfaceType;$/;"	t	typeref:struct:InterfaceType
Itab	runtime\runtime.h	/^struct	Itab$/;"	s
Itab	runtime\runtime.h	/^typedef	struct	Itab		Itab;$/;"	t	typeref:struct:Itab
LFNode	runtime\runtime.h	/^struct LFNode$/;"	s
LFNode	runtime\runtime.h	/^typedef	struct	LFNode		LFNode;$/;"	t	typeref:struct:LFNode
Lock	runtime\runtime.h	/^	Lock;$/;"	m	struct:P
Lock	runtime\runtime.h	/^	Lock;$/;"	m	struct:Timers
Lock	runtime\runtime.h	/^struct	Lock$/;"	s
Lock	runtime\runtime.h	/^typedef	struct	Lock		Lock;$/;"	t	typeref:struct:Lock
LockExternal	runtime\runtime.h	/^	LockExternal = 1,$/;"	e	enum:__anon91
LockInternal	runtime\runtime.h	/^	LockInternal = 2,$/;"	e	enum:__anon91
M	runtime\runtime.h	/^struct	M$/;"	s
M	runtime\runtime.h	/^typedef	struct	M		M;$/;"	t	typeref:struct:M
MCache	runtime\runtime.h	/^typedef	struct	MCache		MCache;$/;"	t	typeref:struct:MCache
MapType	runtime\runtime.h	/^typedef	struct	MapType		MapType;$/;"	t	typeref:struct:MapType
Note	runtime\runtime.h	/^struct	Note$/;"	s
Note	runtime\runtime.h	/^typedef	struct	Note		Note;$/;"	t	typeref:struct:Note
P	runtime\runtime.h	/^struct P$/;"	s
P	runtime\runtime.h	/^typedef	struct	P		P;$/;"	t	typeref:struct:P
Panic	runtime\runtime.h	/^struct Panic$/;"	s
Panic	runtime\runtime.h	/^typedef	struct	Panic		Panic;$/;"	t	typeref:struct:Panic
ParFor	runtime\runtime.h	/^struct ParFor$/;"	s
ParFor	runtime\runtime.h	/^typedef	struct	ParFor		ParFor;$/;"	t	typeref:struct:ParFor
ParForThread	runtime\runtime.h	/^typedef	struct	ParForThread	ParForThread;$/;"	t	typeref:struct:ParForThread
Pdead	runtime\runtime.h	/^	Pdead,$/;"	e	enum:__anon87
Pgcstop	runtime\runtime.h	/^	Pgcstop,$/;"	e	enum:__anon87
Pidle	runtime\runtime.h	/^	Pidle,$/;"	e	enum:__anon87
PollDesc	runtime\runtime.h	/^typedef	struct	PollDesc	PollDesc;$/;"	t	typeref:struct:PollDesc
Prunning	runtime\runtime.h	/^	Prunning,$/;"	e	enum:__anon87
Psyscall	runtime\runtime.h	/^	Psyscall,$/;"	e	enum:__anon87
PtrSize	runtime\runtime.h	/^	PtrSize = sizeof(void*),$/;"	e	enum:__anon89
ROUND	runtime\runtime.h	551;"	d
SEH	runtime\runtime.h	/^struct	SEH$/;"	s
SEH	runtime\runtime.h	/^typedef	struct	SEH		SEH;$/;"	t	typeref:struct:SEH
SigDefault	runtime\runtime.h	/^	SigDefault = 1<<4,	\/\/ if the signal isn't explicitly requested, don't monitor it$/;"	e	enum:__anon92
SigHandling	runtime\runtime.h	/^	SigHandling = 1<<5,	\/\/ our signal handler is registered$/;"	e	enum:__anon92
SigIgnored	runtime\runtime.h	/^	SigIgnored = 1<<6,	\/\/ the signal was ignored before we registered for it$/;"	e	enum:__anon92
SigKill	runtime\runtime.h	/^	SigKill = 1<<1,		\/\/ if signal.Notify doesn't take it, exit quietly$/;"	e	enum:__anon92
SigNotify	runtime\runtime.h	/^	SigNotify = 1<<0,	\/\/ let signal.Notify have signal, even if from kernel$/;"	e	enum:__anon92
SigPanic	runtime\runtime.h	/^	SigPanic = 1<<3,	\/\/ if the signal is from the kernel, panic$/;"	e	enum:__anon92
SigTab	runtime\runtime.h	/^struct	SigTab$/;"	s
SigTab	runtime\runtime.h	/^typedef	struct	SigTab		SigTab;$/;"	t	typeref:struct:SigTab
SigThrow	runtime\runtime.h	/^	SigThrow = 1<<2,	\/\/ if signal.Notify doesn't take it, exit loudly$/;"	e	enum:__anon92
Slice	runtime\runtime.h	/^struct	Slice$/;"	s
Slice	runtime\runtime.h	/^typedef	struct	Slice		Slice;$/;"	t	typeref:struct:Slice
StackCacheBatch	runtime\runtime.h	/^	StackCacheBatch = 16,$/;"	e	enum:__anon90
StackCacheSize	runtime\runtime.h	/^	StackCacheSize = 32,$/;"	e	enum:__anon90
Stkframe	runtime\runtime.h	/^struct Stkframe$/;"	s
Stkframe	runtime\runtime.h	/^typedef struct Stkframe Stkframe;$/;"	t	typeref:struct:Stkframe
Stktop	runtime\runtime.h	/^struct	Stktop$/;"	s
Stktop	runtime\runtime.h	/^typedef	struct	Stktop		Stktop;$/;"	t	typeref:struct:Stktop
String	runtime\runtime.h	/^struct String$/;"	s
String	runtime\runtime.h	/^typedef	struct	String		String;$/;"	t	typeref:struct:String
Structrnd	runtime\runtime.h	/^	Structrnd = sizeof(uintptr)$/;"	e	enum:__anon95
Timer	runtime\runtime.h	/^struct	Timer$/;"	s
Timer	runtime\runtime.h	/^typedef	struct	Timer		Timer;$/;"	t	typeref:struct:Timer
Timers	runtime\runtime.h	/^struct	Timers$/;"	s
Timers	runtime\runtime.h	/^typedef	struct	Timers		Timers;$/;"	t	typeref:struct:Timers
Type	runtime\runtime.h	/^typedef	struct	Type		Type;$/;"	t	typeref:struct:Type
UseSpanType	runtime\runtime.h	/^	UseSpanType = 1,$/;"	e	enum:__anon98
WinCall	runtime\runtime.h	/^struct	WinCall$/;"	s
WinCall	runtime\runtime.h	/^typedef	struct	WinCall		WinCall;$/;"	t	typeref:struct:WinCall
WinCallbackContext	runtime\runtime.h	/^struct	WinCallbackContext$/;"	s
WinCallbackContext	runtime\runtime.h	/^typedef	struct	WinCallbackContext	WinCallbackContext;$/;"	t	typeref:struct:WinCallbackContext
Windows	runtime\runtime.h	/^   Windows = 0$/;"	e	enum:__anon94
Windows	runtime\runtime.h	/^   Windows = 1$/;"	e	enum:__anon93
alllink	runtime\runtime.h	/^	G*	alllink;	\/\/ on allg$/;"	m	struct:G
alllink	runtime\runtime.h	/^	M*	alllink;	\/\/ on allm$/;"	m	struct:M
alloc	runtime\runtime.h	/^	void	*alloc;$/;"	m	struct:CgoMal
arg	runtime\runtime.h	/^	Eface	arg;		\/\/ argument to panic$/;"	m	struct:Panic
arg	runtime\runtime.h	/^	Eface	arg;$/;"	m	struct:Timer
arglen	runtime\runtime.h	/^	uintptr	arglen;	\/\/ number of bytes at argp$/;"	m	struct:Stkframe
argp	runtime\runtime.h	/^	byte*	argp;		\/\/ where args were copied from$/;"	m	struct:Defer
argp	runtime\runtime.h	/^	byte*	argp;	\/\/ pointer to function arguments$/;"	m	struct:Stkframe
argp	runtime\runtime.h	/^	uint8*	argp;	\/\/ pointer to arguments in old frame$/;"	m	struct:Stktop
args	runtime\runtime.h	/^	int32	args;	\/\/ in\/out args size$/;"	m	struct:Func
args	runtime\runtime.h	/^	void*	args;	\/\/ parameters$/;"	m	struct:WinCall
args	runtime\runtime.h	/^	void*	args[1];	\/\/ padded to actual size$/;"	m	struct:Defer
argsize	runtime\runtime.h	/^	uint32	argsize;$/;"	m	struct:Stktop
argsize	runtime\runtime.h	/^	uintptr	argsize;	\/\/ callback arguments size (in bytes)$/;"	m	struct:WinCallbackContext
array	runtime\runtime.h	/^	byte*	array;		\/\/ actual data$/;"	m	struct:Slice
bad	runtime\runtime.h	/^	int32	bad;$/;"	m	struct:Itab
body	runtime\runtime.h	/^	void (*body)(ParFor*, uint32);	\/\/ executed for each element$/;"	m	struct:ParFor
bool	runtime\runtime.h	/^typedef	uint8			bool;$/;"	t
byte	runtime\runtime.h	/^typedef	uint8			byte;$/;"	t
cap	runtime\runtime.h	/^	int32	cap;$/;"	m	struct:Timers
cap	runtime\runtime.h	/^	uintgo	cap;		\/\/ allocated number of elements$/;"	m	struct:Slice
caughtsig	runtime\runtime.h	/^	G*	caughtsig;	\/\/ goroutine running during fatal signal$/;"	m	struct:M
cgomal	runtime\runtime.h	/^	CgoMal*	cgomal;$/;"	m	struct:M
char	runtime\runtime.h	38;"	d
cnt	runtime\runtime.h	/^	uint32 cnt;			\/\/ iteration space [0, cnt)$/;"	m	struct:ParFor
copy	runtime\runtime.h	/^	void	(*copy)(uintptr, void*, void*);$/;"	m	struct:Alg
createstack	runtime\runtime.h	/^	uintptr	createstack[32];\/\/ Stack that created this thread.$/;"	m	struct:M
cret	runtime\runtime.h	/^	uintptr	cret;		\/\/ return value from C$/;"	m	struct:M
ctx	runtime\runtime.h	/^	void *ctx;			\/\/ arbitrary user context$/;"	m	struct:ParFor
ctxt	runtime\runtime.h	/^	void*	ctxt;$/;"	m	struct:Gobuf
curg	runtime\runtime.h	/^	G*	curg;		\/\/ current running goroutine$/;"	m	struct:M
data	runtime\runtime.h	/^	void*	data;$/;"	m	struct:Eface
data	runtime\runtime.h	/^	void*	data;$/;"	m	struct:Iface
dchunk	runtime\runtime.h	/^	DeferChunk*	dchunk;$/;"	m	struct:G
dchunknext	runtime\runtime.h	/^	DeferChunk*	dchunknext;$/;"	m	struct:G
defer	runtime\runtime.h	/^	Defer*	defer;$/;"	m	struct:G
done	runtime\runtime.h	/^	uint32 done;			\/\/ number of idle threads$/;"	m	struct:ParFor
double	runtime\runtime.h	43;"	d
dying	runtime\runtime.h	/^	int32	dying;$/;"	m	struct:M
end	runtime\runtime.h	/^	uintptr	end[];$/;"	m	struct:G
end	runtime\runtime.h	/^	uintptr	end[];$/;"	m	struct:M
entry	runtime\runtime.h	/^	uintptr	entry;	\/\/ start pc$/;"	m	struct:Func
equal	runtime\runtime.h	/^	void	(*equal)(bool*, uintptr, void*, void*);$/;"	m	struct:Alg
err	runtime\runtime.h	/^	uintptr	err;	\/\/ error number$/;"	m	struct:WinCall
errstr	runtime\runtime.h	/^	byte*	errstr;$/;"	m	struct:M
false	runtime\runtime.h	/^	false	= 0,$/;"	e	enum:__anon88
fastrand	runtime\runtime.h	/^	uint32	fastrand;$/;"	m	struct:M
fflag	runtime\runtime.h	/^	uint32	fflag;		\/\/ floating point compare flags$/;"	m	struct:M
flags	runtime\runtime.h	/^	int32	flags;$/;"	m	struct:SigTab
float	runtime\runtime.h	42;"	d
float32	runtime\runtime.h	/^typedef	float			float32;$/;"	t
float64	runtime\runtime.h	/^typedef	double			float64;$/;"	t
fn	runtime\runtime.h	/^	Func*	fn;	\/\/ function being run$/;"	m	struct:Stkframe
fn	runtime\runtime.h	/^	FuncVal*	fn;$/;"	m	struct:Defer
fn	runtime\runtime.h	/^	void	(*fn)(void);$/;"	m	struct:FuncVal
fn	runtime\runtime.h	/^	void	(*fn)(void*);$/;"	m	struct:WinCall
fp	runtime\runtime.h	/^	uintptr	fp;	\/\/ stack pointer at caller aka frame pointer$/;"	m	struct:Stkframe
frame	runtime\runtime.h	/^	int32	frame;	\/\/ legacy frame size; use pcsp if possible$/;"	m	struct:Func
free	runtime\runtime.h	/^	bool	free;		\/\/ if special, free when done$/;"	m	struct:Defer
free	runtime\runtime.h	/^	uintptr	free;	\/\/ if free>0, call stackfree using free as size$/;"	m	struct:Stktop
freghi	runtime\runtime.h	/^	uint32	freghi[16];	\/\/ D[i] msb and F[i+16]$/;"	m	struct:M
freglo	runtime\runtime.h	/^	uint32	freglo[16];	\/\/ D[i] lsb and F[i]$/;"	m	struct:M
fun	runtime\runtime.h	/^	void	(*fun[])(void);$/;"	m	struct:Itab
fv	runtime\runtime.h	/^	FuncVal	*fv;$/;"	m	struct:Timer
g	runtime\runtime.h	/^	G*	g;$/;"	m	struct:Gobuf
g0	runtime\runtime.h	/^	G*	g0;		\/\/ goroutine with scheduling stack$/;"	m	struct:M
gcing	runtime\runtime.h	/^	int32	gcing;$/;"	m	struct:M
gcstats	runtime\runtime.h	/^	GCStats	gcstats;$/;"	m	struct:M
gctrace	runtime\runtime.h	/^	int32	gctrace;$/;"	m	struct:DebugVars
gfree	runtime\runtime.h	/^	G*	gfree;$/;"	m	struct:P
gfreecnt	runtime\runtime.h	/^	int32	gfreecnt;$/;"	m	struct:P
gobody	runtime\runtime.h	/^	void*	gobody;		\/\/ Go function to call$/;"	m	struct:WinCallbackContext
gobuf	runtime\runtime.h	/^	Gobuf	gobuf;$/;"	m	struct:Stktop
goid	runtime\runtime.h	/^	int64	goid;$/;"	m	struct:G
gopc	runtime\runtime.h	/^	uintptr	gopc;		\/\/ pc of go statement that created this goroutine$/;"	m	struct:G
gsignal	runtime\runtime.h	/^	G*	gsignal;	\/\/ signal-handling G$/;"	m	struct:M
handler	runtime\runtime.h	/^	void*	handler;$/;"	m	struct:SEH
hash	runtime\runtime.h	/^	void	(*hash)(uintptr*, uintptr, void*);$/;"	m	struct:Alg
helpgc	runtime\runtime.h	/^	int32	helpgc;$/;"	m	struct:M
i	runtime\runtime.h	/^	int32	i;	\/\/ heap index$/;"	m	struct:Timer
id	runtime\runtime.h	/^	int32	id;$/;"	m	struct:M
id	runtime\runtime.h	/^	int32	id;$/;"	m	struct:P
imag	runtime\runtime.h	/^	float32	imag;$/;"	m	struct:Complex64
imag	runtime\runtime.h	/^	float64	imag;$/;"	m	struct:Complex128
int	runtime\runtime.h	40;"	d
int16	runtime\runtime.h	/^typedef	signed short		int16;$/;"	t
int32	runtime\runtime.h	/^typedef	signed int		int32;$/;"	t
int64	runtime\runtime.h	/^typedef	signed long long int	int64;$/;"	t
int8	runtime\runtime.h	/^typedef	signed char		int8;$/;"	t
inter	runtime\runtime.h	/^	InterfaceType*	inter;$/;"	m	struct:Itab
intgo	runtime\runtime.h	/^typedef	int32		intgo; \/\/ Go's int$/;"	t
intgo	runtime\runtime.h	/^typedef	int64		intgo; \/\/ Go's int$/;"	t
intptr	runtime\runtime.h	/^typedef	int32		intptr;$/;"	t
intptr	runtime\runtime.h	/^typedef	int64		intptr;$/;"	t
isbackground	runtime\runtime.h	/^	bool	isbackground;	\/\/ ignore in deadlock detector$/;"	m	struct:G
ispanic	runtime\runtime.h	/^	bool	ispanic;$/;"	m	struct:G
issystem	runtime\runtime.h	/^	bool	issystem;	\/\/ do not output in stack dump$/;"	m	struct:G
key	runtime\runtime.h	/^	uintptr	key;$/;"	m	struct:Lock
key	runtime\runtime.h	/^	uintptr	key;$/;"	m	struct:Note
len	runtime\runtime.h	/^	int32	len;$/;"	m	struct:Timers
len	runtime\runtime.h	/^	intgo	len;$/;"	m	struct:String
len	runtime\runtime.h	/^	uintgo	len;		\/\/ number of elements$/;"	m	struct:Slice
link	runtime\runtime.h	/^	Defer*	link;$/;"	m	struct:Defer
link	runtime\runtime.h	/^	Itab*	link;$/;"	m	struct:Itab
link	runtime\runtime.h	/^	P*	link;$/;"	m	struct:P
link	runtime\runtime.h	/^	Panic*	link;		\/\/ link to earlier panic$/;"	m	struct:Panic
locked	runtime\runtime.h	/^	uint32	locked;		\/\/ tracking for LockOSThread$/;"	m	struct:M
lockedg	runtime\runtime.h	/^	G*	lockedg;$/;"	m	struct:M
lockedm	runtime\runtime.h	/^	M*	lockedm;$/;"	m	struct:G
locks	runtime\runtime.h	/^	int32	locks;$/;"	m	struct:M
long	runtime\runtime.h	41;"	d
lr	runtime\runtime.h	/^	uintptr	lr;	\/\/ program counter at caller aka link register$/;"	m	struct:Stkframe
lr	runtime\runtime.h	/^	uintptr	lr;$/;"	m	struct:Gobuf
m	runtime\runtime.h	/^	M*	m;		\/\/ back-link to associated M (nil if idle)$/;"	m	struct:P
m	runtime\runtime.h	/^	M*	m;		\/\/ for debuggers, but offset not hard-coded$/;"	m	struct:G
machport	runtime\runtime.h	/^	uint32	machport;	\/\/ Return address for Mach IPC (OS X)$/;"	m	struct:M
mallocing	runtime\runtime.h	/^	int32	mallocing;$/;"	m	struct:M
mcache	runtime\runtime.h	/^	MCache*	mcache;$/;"	m	struct:M
mcache	runtime\runtime.h	/^	MCache*	mcache;$/;"	m	struct:P
moreargp	runtime\runtime.h	/^	void*	moreargp;	\/\/ argument pointer for more stack$/;"	m	struct:M
moreargsize	runtime\runtime.h	/^	uint32	moreargsize;$/;"	m	struct:M
morebuf	runtime\runtime.h	/^	Gobuf	morebuf;	\/\/ gobuf arg to morestack$/;"	m	struct:M
moreframesize	runtime\runtime.h	/^	uint32	moreframesize;	\/\/ size arguments to morestack$/;"	m	struct:M
mstartfn	runtime\runtime.h	/^	void	(*mstartfn)(void);$/;"	m	struct:M
n	runtime\runtime.h	/^	uintptr	n;	\/\/ number of parameters$/;"	m	struct:WinCall
name	runtime\runtime.h	/^	int8	*name;$/;"	m	struct:SigTab
nameoff	runtime\runtime.h	/^	int32	nameoff;\/\/ function name$/;"	m	struct:Func
ncgo	runtime\runtime.h	/^	int32	ncgo;		\/\/ number of cgo calls currently in progress$/;"	m	struct:M
ncgocall	runtime\runtime.h	/^	uint64	ncgocall;	\/\/ number of cgo calls in total$/;"	m	struct:M
needextram	runtime\runtime.h	/^	bool	needextram;$/;"	m	struct:M
nelem	runtime\runtime.h	548;"	d
next	runtime\runtime.h	/^	CgoMal	*next;$/;"	m	struct:CgoMal
next	runtime\runtime.h	/^	LFNode	*next;$/;"	m	struct:LFNode
nextp	runtime\runtime.h	/^	P*	nextp;$/;"	m	struct:M
nextwaitm	runtime\runtime.h	/^	M*	nextwaitm;	\/\/ next M waiting for lock$/;"	m	struct:M
nfuncdata	runtime\runtime.h	/^	int32	nfuncdata;$/;"	m	struct:Func
nhandoff	runtime\runtime.h	/^	uint64	nhandoff;$/;"	m	struct:GCStats
nhandoffcnt	runtime\runtime.h	/^	uint64	nhandoffcnt;$/;"	m	struct:GCStats
nil	runtime\runtime.h	549;"	d
nosyield	runtime\runtime.h	/^	uint64	nosyield;$/;"	m	struct:GCStats
nosyield	runtime\runtime.h	/^	uint64 nosyield;$/;"	m	struct:ParFor
notesig	runtime\runtime.h	/^	int8*	notesig;$/;"	m	struct:M
npcdata	runtime\runtime.h	/^	int32	npcdata;$/;"	m	struct:Func
nprocyield	runtime\runtime.h	/^	uint64	nprocyield;$/;"	m	struct:GCStats
nprocyield	runtime\runtime.h	/^	uint64 nprocyield;$/;"	m	struct:ParFor
nsleep	runtime\runtime.h	/^	uint64	nsleep;$/;"	m	struct:GCStats
nsleep	runtime\runtime.h	/^	uint64 nsleep;$/;"	m	struct:ParFor
nsteal	runtime\runtime.h	/^	uint64 nsteal;$/;"	m	struct:ParFor
nstealcnt	runtime\runtime.h	/^	uint64 nstealcnt;$/;"	m	struct:ParFor
nthr	runtime\runtime.h	/^	uint32 nthr;			\/\/ total number of threads$/;"	m	struct:ParFor
nthrmax	runtime\runtime.h	/^	uint32 nthrmax;			\/\/ maximum number of threads$/;"	m	struct:ParFor
off	runtime\runtime.h	/^	uintptr	off;$/;"	m	struct:DeferChunk
offsetof	runtime\runtime.h	550;"	d
p	runtime\runtime.h	/^	P*	p;		\/\/ attached P for executing Go code (nil if not executing Go code)$/;"	m	struct:M
pad	runtime\runtime.h	/^	byte	pad[64];$/;"	m	struct:P
pad	runtime\runtime.h	/^	uint32 pad;			\/\/ to align ParForThread.pos for 64-bit atomic operations$/;"	m	struct:ParFor
panic	runtime\runtime.h	/^	Panic*	panic;$/;"	m	struct:G
panic	runtime\runtime.h	/^	bool	panic;	\/\/ is this frame the top of a panic?$/;"	m	struct:Stktop
panicwrap	runtime\runtime.h	/^	uint32	panicwrap;	\/\/ cannot move - also known to linker$/;"	m	struct:G
panicwrap	runtime\runtime.h	/^	uint32	panicwrap;$/;"	m	struct:Stktop
param	runtime\runtime.h	/^	void*	param;		\/\/ passed parameter on wakeup$/;"	m	struct:G
park	runtime\runtime.h	/^	Note	park;$/;"	m	struct:M
pc	runtime\runtime.h	/^	byte*	pc;$/;"	m	struct:Defer
pc	runtime\runtime.h	/^	uintptr	pc;	\/\/ program counter within fn$/;"	m	struct:Stkframe
pc	runtime\runtime.h	/^	uintptr	pc;$/;"	m	struct:Gobuf
pcfile	runtime\runtime.h	/^	int32	pcfile;$/;"	m	struct:Func
pcln	runtime\runtime.h	/^	int32	pcln;$/;"	m	struct:Func
pcsp	runtime\runtime.h	/^	int32	pcsp;$/;"	m	struct:Func
period	runtime\runtime.h	/^	int64	period;$/;"	m	struct:Timer
preempt	runtime\runtime.h	/^	bool	preempt;	\/\/ preemption signal, duplicates stackguard0 = StackPreempt$/;"	m	struct:G
prev	runtime\runtime.h	/^	DeferChunk	*prev;$/;"	m	struct:DeferChunk
prev	runtime\runtime.h	/^	void*	prev;$/;"	m	struct:SEH
print	runtime\runtime.h	/^	void	(*print)(uintptr, void*);$/;"	m	struct:Alg
procid	runtime\runtime.h	/^	uint64	procid;		\/\/ for debuggers, but offset not hard-coded$/;"	m	struct:M
profilehz	runtime\runtime.h	/^	int32	profilehz;$/;"	m	struct:M
pushcnt	runtime\runtime.h	/^	uintptr	pushcnt;$/;"	m	struct:LFNode
r1	runtime\runtime.h	/^	uintptr	r1;	\/\/ return values$/;"	m	struct:WinCall
r2	runtime\runtime.h	/^	uintptr	r2;$/;"	m	struct:WinCall
racecall	runtime\runtime.h	/^	bool	racecall;$/;"	m	struct:M
racectx	runtime\runtime.h	/^	uintptr	racectx;$/;"	m	struct:G
raceignore	runtime\runtime.h	/^	int8	raceignore;	\/\/ ignore race detection events$/;"	m	struct:G
real	runtime\runtime.h	/^	float32	real;$/;"	m	struct:Complex64
real	runtime\runtime.h	/^	float64	real;$/;"	m	struct:Complex128
recovered	runtime\runtime.h	/^	bool	recovered;	\/\/ whether this panic is over$/;"	m	struct:Panic
rescheduling	runtime\runtime.h	/^	bool		rescheduling;$/;"	m	struct:Timers
restorestack	runtime\runtime.h	/^	uintptr	restorestack;	\/\/ adjust stack on return by (in bytes) (386 only)$/;"	m	struct:WinCallbackContext
ret	runtime\runtime.h	/^	uintptr	ret;$/;"	m	struct:Gobuf
runq	runtime\runtime.h	/^	G**	runq;$/;"	m	struct:P
runqhead	runtime\runtime.h	/^	int32	runqhead;$/;"	m	struct:P
runqsize	runtime\runtime.h	/^	int32	runqsize;$/;"	m	struct:P
runqtail	runtime\runtime.h	/^	int32	runqtail;$/;"	m	struct:P
sched	runtime\runtime.h	/^	Gobuf	sched;$/;"	m	struct:G
scheddetail	runtime\runtime.h	/^	int32	scheddetail;$/;"	m	struct:DebugVars
schedlink	runtime\runtime.h	/^	G*	schedlink;$/;"	m	struct:G
schedlink	runtime\runtime.h	/^	M*	schedlink;$/;"	m	struct:M
schedtick	runtime\runtime.h	/^	uint32	schedtick;	\/\/ incremented on every scheduler call$/;"	m	struct:P
schedtrace	runtime\runtime.h	/^	int32	schedtrace;$/;"	m	struct:DebugVars
seh	runtime\runtime.h	/^	SEH*	seh;$/;"	m	struct:M
selgen	runtime\runtime.h	/^	uint32	selgen;		\/\/ valid sudog pointer$/;"	m	struct:G
settype_buf	runtime\runtime.h	/^	uintptr	settype_buf[1024];$/;"	m	struct:M
settype_bufsize	runtime\runtime.h	/^	uintptr	settype_bufsize;$/;"	m	struct:M
short	runtime\runtime.h	39;"	d
sig	runtime\runtime.h	/^	int32	sig;$/;"	m	struct:G
sigcode0	runtime\runtime.h	/^	uintptr	sigcode0;$/;"	m	struct:G
sigcode1	runtime\runtime.h	/^	uintptr	sigcode1;$/;"	m	struct:G
signed	runtime\runtime.h	37;"	d
sigpc	runtime\runtime.h	/^	uintptr	sigpc;$/;"	m	struct:G
siz	runtime\runtime.h	/^	int32	siz;$/;"	m	struct:Defer
sleeping	runtime\runtime.h	/^	bool		sleeping;$/;"	m	struct:Timers
sp	runtime\runtime.h	/^	uintptr	sp;	\/\/ stack pointer at pc$/;"	m	struct:Stkframe
sp	runtime\runtime.h	/^	uintptr	sp;$/;"	m	struct:Gobuf
special	runtime\runtime.h	/^	bool	special;	\/\/ not part of defer frame$/;"	m	struct:Defer
spinning	runtime\runtime.h	/^	bool	spinning;$/;"	m	struct:M
stack0	runtime\runtime.h	/^	uintptr	stack0;$/;"	m	struct:G
stackbase	runtime\runtime.h	/^	uintptr	stackbase;	\/\/ cannot move - also known to libmach, runtime\/cgo$/;"	m	struct:G
stackbase	runtime\runtime.h	/^	uintptr	stackbase;	\/\/ g->stackbase in panic$/;"	m	struct:Panic
stackbase	runtime\runtime.h	/^	uintptr	stackbase;$/;"	m	struct:Stktop
stackcache	runtime\runtime.h	/^	void*	stackcache[StackCacheSize];$/;"	m	struct:M
stackcachecnt	runtime\runtime.h	/^	uint32	stackcachecnt;$/;"	m	struct:M
stackcachepos	runtime\runtime.h	/^	uint32	stackcachepos;$/;"	m	struct:M
stackguard	runtime\runtime.h	/^	uintptr	stackguard;	\/\/ same as stackguard0, but not set to StackPreempt$/;"	m	struct:G
stackguard	runtime\runtime.h	/^	uintptr	stackguard;$/;"	m	struct:Stktop
stackguard0	runtime\runtime.h	/^	uintptr	stackguard0;	\/\/ cannot move - also known to linker, libmach, runtime\/cgo$/;"	m	struct:G
stackinuse	runtime\runtime.h	/^	int32	stackinuse;$/;"	m	struct:M
stacksize	runtime\runtime.h	/^	uintptr	stacksize;$/;"	m	struct:G
startup_random_data	runtime\runtime.h	/^byte*	runtime·startup_random_data;$/;"	v
startup_random_data_len	runtime\runtime.h	/^uint32	runtime·startup_random_data_len;$/;"	v
status	runtime\runtime.h	/^	int16	status;$/;"	m	struct:G
status	runtime\runtime.h	/^	uint32	status;		\/\/ one of Pidle\/Prunning\/...$/;"	m	struct:P
str	runtime\runtime.h	/^	byte*	str;$/;"	m	struct:String
syscallguard	runtime\runtime.h	/^	uintptr	syscallguard;	\/\/ if status==Gsyscall, syscallguard = stackguard to use during gc$/;"	m	struct:G
syscallpc	runtime\runtime.h	/^	uintptr	syscallpc;	\/\/ if status==Gsyscall, syscallpc = sched.pc to use during gc$/;"	m	struct:G
syscallsp	runtime\runtime.h	/^	uintptr	syscallsp;	\/\/ if status==Gsyscall, syscallsp = sched.sp to use during gc$/;"	m	struct:G
syscallstack	runtime\runtime.h	/^	uintptr	syscallstack;	\/\/ if status==Gsyscall, syscallstack = stackbase to use during gc$/;"	m	struct:G
syscalltick	runtime\runtime.h	/^	uint32	syscalltick;	\/\/ incremented on every system call$/;"	m	struct:P
t	runtime\runtime.h	/^	Timer	**t;$/;"	m	struct:Timers
tab	runtime\runtime.h	/^	Itab*	tab;$/;"	m	struct:Iface
thr	runtime\runtime.h	/^	ParForThread *thr;		\/\/ array of thread descriptors$/;"	m	struct:ParFor
thread	runtime\runtime.h	/^	void*	thread;		\/\/ thread handle$/;"	m	struct:M
throwing	runtime\runtime.h	/^	int32	throwing;$/;"	m	struct:M
thrseq	runtime\runtime.h	/^	uint32 thrseq;			\/\/ thread id sequencer$/;"	m	struct:ParFor
timerproc	runtime\runtime.h	/^	G	*timerproc;$/;"	m	struct:Timers
tls	runtime\runtime.h	/^	uintptr	tls[4];		\/\/ thread-local storage (for x86 extern register)$/;"	m	struct:M
true	runtime\runtime.h	/^	true	= 1,$/;"	e	enum:__anon88
type	runtime\runtime.h	/^	Type*	type;$/;"	m	struct:Eface
type	runtime\runtime.h	/^	Type*	type;$/;"	m	struct:Itab
uint16	runtime\runtime.h	/^typedef	unsigned short		uint16;$/;"	t
uint32	runtime\runtime.h	/^typedef	unsigned int		uint32;$/;"	t
uint64	runtime\runtime.h	/^typedef	unsigned long long int	uint64;$/;"	t
uint8	runtime\runtime.h	/^typedef	unsigned char		uint8;$/;"	t
uintgo	runtime\runtime.h	/^typedef	uint32		uintgo; \/\/ Go's uint$/;"	t
uintgo	runtime\runtime.h	/^typedef	uint64		uintgo; \/\/ Go's uint$/;"	t
uintptr	runtime\runtime.h	/^typedef	uint32		uintptr;$/;"	t
uintptr	runtime\runtime.h	/^typedef	uint64		uintptr;$/;"	t
unsigned	runtime\runtime.h	36;"	d
unused	runtime\runtime.h	/^	int32	unused;$/;"	m	struct:Itab
varp	runtime\runtime.h	/^	byte*	varp;	\/\/ top of local variables$/;"	m	struct:Stkframe
wait	runtime\runtime.h	/^	bool wait;			\/\/ if true, wait while all threads finish processing,$/;"	m	struct:ParFor
waitlock	runtime\runtime.h	/^	void*	waitlock;$/;"	m	struct:M
waitnote	runtime\runtime.h	/^	Note	waitnote;$/;"	m	struct:Timers
waitreason	runtime\runtime.h	/^	int8*	waitreason;	\/\/ if status==Gwaiting$/;"	m	struct:G
waitsema	runtime\runtime.h	/^	uintptr	waitsema;	\/\/ semaphore for parking on locks$/;"	m	struct:M
waitsemacount	runtime\runtime.h	/^	uint32	waitsemacount;$/;"	m	struct:M
waitsemalock	runtime\runtime.h	/^	uint32	waitsemalock;$/;"	m	struct:M
waitunlockf	runtime\runtime.h	/^	void	(*waitunlockf)(Lock*);$/;"	m	struct:M
when	runtime\runtime.h	/^	int64	when;$/;"	m	struct:Timer
wincall	runtime\runtime.h	/^	WinCall	wincall;$/;"	m	struct:M
writebuf	runtime\runtime.h	/^	byte*	writebuf;$/;"	m	struct:G
writenbuf	runtime\runtime.h	/^	int32	writenbuf;$/;"	m	struct:G
dumpregs	runtime\signal_386.c	/^runtime·dumpregs(Siginfo *info, void *ctxt)$/;"	f
sighandler	runtime\signal_386.c	/^runtime·sighandler(int32 sig, Siginfo *info, void *ctxt, G *gp)$/;"	f
dumpregs	runtime\signal_amd64.c	/^runtime·dumpregs(Siginfo *info, void *ctxt)$/;"	f
sighandler	runtime\signal_amd64.c	/^runtime·sighandler(int32 sig, Siginfo *info, void *ctxt, G *gp)$/;"	f
dumpregs	runtime\signal_arm.c	/^runtime·dumpregs(Siginfo *info, void *ctxt)$/;"	f
sighandler	runtime\signal_arm.c	/^runtime·sighandler(int32 sig, Siginfo *info, void *ctxt, G *gp)$/;"	f
SIG_CODE0	runtime\signal_darwin_386.h	22;"	d
SIG_CODE1	runtime\signal_darwin_386.h	23;"	d
SIG_CS	runtime\signal_darwin_386.h	18;"	d
SIG_EAX	runtime\signal_darwin_386.h	7;"	d
SIG_EBP	runtime\signal_darwin_386.h	13;"	d
SIG_EBX	runtime\signal_darwin_386.h	8;"	d
SIG_ECX	runtime\signal_darwin_386.h	9;"	d
SIG_EDI	runtime\signal_darwin_386.h	11;"	d
SIG_EDX	runtime\signal_darwin_386.h	10;"	d
SIG_EFLAGS	runtime\signal_darwin_386.h	16;"	d
SIG_EIP	runtime\signal_darwin_386.h	15;"	d
SIG_ESI	runtime\signal_darwin_386.h	12;"	d
SIG_ESP	runtime\signal_darwin_386.h	14;"	d
SIG_FS	runtime\signal_darwin_386.h	19;"	d
SIG_GS	runtime\signal_darwin_386.h	20;"	d
SIG_REGS	runtime\signal_darwin_386.h	5;"	d
SIG_CODE0	runtime\signal_darwin_amd64.h	30;"	d
SIG_CODE1	runtime\signal_darwin_amd64.h	31;"	d
SIG_CS	runtime\signal_darwin_amd64.h	26;"	d
SIG_FS	runtime\signal_darwin_amd64.h	27;"	d
SIG_GS	runtime\signal_darwin_amd64.h	28;"	d
SIG_R10	runtime\signal_darwin_amd64.h	17;"	d
SIG_R11	runtime\signal_darwin_amd64.h	18;"	d
SIG_R12	runtime\signal_darwin_amd64.h	19;"	d
SIG_R13	runtime\signal_darwin_amd64.h	20;"	d
SIG_R14	runtime\signal_darwin_amd64.h	21;"	d
SIG_R15	runtime\signal_darwin_amd64.h	22;"	d
SIG_R8	runtime\signal_darwin_amd64.h	15;"	d
SIG_R9	runtime\signal_darwin_amd64.h	16;"	d
SIG_RAX	runtime\signal_darwin_amd64.h	7;"	d
SIG_RBP	runtime\signal_darwin_amd64.h	13;"	d
SIG_RBX	runtime\signal_darwin_amd64.h	8;"	d
SIG_RCX	runtime\signal_darwin_amd64.h	9;"	d
SIG_RDI	runtime\signal_darwin_amd64.h	11;"	d
SIG_RDX	runtime\signal_darwin_amd64.h	10;"	d
SIG_REGS	runtime\signal_darwin_amd64.h	5;"	d
SIG_RFLAGS	runtime\signal_darwin_amd64.h	24;"	d
SIG_RIP	runtime\signal_darwin_amd64.h	23;"	d
SIG_RSI	runtime\signal_darwin_amd64.h	12;"	d
SIG_RSP	runtime\signal_darwin_amd64.h	14;"	d
SIG_CODE0	runtime\signal_dragonfly_386.h	22;"	d
SIG_CODE1	runtime\signal_dragonfly_386.h	23;"	d
SIG_CS	runtime\signal_dragonfly_386.h	18;"	d
SIG_EAX	runtime\signal_dragonfly_386.h	7;"	d
SIG_EBP	runtime\signal_dragonfly_386.h	13;"	d
SIG_EBX	runtime\signal_dragonfly_386.h	8;"	d
SIG_ECX	runtime\signal_dragonfly_386.h	9;"	d
SIG_EDI	runtime\signal_dragonfly_386.h	11;"	d
SIG_EDX	runtime\signal_dragonfly_386.h	10;"	d
SIG_EFLAGS	runtime\signal_dragonfly_386.h	16;"	d
SIG_EIP	runtime\signal_dragonfly_386.h	15;"	d
SIG_ESI	runtime\signal_dragonfly_386.h	12;"	d
SIG_ESP	runtime\signal_dragonfly_386.h	14;"	d
SIG_FS	runtime\signal_dragonfly_386.h	19;"	d
SIG_GS	runtime\signal_dragonfly_386.h	20;"	d
SIG_REGS	runtime\signal_dragonfly_386.h	5;"	d
SIG_CODE0	runtime\signal_dragonfly_amd64.h	30;"	d
SIG_CODE1	runtime\signal_dragonfly_amd64.h	31;"	d
SIG_CS	runtime\signal_dragonfly_amd64.h	26;"	d
SIG_FS	runtime\signal_dragonfly_amd64.h	27;"	d
SIG_GS	runtime\signal_dragonfly_amd64.h	28;"	d
SIG_R10	runtime\signal_dragonfly_amd64.h	17;"	d
SIG_R11	runtime\signal_dragonfly_amd64.h	18;"	d
SIG_R12	runtime\signal_dragonfly_amd64.h	19;"	d
SIG_R13	runtime\signal_dragonfly_amd64.h	20;"	d
SIG_R14	runtime\signal_dragonfly_amd64.h	21;"	d
SIG_R15	runtime\signal_dragonfly_amd64.h	22;"	d
SIG_R8	runtime\signal_dragonfly_amd64.h	15;"	d
SIG_R9	runtime\signal_dragonfly_amd64.h	16;"	d
SIG_RAX	runtime\signal_dragonfly_amd64.h	7;"	d
SIG_RBP	runtime\signal_dragonfly_amd64.h	13;"	d
SIG_RBX	runtime\signal_dragonfly_amd64.h	8;"	d
SIG_RCX	runtime\signal_dragonfly_amd64.h	9;"	d
SIG_RDI	runtime\signal_dragonfly_amd64.h	11;"	d
SIG_RDX	runtime\signal_dragonfly_amd64.h	10;"	d
SIG_REGS	runtime\signal_dragonfly_amd64.h	5;"	d
SIG_RFLAGS	runtime\signal_dragonfly_amd64.h	24;"	d
SIG_RIP	runtime\signal_dragonfly_amd64.h	23;"	d
SIG_RSI	runtime\signal_dragonfly_amd64.h	12;"	d
SIG_RSP	runtime\signal_dragonfly_amd64.h	14;"	d
SIG_CODE0	runtime\signal_freebsd_386.h	22;"	d
SIG_CODE1	runtime\signal_freebsd_386.h	23;"	d
SIG_CS	runtime\signal_freebsd_386.h	18;"	d
SIG_EAX	runtime\signal_freebsd_386.h	7;"	d
SIG_EBP	runtime\signal_freebsd_386.h	13;"	d
SIG_EBX	runtime\signal_freebsd_386.h	8;"	d
SIG_ECX	runtime\signal_freebsd_386.h	9;"	d
SIG_EDI	runtime\signal_freebsd_386.h	11;"	d
SIG_EDX	runtime\signal_freebsd_386.h	10;"	d
SIG_EFLAGS	runtime\signal_freebsd_386.h	16;"	d
SIG_EIP	runtime\signal_freebsd_386.h	15;"	d
SIG_ESI	runtime\signal_freebsd_386.h	12;"	d
SIG_ESP	runtime\signal_freebsd_386.h	14;"	d
SIG_FS	runtime\signal_freebsd_386.h	19;"	d
SIG_GS	runtime\signal_freebsd_386.h	20;"	d
SIG_REGS	runtime\signal_freebsd_386.h	5;"	d
SIG_CODE0	runtime\signal_freebsd_amd64.h	30;"	d
SIG_CODE1	runtime\signal_freebsd_amd64.h	31;"	d
SIG_CS	runtime\signal_freebsd_amd64.h	26;"	d
SIG_FS	runtime\signal_freebsd_amd64.h	27;"	d
SIG_GS	runtime\signal_freebsd_amd64.h	28;"	d
SIG_R10	runtime\signal_freebsd_amd64.h	17;"	d
SIG_R11	runtime\signal_freebsd_amd64.h	18;"	d
SIG_R12	runtime\signal_freebsd_amd64.h	19;"	d
SIG_R13	runtime\signal_freebsd_amd64.h	20;"	d
SIG_R14	runtime\signal_freebsd_amd64.h	21;"	d
SIG_R15	runtime\signal_freebsd_amd64.h	22;"	d
SIG_R8	runtime\signal_freebsd_amd64.h	15;"	d
SIG_R9	runtime\signal_freebsd_amd64.h	16;"	d
SIG_RAX	runtime\signal_freebsd_amd64.h	7;"	d
SIG_RBP	runtime\signal_freebsd_amd64.h	13;"	d
SIG_RBX	runtime\signal_freebsd_amd64.h	8;"	d
SIG_RCX	runtime\signal_freebsd_amd64.h	9;"	d
SIG_RDI	runtime\signal_freebsd_amd64.h	11;"	d
SIG_RDX	runtime\signal_freebsd_amd64.h	10;"	d
SIG_REGS	runtime\signal_freebsd_amd64.h	5;"	d
SIG_RFLAGS	runtime\signal_freebsd_amd64.h	24;"	d
SIG_RIP	runtime\signal_freebsd_amd64.h	23;"	d
SIG_RSI	runtime\signal_freebsd_amd64.h	12;"	d
SIG_RSP	runtime\signal_freebsd_amd64.h	14;"	d
SIG_CODE0	runtime\signal_freebsd_arm.h	28;"	d
SIG_CPSR	runtime\signal_freebsd_arm.h	23;"	d
SIG_ERROR	runtime\signal_freebsd_arm.h	26;"	d
SIG_FAULT	runtime\signal_freebsd_arm.h	24;"	d
SIG_FP	runtime\signal_freebsd_arm.h	18;"	d
SIG_IP	runtime\signal_freebsd_arm.h	19;"	d
SIG_LR	runtime\signal_freebsd_arm.h	21;"	d
SIG_OLDMASK	runtime\signal_freebsd_arm.h	27;"	d
SIG_PC	runtime\signal_freebsd_arm.h	22;"	d
SIG_R0	runtime\signal_freebsd_arm.h	7;"	d
SIG_R1	runtime\signal_freebsd_arm.h	8;"	d
SIG_R10	runtime\signal_freebsd_arm.h	17;"	d
SIG_R2	runtime\signal_freebsd_arm.h	9;"	d
SIG_R3	runtime\signal_freebsd_arm.h	10;"	d
SIG_R4	runtime\signal_freebsd_arm.h	11;"	d
SIG_R5	runtime\signal_freebsd_arm.h	12;"	d
SIG_R6	runtime\signal_freebsd_arm.h	13;"	d
SIG_R7	runtime\signal_freebsd_arm.h	14;"	d
SIG_R8	runtime\signal_freebsd_arm.h	15;"	d
SIG_R9	runtime\signal_freebsd_arm.h	16;"	d
SIG_REGS	runtime\signal_freebsd_arm.h	5;"	d
SIG_SP	runtime\signal_freebsd_arm.h	20;"	d
SIG_TRAP	runtime\signal_freebsd_arm.h	25;"	d
SIG_CODE0	runtime\signal_linux_386.h	22;"	d
SIG_CODE1	runtime\signal_linux_386.h	23;"	d
SIG_CS	runtime\signal_linux_386.h	18;"	d
SIG_EAX	runtime\signal_linux_386.h	7;"	d
SIG_EBP	runtime\signal_linux_386.h	13;"	d
SIG_EBX	runtime\signal_linux_386.h	8;"	d
SIG_ECX	runtime\signal_linux_386.h	9;"	d
SIG_EDI	runtime\signal_linux_386.h	11;"	d
SIG_EDX	runtime\signal_linux_386.h	10;"	d
SIG_EFLAGS	runtime\signal_linux_386.h	16;"	d
SIG_EIP	runtime\signal_linux_386.h	15;"	d
SIG_ESI	runtime\signal_linux_386.h	12;"	d
SIG_ESP	runtime\signal_linux_386.h	14;"	d
SIG_FS	runtime\signal_linux_386.h	19;"	d
SIG_GS	runtime\signal_linux_386.h	20;"	d
SIG_REGS	runtime\signal_linux_386.h	5;"	d
SIG_CODE0	runtime\signal_linux_amd64.h	30;"	d
SIG_CODE1	runtime\signal_linux_amd64.h	31;"	d
SIG_CS	runtime\signal_linux_amd64.h	26;"	d
SIG_FS	runtime\signal_linux_amd64.h	27;"	d
SIG_GS	runtime\signal_linux_amd64.h	28;"	d
SIG_R10	runtime\signal_linux_amd64.h	17;"	d
SIG_R11	runtime\signal_linux_amd64.h	18;"	d
SIG_R12	runtime\signal_linux_amd64.h	19;"	d
SIG_R13	runtime\signal_linux_amd64.h	20;"	d
SIG_R14	runtime\signal_linux_amd64.h	21;"	d
SIG_R15	runtime\signal_linux_amd64.h	22;"	d
SIG_R8	runtime\signal_linux_amd64.h	15;"	d
SIG_R9	runtime\signal_linux_amd64.h	16;"	d
SIG_RAX	runtime\signal_linux_amd64.h	7;"	d
SIG_RBP	runtime\signal_linux_amd64.h	13;"	d
SIG_RBX	runtime\signal_linux_amd64.h	8;"	d
SIG_RCX	runtime\signal_linux_amd64.h	9;"	d
SIG_RDI	runtime\signal_linux_amd64.h	11;"	d
SIG_RDX	runtime\signal_linux_amd64.h	10;"	d
SIG_REGS	runtime\signal_linux_amd64.h	5;"	d
SIG_RFLAGS	runtime\signal_linux_amd64.h	24;"	d
SIG_RIP	runtime\signal_linux_amd64.h	23;"	d
SIG_RSI	runtime\signal_linux_amd64.h	12;"	d
SIG_RSP	runtime\signal_linux_amd64.h	14;"	d
SIG_CODE0	runtime\signal_linux_arm.h	28;"	d
SIG_CPSR	runtime\signal_linux_arm.h	23;"	d
SIG_ERROR	runtime\signal_linux_arm.h	26;"	d
SIG_FAULT	runtime\signal_linux_arm.h	24;"	d
SIG_FP	runtime\signal_linux_arm.h	18;"	d
SIG_IP	runtime\signal_linux_arm.h	19;"	d
SIG_LR	runtime\signal_linux_arm.h	21;"	d
SIG_OLDMASK	runtime\signal_linux_arm.h	27;"	d
SIG_PC	runtime\signal_linux_arm.h	22;"	d
SIG_R0	runtime\signal_linux_arm.h	7;"	d
SIG_R1	runtime\signal_linux_arm.h	8;"	d
SIG_R10	runtime\signal_linux_arm.h	17;"	d
SIG_R2	runtime\signal_linux_arm.h	9;"	d
SIG_R3	runtime\signal_linux_arm.h	10;"	d
SIG_R4	runtime\signal_linux_arm.h	11;"	d
SIG_R5	runtime\signal_linux_arm.h	12;"	d
SIG_R6	runtime\signal_linux_arm.h	13;"	d
SIG_R7	runtime\signal_linux_arm.h	14;"	d
SIG_R8	runtime\signal_linux_arm.h	15;"	d
SIG_R9	runtime\signal_linux_arm.h	16;"	d
SIG_REGS	runtime\signal_linux_arm.h	5;"	d
SIG_SP	runtime\signal_linux_arm.h	20;"	d
SIG_TRAP	runtime\signal_linux_arm.h	25;"	d
SIG_CODE0	runtime\signal_netbsd_386.h	22;"	d
SIG_CODE1	runtime\signal_netbsd_386.h	23;"	d
SIG_CS	runtime\signal_netbsd_386.h	18;"	d
SIG_EAX	runtime\signal_netbsd_386.h	7;"	d
SIG_EBP	runtime\signal_netbsd_386.h	13;"	d
SIG_EBX	runtime\signal_netbsd_386.h	8;"	d
SIG_ECX	runtime\signal_netbsd_386.h	9;"	d
SIG_EDI	runtime\signal_netbsd_386.h	11;"	d
SIG_EDX	runtime\signal_netbsd_386.h	10;"	d
SIG_EFLAGS	runtime\signal_netbsd_386.h	16;"	d
SIG_EIP	runtime\signal_netbsd_386.h	15;"	d
SIG_ESI	runtime\signal_netbsd_386.h	12;"	d
SIG_ESP	runtime\signal_netbsd_386.h	14;"	d
SIG_FS	runtime\signal_netbsd_386.h	19;"	d
SIG_GS	runtime\signal_netbsd_386.h	20;"	d
SIG_REGS	runtime\signal_netbsd_386.h	5;"	d
SIG_CODE0	runtime\signal_netbsd_amd64.h	30;"	d
SIG_CODE1	runtime\signal_netbsd_amd64.h	31;"	d
SIG_CS	runtime\signal_netbsd_amd64.h	26;"	d
SIG_FS	runtime\signal_netbsd_amd64.h	27;"	d
SIG_GS	runtime\signal_netbsd_amd64.h	28;"	d
SIG_R10	runtime\signal_netbsd_amd64.h	17;"	d
SIG_R11	runtime\signal_netbsd_amd64.h	18;"	d
SIG_R12	runtime\signal_netbsd_amd64.h	19;"	d
SIG_R13	runtime\signal_netbsd_amd64.h	20;"	d
SIG_R14	runtime\signal_netbsd_amd64.h	21;"	d
SIG_R15	runtime\signal_netbsd_amd64.h	22;"	d
SIG_R8	runtime\signal_netbsd_amd64.h	15;"	d
SIG_R9	runtime\signal_netbsd_amd64.h	16;"	d
SIG_RAX	runtime\signal_netbsd_amd64.h	7;"	d
SIG_RBP	runtime\signal_netbsd_amd64.h	13;"	d
SIG_RBX	runtime\signal_netbsd_amd64.h	8;"	d
SIG_RCX	runtime\signal_netbsd_amd64.h	9;"	d
SIG_RDI	runtime\signal_netbsd_amd64.h	11;"	d
SIG_RDX	runtime\signal_netbsd_amd64.h	10;"	d
SIG_REGS	runtime\signal_netbsd_amd64.h	5;"	d
SIG_RFLAGS	runtime\signal_netbsd_amd64.h	24;"	d
SIG_RIP	runtime\signal_netbsd_amd64.h	23;"	d
SIG_RSI	runtime\signal_netbsd_amd64.h	12;"	d
SIG_RSP	runtime\signal_netbsd_amd64.h	14;"	d
SIG_CODE0	runtime\signal_netbsd_arm.h	29;"	d
SIG_CODE1	runtime\signal_netbsd_arm.h	30;"	d
SIG_CPSR	runtime\signal_netbsd_arm.h	23;"	d
SIG_ERROR	runtime\signal_netbsd_arm.h	26;"	d
SIG_FAULT	runtime\signal_netbsd_arm.h	24;"	d
SIG_FP	runtime\signal_netbsd_arm.h	18;"	d
SIG_IP	runtime\signal_netbsd_arm.h	19;"	d
SIG_LR	runtime\signal_netbsd_arm.h	21;"	d
SIG_OLDMASK	runtime\signal_netbsd_arm.h	27;"	d
SIG_PC	runtime\signal_netbsd_arm.h	22;"	d
SIG_R0	runtime\signal_netbsd_arm.h	7;"	d
SIG_R1	runtime\signal_netbsd_arm.h	8;"	d
SIG_R10	runtime\signal_netbsd_arm.h	17;"	d
SIG_R2	runtime\signal_netbsd_arm.h	9;"	d
SIG_R3	runtime\signal_netbsd_arm.h	10;"	d
SIG_R4	runtime\signal_netbsd_arm.h	11;"	d
SIG_R5	runtime\signal_netbsd_arm.h	12;"	d
SIG_R6	runtime\signal_netbsd_arm.h	13;"	d
SIG_R7	runtime\signal_netbsd_arm.h	14;"	d
SIG_R8	runtime\signal_netbsd_arm.h	15;"	d
SIG_R9	runtime\signal_netbsd_arm.h	16;"	d
SIG_REGS	runtime\signal_netbsd_arm.h	5;"	d
SIG_SP	runtime\signal_netbsd_arm.h	20;"	d
SIG_TRAP	runtime\signal_netbsd_arm.h	25;"	d
SIG_CODE0	runtime\signal_openbsd_386.h	22;"	d
SIG_CODE1	runtime\signal_openbsd_386.h	23;"	d
SIG_CS	runtime\signal_openbsd_386.h	18;"	d
SIG_EAX	runtime\signal_openbsd_386.h	7;"	d
SIG_EBP	runtime\signal_openbsd_386.h	13;"	d
SIG_EBX	runtime\signal_openbsd_386.h	8;"	d
SIG_ECX	runtime\signal_openbsd_386.h	9;"	d
SIG_EDI	runtime\signal_openbsd_386.h	11;"	d
SIG_EDX	runtime\signal_openbsd_386.h	10;"	d
SIG_EFLAGS	runtime\signal_openbsd_386.h	16;"	d
SIG_EIP	runtime\signal_openbsd_386.h	15;"	d
SIG_ESI	runtime\signal_openbsd_386.h	12;"	d
SIG_ESP	runtime\signal_openbsd_386.h	14;"	d
SIG_FS	runtime\signal_openbsd_386.h	19;"	d
SIG_GS	runtime\signal_openbsd_386.h	20;"	d
SIG_REGS	runtime\signal_openbsd_386.h	5;"	d
SIG_CODE0	runtime\signal_openbsd_amd64.h	30;"	d
SIG_CODE1	runtime\signal_openbsd_amd64.h	31;"	d
SIG_CS	runtime\signal_openbsd_amd64.h	26;"	d
SIG_FS	runtime\signal_openbsd_amd64.h	27;"	d
SIG_GS	runtime\signal_openbsd_amd64.h	28;"	d
SIG_R10	runtime\signal_openbsd_amd64.h	17;"	d
SIG_R11	runtime\signal_openbsd_amd64.h	18;"	d
SIG_R12	runtime\signal_openbsd_amd64.h	19;"	d
SIG_R13	runtime\signal_openbsd_amd64.h	20;"	d
SIG_R14	runtime\signal_openbsd_amd64.h	21;"	d
SIG_R15	runtime\signal_openbsd_amd64.h	22;"	d
SIG_R8	runtime\signal_openbsd_amd64.h	15;"	d
SIG_R9	runtime\signal_openbsd_amd64.h	16;"	d
SIG_RAX	runtime\signal_openbsd_amd64.h	7;"	d
SIG_RBP	runtime\signal_openbsd_amd64.h	13;"	d
SIG_RBX	runtime\signal_openbsd_amd64.h	8;"	d
SIG_RCX	runtime\signal_openbsd_amd64.h	9;"	d
SIG_RDI	runtime\signal_openbsd_amd64.h	11;"	d
SIG_RDX	runtime\signal_openbsd_amd64.h	10;"	d
SIG_REGS	runtime\signal_openbsd_amd64.h	5;"	d
SIG_RFLAGS	runtime\signal_openbsd_amd64.h	24;"	d
SIG_RIP	runtime\signal_openbsd_amd64.h	23;"	d
SIG_RSI	runtime\signal_openbsd_amd64.h	12;"	d
SIG_RSP	runtime\signal_openbsd_amd64.h	14;"	d
crash	runtime\signal_unix.c	/^runtime·crash(void)$/;"	f
initsig	runtime\signal_unix.c	/^runtime·initsig(void)$/;"	f
resetcpuprofiler	runtime\signal_unix.c	/^runtime·resetcpuprofiler(int32 hz)$/;"	f
sigdisable	runtime\signal_unix.c	/^runtime·sigdisable(uint32 sig)$/;"	f
sigenable	runtime\signal_unix.c	/^runtime·sigenable(uint32 sig)$/;"	f
sigpipe	runtime\signal_unix.c	/^os·sigpipe(void)$/;"	f
GoSighandler	runtime\signal_unix.h	/^typedef void GoSighandler(int32, Siginfo*, void*, G*);$/;"	t
SIG_DFL	runtime\signal_unix.h	5;"	d
SIG_IGN	runtime\signal_unix.h	6;"	d
D	runtime\signals_darwin.h	50;"	d
D	runtime\signals_darwin.h	9;"	d
K	runtime\signals_darwin.h	47;"	d
K	runtime\signals_darwin.h	6;"	d
N	runtime\signals_darwin.h	46;"	d
N	runtime\signals_darwin.h	5;"	d
P	runtime\signals_darwin.h	49;"	d
P	runtime\signals_darwin.h	8;"	d
T	runtime\signals_darwin.h	48;"	d
T	runtime\signals_darwin.h	7;"	d
sigtab	runtime\signals_darwin.h	/^SigTab runtime·sigtab[] = {$/;"	v
D	runtime\signals_dragonfly.h	51;"	d
D	runtime\signals_dragonfly.h	9;"	d
K	runtime\signals_dragonfly.h	48;"	d
K	runtime\signals_dragonfly.h	6;"	d
N	runtime\signals_dragonfly.h	47;"	d
N	runtime\signals_dragonfly.h	5;"	d
P	runtime\signals_dragonfly.h	50;"	d
P	runtime\signals_dragonfly.h	8;"	d
T	runtime\signals_dragonfly.h	49;"	d
T	runtime\signals_dragonfly.h	7;"	d
sigtab	runtime\signals_dragonfly.h	/^SigTab runtime·sigtab[] = {$/;"	v
D	runtime\signals_freebsd.h	51;"	d
D	runtime\signals_freebsd.h	9;"	d
K	runtime\signals_freebsd.h	48;"	d
K	runtime\signals_freebsd.h	6;"	d
N	runtime\signals_freebsd.h	47;"	d
N	runtime\signals_freebsd.h	5;"	d
P	runtime\signals_freebsd.h	50;"	d
P	runtime\signals_freebsd.h	8;"	d
T	runtime\signals_freebsd.h	49;"	d
T	runtime\signals_freebsd.h	7;"	d
sigtab	runtime\signals_freebsd.h	/^SigTab runtime·sigtab[] = {$/;"	v
D	runtime\signals_linux.h	83;"	d
D	runtime\signals_linux.h	9;"	d
K	runtime\signals_linux.h	6;"	d
K	runtime\signals_linux.h	80;"	d
N	runtime\signals_linux.h	5;"	d
N	runtime\signals_linux.h	79;"	d
P	runtime\signals_linux.h	82;"	d
P	runtime\signals_linux.h	8;"	d
T	runtime\signals_linux.h	7;"	d
T	runtime\signals_linux.h	81;"	d
sigtab	runtime\signals_linux.h	/^SigTab runtime·sigtab[] = {$/;"	v
D	runtime\signals_netbsd.h	51;"	d
D	runtime\signals_netbsd.h	9;"	d
K	runtime\signals_netbsd.h	48;"	d
K	runtime\signals_netbsd.h	6;"	d
N	runtime\signals_netbsd.h	47;"	d
N	runtime\signals_netbsd.h	5;"	d
P	runtime\signals_netbsd.h	50;"	d
P	runtime\signals_netbsd.h	8;"	d
T	runtime\signals_netbsd.h	49;"	d
T	runtime\signals_netbsd.h	7;"	d
sigtab	runtime\signals_netbsd.h	/^SigTab runtime·sigtab[] = {$/;"	v
D	runtime\signals_openbsd.h	51;"	d
D	runtime\signals_openbsd.h	9;"	d
K	runtime\signals_openbsd.h	48;"	d
K	runtime\signals_openbsd.h	6;"	d
N	runtime\signals_openbsd.h	47;"	d
N	runtime\signals_openbsd.h	5;"	d
P	runtime\signals_openbsd.h	50;"	d
P	runtime\signals_openbsd.h	8;"	d
T	runtime\signals_openbsd.h	49;"	d
T	runtime\signals_openbsd.h	7;"	d
sigtab	runtime\signals_openbsd.h	/^SigTab runtime·sigtab[] = {$/;"	v
N	runtime\signals_plan9.h	26;"	d
N	runtime\signals_plan9.h	5;"	d
P	runtime\signals_plan9.h	28;"	d
P	runtime\signals_plan9.h	7;"	d
T	runtime\signals_plan9.h	27;"	d
T	runtime\signals_plan9.h	6;"	d
sigtab	runtime\signals_plan9.h	/^SigTab runtime·sigtab[] = {$/;"	v
copy	runtime\slice.c	/^runtime·copy(Slice to, Slice fm, uintptr width, intgo ret)$/;"	f
debug	runtime\slice.c	/^	debug = 0$/;"	e	enum:__anon99	file:
growslice	runtime\slice.c	/^runtime·growslice(SliceType *t, Slice old, int64 n, Slice ret)$/;"	f
growslice1	runtime\slice.c	/^growslice1(SliceType *t, Slice x, intgo newcap, Slice *ret)$/;"	f	file:
makeslice	runtime\slice.c	/^runtime·makeslice(SliceType *t, int64 len, int64 cap, Slice ret)$/;"	f
makeslice1	runtime\slice.c	/^makeslice1(SliceType *t, intgo len, intgo cap, Slice *ret)$/;"	f	file:
printslice	runtime\slice.c	/^runtime·printslice(Slice a)$/;"	f
slicestringcopy	runtime\slice.c	/^runtime·slicestringcopy(Slice to, String fm, intgo ret)$/;"	f
zerobase	runtime\slice.c	/^uintptr runtime·zerobase;$/;"	v
CPSR	runtime\softfloat_arm.c	12;"	d	file:
FLAGS_C	runtime\softfloat_arm.c	15;"	d	file:
FLAGS_N	runtime\softfloat_arm.c	13;"	d	file:
FLAGS_V	runtime\softfloat_arm.c	16;"	d	file:
FLAGS_Z	runtime\softfloat_arm.c	14;"	d	file:
Sfregs	runtime\softfloat_arm.c	/^struct Sfregs$/;"	s	file:
Sfregs	runtime\softfloat_arm.c	/^typedef struct Sfregs Sfregs;$/;"	t	typeref:struct:Sfregs	file:
_sfloat2	runtime\softfloat_arm.c	/^runtime·_sfloat2(uint32 *lr, Sfregs regs)$/;"	f
conditions	runtime\softfloat_arm.c	/^static const uint8 conditions[10\/2] = {$/;"	v	file:
cspr	runtime\softfloat_arm.c	/^	uint32 cspr;$/;"	m	struct:Sfregs	file:
d2f	runtime\softfloat_arm.c	/^d2f(uint64 d)$/;"	f	file:
f2d	runtime\softfloat_arm.c	/^f2d(uint32 f)$/;"	f	file:
fabort	runtime\softfloat_arm.c	/^fabort(void)$/;"	f	file:
fprint	runtime\softfloat_arm.c	/^fprint(void)$/;"	f	file:
fstatus	runtime\softfloat_arm.c	/^fstatus(bool nan, int32 cmp)$/;"	f	file:
getd	runtime\softfloat_arm.c	/^getd(uint32 reg)$/;"	f	file:
putd	runtime\softfloat_arm.c	/^putd(uint32 reg, uint64 val)$/;"	f	file:
putf	runtime\softfloat_arm.c	/^putf(uint32 reg, uint32 val)$/;"	f	file:
r0	runtime\softfloat_arm.c	/^	uint32 *r0;$/;"	m	struct:Sfregs	file:
r1	runtime\softfloat_arm.c	/^	uint32 *r1;$/;"	m	struct:Sfregs	file:
r10	runtime\softfloat_arm.c	/^	uint32 *r10;$/;"	m	struct:Sfregs	file:
r11	runtime\softfloat_arm.c	/^	uint32 *r11;$/;"	m	struct:Sfregs	file:
r12	runtime\softfloat_arm.c	/^	uint32 *r12;$/;"	m	struct:Sfregs	file:
r13	runtime\softfloat_arm.c	/^	uint32 *r13;$/;"	m	struct:Sfregs	file:
r2	runtime\softfloat_arm.c	/^	uint32 *r2;$/;"	m	struct:Sfregs	file:
r3	runtime\softfloat_arm.c	/^	uint32 *r3;$/;"	m	struct:Sfregs	file:
r4	runtime\softfloat_arm.c	/^	uint32 *r4;$/;"	m	struct:Sfregs	file:
r5	runtime\softfloat_arm.c	/^	uint32 *r5;$/;"	m	struct:Sfregs	file:
r6	runtime\softfloat_arm.c	/^	uint32 *r6;$/;"	m	struct:Sfregs	file:
r7	runtime\softfloat_arm.c	/^	uint32 *r7;$/;"	m	struct:Sfregs	file:
r8	runtime\softfloat_arm.c	/^	uint32 *r8;$/;"	m	struct:Sfregs	file:
r9	runtime\softfloat_arm.c	/^	uint32 *r9;$/;"	m	struct:Sfregs	file:
stepflt	runtime\softfloat_arm.c	/^stepflt(uint32 *pc, uint32 *regs)$/;"	f	file:
trace	runtime\softfloat_arm.c	/^static	uint32	trace = 0;$/;"	v	file:
StackCacheNode	runtime\stack.c	/^struct StackCacheNode$/;"	s	file:
StackCacheNode	runtime\stack.c	/^typedef struct StackCacheNode StackCacheNode;$/;"	t	typeref:struct:StackCacheNode	file:
StackDebug	runtime\stack.c	/^	StackDebug = 0,$/;"	e	enum:__anon100	file:
batch	runtime\stack.c	/^	void*	batch[StackCacheBatch-1];$/;"	m	struct:StackCacheNode	file:
gostartcallfn	runtime\stack.c	/^runtime·gostartcallfn(Gobuf *gobuf, FuncVal *fv)$/;"	f
maxstacksize	runtime\stack.c	/^uintptr runtime·maxstacksize = 1<<20; \/\/ enough until runtime.main sets it for real$/;"	v
newstack	runtime\stack.c	/^runtime·newstack(void)$/;"	f
next	runtime\stack.c	/^	StackCacheNode *next;$/;"	m	struct:StackCacheNode	file:
oldstack	runtime\stack.c	/^runtime·oldstack(void)$/;"	f
setMaxStack	runtime\stack.c	/^runtime∕debug·setMaxStack(intgo in, intgo out)$/;"	f
stackalloc	runtime\stack.c	/^runtime·stackalloc(uint32 n)$/;"	f
stackcache	runtime\stack.c	/^static StackCacheNode *stackcache;$/;"	v	file:
stackcachemu	runtime\stack.c	/^static Lock stackcachemu;$/;"	v	file:
stackcacherefill	runtime\stack.c	/^stackcacherefill(void)$/;"	f	file:
stackcacherelease	runtime\stack.c	/^stackcacherelease(void)$/;"	f	file:
stackfree	runtime\stack.c	/^runtime·stackfree(void *v, uintptr n)$/;"	f
FixedStack	runtime\stack.h	/^	FixedStack = StackMin + StackSystem,$/;"	e	enum:__anon101
StackBig	runtime\stack.h	/^	StackBig = 4096,$/;"	e	enum:__anon101
StackExtra	runtime\stack.h	/^	StackExtra = 2048,$/;"	e	enum:__anon101
StackGuard	runtime\stack.h	/^	StackGuard = 256 + StackSystem,$/;"	e	enum:__anon101
StackLimit	runtime\stack.h	/^	StackLimit = StackGuard - StackSystem - StackSmall,$/;"	e	enum:__anon101
StackMin	runtime\stack.h	/^	StackMin = 8192,$/;"	e	enum:__anon101
StackPreempt	runtime\stack.h	112;"	d
StackSmall	runtime\stack.h	/^	StackSmall = 128,$/;"	e	enum:__anon101
StackSystem	runtime\stack.h	/^	StackSystem = 512 * sizeof(uintptr),$/;"	e	enum:__anon101
StackTop	runtime\stack.h	/^	StackTop = 96,$/;"	e	enum:__anon101
Ftab	runtime\symtab.c	/^struct Ftab$/;"	s	file:
Ftab	runtime\symtab.c	/^typedef struct Ftab Ftab;$/;"	t	typeref:struct:Ftab	file:
contains	runtime\symtab.c	/^contains(String s, int8 *p)$/;"	f	file:
end	runtime\symtab.c	/^static String end = { (uint8*)"end", 3 };$/;"	v	file:
entry	runtime\symtab.c	/^	uintptr	entry;$/;"	m	struct:Ftab	file:
filetab	runtime\symtab.c	/^static uint32 *filetab;$/;"	v	file:
findfunc	runtime\symtab.c	/^runtime·findfunc(uintptr addr)$/;"	f
ftab	runtime\symtab.c	/^static Ftab *ftab;$/;"	v	file:
funcarglen	runtime\symtab.c	/^runtime·funcarglen(Func *f, uintptr targetpc)$/;"	f
funcdata	runtime\symtab.c	/^runtime·funcdata(Func *f, int32 i)$/;"	f
funcentry_go	runtime\symtab.c	/^runtime·funcentry_go(Func *f, uintptr ret)$/;"	f
funcline	runtime\symtab.c	/^funcline(Func *f, uintptr targetpc, String *file, bool strict)$/;"	f	file:
funcline	runtime\symtab.c	/^runtime·funcline(Func *f, uintptr targetpc, String *file)$/;"	f
funcline_go	runtime\symtab.c	/^runtime·funcline_go(Func *f, uintptr targetpc, String retfile, intgo retline)$/;"	f
funcname	runtime\symtab.c	/^runtime·funcname(Func *f)$/;"	f
funcname_go	runtime\symtab.c	/^runtime·funcname_go(Func *f, String ret)$/;"	f
funcoff	runtime\symtab.c	/^	uintptr	funcoff;$/;"	m	struct:Ftab	file:
funcspdelta	runtime\symtab.c	/^runtime·funcspdelta(Func *f, uintptr targetpc)$/;"	f
hasprefix	runtime\symtab.c	/^hasprefix(String s, int8 *p)$/;"	f	file:
nfiletab	runtime\symtab.c	/^static uint32 nfiletab;$/;"	v	file:
nftab	runtime\symtab.c	/^static uintptr nftab;$/;"	v	file:
pcdatavalue	runtime\symtab.c	/^runtime·pcdatavalue(Func *f, int32 table, uintptr targetpc)$/;"	f
pcvalue	runtime\symtab.c	/^pcvalue(Func *f, int32 off, uintptr targetpc, bool strict)$/;"	f	file:
readvarint	runtime\symtab.c	/^readvarint(byte **pp)$/;"	f	file:
showframe	runtime\symtab.c	/^runtime·showframe(Func *f, G *gp)$/;"	f
step	runtime\symtab.c	/^step(byte **pp, uintptr *pc, int32 *value, bool first)$/;"	f	file:
symtabinit	runtime\symtab.c	/^runtime·symtabinit(void)$/;"	f
unknown	runtime\symtab.c	/^static String unknown = { (uint8*)"?", 1 };$/;"	v	file:
gostartcall	runtime\sys_arm.c	/^runtime·gostartcall(Gobuf *gobuf, void (*fn)(void), void *ctxt)$/;"	f
rewindmorestack	runtime\sys_arm.c	/^runtime·rewindmorestack(Gobuf *gobuf)$/;"	f
POPL	runtime\sys_darwin_386.s	/^	POPL	DX$/;"	d
PUSHL	runtime\sys_darwin_386.s	/^	PUSHL	DI	\/\/ tls #$/;"	d
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·bsdthread_create(SB),NOSPLIT,$32$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·bsdthread_register(SB),NOSPLIT,$40$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·bsdthread_start(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·close(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$32$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·exit(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·exit1(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·kevent(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·mach_msg_trap(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·mach_reply_port(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·mach_semaphore_signal(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·mach_semaphore_signal_all(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·mach_semaphore_timedwait(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·mach_semaphore_wait(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·mach_task_self(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·madvise(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·mmap(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·munmap(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·nanotime(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·now(SB),NOSPLIT,$40$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·open(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·raise(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·read(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·setitimer(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·setldt(SB),NOSPLIT,$32$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$40$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·sysenter(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·usleep(SB),NOSPLIT,$32$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT runtime·write(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_386.s	/^TEXT time·now(SB),NOSPLIT,$0$/;"	l
cpu_capabilities	runtime\sys_darwin_386.s	/^#define	cpu_capabilities	0x20$/;"	d
gtod_generation	runtime\sys_darwin_386.s	/^#define	gtod_generation	0x6c$/;"	d
gtod_ns_base	runtime\sys_darwin_386.s	/^#define	gtod_ns_base	0x70$/;"	d
gtod_sec_base	runtime\sys_darwin_386.s	/^#define	gtod_sec_base	0x78$/;"	d
nt_generation	runtime\sys_darwin_386.s	/^#define	nt_generation	0x68$/;"	d
nt_ns_base	runtime\sys_darwin_386.s	/^#define	nt_ns_base	0x60$/;"	d
nt_scale	runtime\sys_darwin_386.s	/^#define	nt_scale	0x58$/;"	d
nt_shift	runtime\sys_darwin_386.s	/^#define	nt_shift	0x5c$/;"	d
nt_tsc_base	runtime\sys_darwin_386.s	/^#define	nt_tsc_base	0x50$/;"	d
sigtramp_ret	runtime\sys_darwin_386.s	/^sigtramp_ret:$/;"	l
systime	runtime\sys_darwin_386.s	/^systime:$/;"	l
timeloop	runtime\sys_darwin_386.s	/^timeloop:$/;"	l
CALL	runtime\sys_darwin_amd64.s	/^	CALL	DI$/;"	d
CALL	runtime\sys_darwin_amd64.s	/^	CALL	DX	\/\/ fn$/;"	d
POPQ	runtime\sys_darwin_amd64.s	/^	POPQ	DX$/;"	d
PUSHQ	runtime\sys_darwin_amd64.s	/^	PUSHQ	DX$/;"	d
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·bsdthread_create(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·bsdthread_register(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·bsdthread_start(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·close(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·exit(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·exit1(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·kevent(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·mach_msg_trap(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·mach_reply_port(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·mach_semaphore_signal(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·mach_semaphore_signal_all(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·mach_semaphore_timedwait(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·mach_semaphore_wait(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·mach_task_self(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·mach_thread_self(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·madvise(SB), NOSPLIT, $0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·mmap(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·munmap(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·nanotime(SB), NOSPLIT, $32$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·open(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·raise(SB),NOSPLIT,$24$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·read(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·setitimer(SB), NOSPLIT, $0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·settls(SB),NOSPLIT,$32$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$64$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·usleep(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT runtime·write(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_darwin_amd64.s	/^TEXT time·now(SB),NOSPLIT,$0$/;"	l
gtod_generation	runtime\sys_darwin_amd64.s	/^#define	gtod_generation	0x6c$/;"	d
gtod_ns_base	runtime\sys_darwin_amd64.s	/^#define	gtod_ns_base	0x70$/;"	d
gtod_sec_base	runtime\sys_darwin_amd64.s	/^#define	gtod_sec_base	0x78$/;"	d
nt_generation	runtime\sys_darwin_amd64.s	/^#define	nt_generation	0x68$/;"	d
nt_ns_base	runtime\sys_darwin_amd64.s	/^#define	nt_ns_base	0x60$/;"	d
nt_scale	runtime\sys_darwin_amd64.s	/^#define	nt_scale	0x58$/;"	d
nt_shift	runtime\sys_darwin_amd64.s	/^#define	nt_shift	0x5c$/;"	d
nt_tsc_base	runtime\sys_darwin_amd64.s	/^#define	nt_tsc_base	0x50$/;"	d
sigtramp_ret	runtime\sys_darwin_amd64.s	/^sigtramp_ret:$/;"	l
systime	runtime\sys_darwin_amd64.s	/^systime:$/;"	l
timeloop	runtime\sys_darwin_amd64.s	/^timeloop:$/;"	l
GLOBL	runtime\sys_dragonfly_386.s	/^GLOBL runtime·tlsoffset(SB),$4$/;"	l
MULL	runtime\sys_dragonfly_386.s	/^	MULL	DX$/;"	d
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·close(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$32$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·exit(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·exit1(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·getrlimit(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·kevent(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·lwp_create(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·lwp_start(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·madvise(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·mmap(SB),NOSPLIT,$36$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·munmap(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·nanotime(SB), NOSPLIT, $32$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·open(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·osyield(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·raise(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·read(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·setitimer(SB), NOSPLIT, $-4$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·setldt(SB),NOSPLIT,$4$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·settls(SB),NOSPLIT,$24$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$44$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·sys_umtx_sleep(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·sys_umtx_wakeup(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$28$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·usleep(SB),NOSPLIT,$20$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT runtime·write(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_dragonfly_386.s	/^TEXT time·now(SB), NOSPLIT, $32$/;"	l
sigtramp_ret	runtime\sys_dragonfly_386.s	/^sigtramp_ret:$/;"	l
MULL	runtime\sys_dragonfly_amd64.s	/^	MULL	DX$/;"	d
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·close(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·exit(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·exit1(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·getrlimit(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·kevent(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·lwp_create(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·lwp_start(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·madvise(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·mmap(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·munmap(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·nanotime(SB), NOSPLIT, $32$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·open(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·osyield(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·raise(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·read(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·setitimer(SB), NOSPLIT, $-8$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·settls(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$64$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·sys_umtx_sleep(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·sys_umtx_wakeup(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·usleep(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT runtime·write(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_dragonfly_amd64.s	/^TEXT time·now(SB), NOSPLIT, $32$/;"	l
GLOBL	runtime\sys_freebsd_386.s	/^GLOBL runtime·tlsoffset(SB),$4$/;"	l
MULL	runtime\sys_freebsd_386.s	/^	MULL	DX$/;"	d
PUSHL	runtime\sys_freebsd_386.s	/^	PUSHL	DI$/;"	d
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·close(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$32$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·exit(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·exit1(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·getrlimit(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·i386_set_ldt(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·kevent(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·madvise(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·mmap(SB),NOSPLIT,$32$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·munmap(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·nanotime(SB), NOSPLIT, $32$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·open(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·osyield(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·raise(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·read(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·setitimer(SB), NOSPLIT, $-4$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·setldt(SB),NOSPLIT,$32$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$44$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·sys_umtx_op(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$28$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·thr_new(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·thr_start(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·usleep(SB),NOSPLIT,$20$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT runtime·write(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_freebsd_386.s	/^TEXT time·now(SB), NOSPLIT, $32$/;"	l
sigtramp_ret	runtime\sys_freebsd_386.s	/^sigtramp_ret:$/;"	l
MULL	runtime\sys_freebsd_amd64.s	/^	MULL	DX$/;"	d
SYSCALL	runtime\sys_freebsd_amd64.s	/^#define SYSCALL MOVQ R10, CX; INT $0x80$/;"	d
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·close(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·exit(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·exit1(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·getrlimit(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·kevent(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·madvise(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·mmap(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·munmap(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·nanotime(SB), NOSPLIT, $32$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·open(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·osyield(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·raise(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·read(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·setitimer(SB), NOSPLIT, $-8$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·settls(SB),NOSPLIT,$8$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$64$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·sys_umtx_op(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·thr_new(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·thr_start(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·usleep(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT runtime·write(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_freebsd_amd64.s	/^TEXT time·now(SB), NOSPLIT, $32$/;"	l
SYS_BASE	runtime\sys_freebsd_arm.s	/^#define SYS_BASE 0x0$/;"	d
SYS___sysctl	runtime\sys_freebsd_arm.s	/^#define SYS___sysctl (SYS_BASE + 202)$/;"	d
SYS__umtx_op	runtime\sys_freebsd_arm.s	/^#define SYS__umtx_op (SYS_BASE + 454)$/;"	d
SYS_clock_gettime	runtime\sys_freebsd_arm.s	/^#define SYS_clock_gettime (SYS_BASE + 232)$/;"	d
SYS_close	runtime\sys_freebsd_arm.s	/^#define SYS_close (SYS_BASE + 6)$/;"	d
SYS_exit	runtime\sys_freebsd_arm.s	/^#define SYS_exit (SYS_BASE + 1)$/;"	d
SYS_fcntl	runtime\sys_freebsd_arm.s	/^#define SYS_fcntl (SYS_BASE + 92)$/;"	d
SYS_getrlimit	runtime\sys_freebsd_arm.s	/^#define SYS_getrlimit (SYS_BASE + 194)$/;"	d
SYS_kevent	runtime\sys_freebsd_arm.s	/^#define SYS_kevent (SYS_BASE + 363)$/;"	d
SYS_kqueue	runtime\sys_freebsd_arm.s	/^#define SYS_kqueue (SYS_BASE + 362)$/;"	d
SYS_madvise	runtime\sys_freebsd_arm.s	/^#define SYS_madvise (SYS_BASE + 75)$/;"	d
SYS_mmap	runtime\sys_freebsd_arm.s	/^#define SYS_mmap (SYS_BASE + 477) $/;"	d
SYS_munmap	runtime\sys_freebsd_arm.s	/^#define SYS_munmap (SYS_BASE + 73)$/;"	d
SYS_nanosleep	runtime\sys_freebsd_arm.s	/^#define SYS_nanosleep (SYS_BASE + 240)$/;"	d
SYS_open	runtime\sys_freebsd_arm.s	/^#define SYS_open (SYS_BASE + 5)$/;"	d
SYS_read	runtime\sys_freebsd_arm.s	/^#define SYS_read (SYS_BASE + 3)$/;"	d
SYS_sched_yield	runtime\sys_freebsd_arm.s	/^#define SYS_sched_yield (SYS_BASE + 331)$/;"	d
SYS_setitimer	runtime\sys_freebsd_arm.s	/^#define SYS_setitimer (SYS_BASE + 83)$/;"	d
SYS_sigaction	runtime\sys_freebsd_arm.s	/^#define SYS_sigaction (SYS_BASE + 416)$/;"	d
SYS_sigaltstack	runtime\sys_freebsd_arm.s	/^#define SYS_sigaltstack (SYS_BASE + 53)$/;"	d
SYS_sigprocmask	runtime\sys_freebsd_arm.s	/^#define SYS_sigprocmask (SYS_BASE + 340)$/;"	d
SYS_thr_exit	runtime\sys_freebsd_arm.s	/^#define SYS_thr_exit (SYS_BASE + 431)$/;"	d
SYS_thr_kill	runtime\sys_freebsd_arm.s	/^#define SYS_thr_kill (SYS_BASE + 433)$/;"	d
SYS_thr_new	runtime\sys_freebsd_arm.s	/^#define SYS_thr_new (SYS_BASE + 455)$/;"	d
SYS_thr_self	runtime\sys_freebsd_arm.s	/^#define SYS_thr_self (SYS_BASE + 432)$/;"	d
SYS_write	runtime\sys_freebsd_arm.s	/^#define SYS_write (SYS_BASE + 4)$/;"	d
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·cas(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·casp(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·close(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·exit(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·exit1(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·getrlimit(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·kevent(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·madvise(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·mmap(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·munmap(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·nanotime(SB), NOSPLIT, $32$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·open(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·osyield(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·raise(SB),NOSPLIT,$8$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·read(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·read_tls_fallback(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·setitimer(SB), NOSPLIT, $-8$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$24$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·sys_umtx_op(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·thr_new(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·thr_start(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·usleep(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT runtime·write(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_freebsd_arm.s	/^TEXT time·now(SB), NOSPLIT, $32$/;"	l
CONTENTS_CODE	runtime\sys_linux_386.s	/^#define CONTENTS_CODE 0x04$/;"	d
CONTENTS_DATA	runtime\sys_linux_386.s	/^#define CONTENTS_DATA 0x00$/;"	d
CONTENTS_STACK	runtime\sys_linux_386.s	/^#define CONTENTS_STACK 0x02$/;"	d
LIMIT_IN_PAGES	runtime\sys_linux_386.s	/^#define LIMIT_IN_PAGES 0x10$/;"	d
PUSHL	runtime\sys_linux_386.s	/^	PUSHL	DI	\/\/ tls #$/;"	d
READ_EXEC_ONLY	runtime\sys_linux_386.s	/^#define READ_EXEC_ONLY 0x08$/;"	d
SEG_32BIT	runtime\sys_linux_386.s	/^#define SEG_32BIT 0x01$/;"	d
SEG_NOT_PRESENT	runtime\sys_linux_386.s	/^#define SEG_NOT_PRESENT 0x20$/;"	d
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·clone(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·close(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·epollcreate(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·epollcreate1(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·epollctl(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·epollwait(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·exit(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·exit1(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·futex(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·getrlimit(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·madvise(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·mincore(SB),NOSPLIT,$0-24$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·mmap(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·munmap(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·nanotime(SB), NOSPLIT, $32$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·open(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·osyield(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·raise(SB),NOSPLIT,$12$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·read(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·rt_sigaction(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·rtsigprocmask(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·sched_getaffinity(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·setitimer(SB),NOSPLIT,$0-24$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·setldt(SB),NOSPLIT,$32$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·sigreturn(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$44$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·usleep(SB),NOSPLIT,$8$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT runtime·write(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_386.s	/^TEXT time·now(SB), NOSPLIT, $32$/;"	l
USEABLE	runtime\sys_linux_386.s	/^#define USEABLE 0x40$/;"	d
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·clone(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·close(SB),NOSPLIT,$0-16$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·epollcreate(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·epollcreate1(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·epollctl(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·epollwait(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·exit(SB),NOSPLIT,$0-8$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·exit1(SB),NOSPLIT,$0-8$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·futex(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·getrlimit(SB),NOSPLIT,$0-24$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·madvise(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·mincore(SB),NOSPLIT,$0-24$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·mmap(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·munmap(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·nanotime(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·open(SB),NOSPLIT,$0-16$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·osyield(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·raise(SB),NOSPLIT,$12$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·read(SB),NOSPLIT,$0-24$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·rt_sigaction(SB),NOSPLIT,$0-32$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·rtsigprocmask(SB),NOSPLIT,$0-32$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·sched_getaffinity(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·setitimer(SB),NOSPLIT,$0-24$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·settls(SB),NOSPLIT,$32$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·sigreturn(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$64$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·usleep(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT runtime·write(SB),NOSPLIT,$0-24$/;"	l
TEXT	runtime\sys_linux_amd64.s	/^TEXT time·now(SB),NOSPLIT,$16$/;"	l
fallback_gtod	runtime\sys_linux_amd64.s	/^fallback_gtod:$/;"	l
fallback_gtod_nt	runtime\sys_linux_amd64.s	/^fallback_gtod_nt:$/;"	l
ARM_BASE	runtime\sys_linux_arm.s	/^#define ARM_BASE (SYS_BASE + 0x0f0000)$/;"	d
SYS_BASE	runtime\sys_linux_arm.s	/^#define SYS_BASE 0x0$/;"	d
SYS_clock_gettime	runtime\sys_linux_arm.s	/^#define SYS_clock_gettime (SYS_BASE + 263)$/;"	d
SYS_clone	runtime\sys_linux_arm.s	/^#define SYS_clone (SYS_BASE + 120)$/;"	d
SYS_close	runtime\sys_linux_arm.s	/^#define SYS_close (SYS_BASE + 6)$/;"	d
SYS_epoll_create	runtime\sys_linux_arm.s	/^#define SYS_epoll_create (SYS_BASE + 250)$/;"	d
SYS_epoll_create1	runtime\sys_linux_arm.s	/^#define SYS_epoll_create1 (SYS_BASE + 357)$/;"	d
SYS_epoll_ctl	runtime\sys_linux_arm.s	/^#define SYS_epoll_ctl (SYS_BASE + 251)$/;"	d
SYS_epoll_wait	runtime\sys_linux_arm.s	/^#define SYS_epoll_wait (SYS_BASE + 252)$/;"	d
SYS_exit	runtime\sys_linux_arm.s	/^#define SYS_exit (SYS_BASE + 1)$/;"	d
SYS_exit_group	runtime\sys_linux_arm.s	/^#define SYS_exit_group (SYS_BASE + 248)$/;"	d
SYS_fcntl	runtime\sys_linux_arm.s	/^#define SYS_fcntl (SYS_BASE + 55)$/;"	d
SYS_futex	runtime\sys_linux_arm.s	/^#define SYS_futex (SYS_BASE + 240)$/;"	d
SYS_gettid	runtime\sys_linux_arm.s	/^#define SYS_gettid (SYS_BASE + 224)$/;"	d
SYS_gettimeofday	runtime\sys_linux_arm.s	/^#define SYS_gettimeofday (SYS_BASE + 78)$/;"	d
SYS_madvise	runtime\sys_linux_arm.s	/^#define SYS_madvise (SYS_BASE + 220)$/;"	d
SYS_mincore	runtime\sys_linux_arm.s	/^#define SYS_mincore (SYS_BASE + 219)$/;"	d
SYS_mmap2	runtime\sys_linux_arm.s	/^#define SYS_mmap2 (SYS_BASE + 192)$/;"	d
SYS_munmap	runtime\sys_linux_arm.s	/^#define SYS_munmap (SYS_BASE + 91)$/;"	d
SYS_open	runtime\sys_linux_arm.s	/^#define SYS_open (SYS_BASE + 5)$/;"	d
SYS_read	runtime\sys_linux_arm.s	/^#define SYS_read (SYS_BASE + 3)$/;"	d
SYS_rt_sigaction	runtime\sys_linux_arm.s	/^#define SYS_rt_sigaction (SYS_BASE + 174)$/;"	d
SYS_rt_sigprocmask	runtime\sys_linux_arm.s	/^#define SYS_rt_sigprocmask (SYS_BASE + 175)$/;"	d
SYS_rt_sigreturn	runtime\sys_linux_arm.s	/^#define SYS_rt_sigreturn (SYS_BASE + 173)$/;"	d
SYS_sched_getaffinity	runtime\sys_linux_arm.s	/^#define SYS_sched_getaffinity (SYS_BASE + 242)$/;"	d
SYS_sched_yield	runtime\sys_linux_arm.s	/^#define SYS_sched_yield (SYS_BASE + 158)$/;"	d
SYS_select	runtime\sys_linux_arm.s	/^#define SYS_select (SYS_BASE + 142) \/\/ newselect$/;"	d
SYS_setitimer	runtime\sys_linux_arm.s	/^#define SYS_setitimer (SYS_BASE + 104)$/;"	d
SYS_sigaltstack	runtime\sys_linux_arm.s	/^#define SYS_sigaltstack (SYS_BASE + 186)$/;"	d
SYS_tkill	runtime\sys_linux_arm.s	/^#define SYS_tkill (SYS_BASE + 238)$/;"	d
SYS_ugetrlimit	runtime\sys_linux_arm.s	/^#define SYS_ugetrlimit (SYS_BASE + 191)$/;"	d
SYS_write	runtime\sys_linux_arm.s	/^#define SYS_write (SYS_BASE + 4)$/;"	d
TEXT	runtime\sys_linux_arm.s	/^TEXT	runtime·raise(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT cas<>(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·cas(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·casp(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·clone(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·close(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·epollcreate(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·epollcreate1(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·epollctl(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·epollwait(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·exit(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·exit1(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·futex(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·getrlimit(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·madvise(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·mincore(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·mmap(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·munmap(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·nanotime(SB),NOSPLIT,$32$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·open(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·osyield(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·read(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·read_tls_fallback(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·rt_sigaction(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·rtsigprocmask(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·sched_getaffinity(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·setitimer(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·sigreturn(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$24$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·usleep(SB),NOSPLIT,$12$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT runtime·write(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_linux_arm.s	/^TEXT time·now(SB), NOSPLIT, $32$/;"	l
casagain	runtime\sys_linux_arm.s	/^casagain:$/;"	l
cascheck	runtime\sys_linux_arm.s	/^cascheck:$/;"	l
GLOBL	runtime\sys_netbsd_386.s	/^GLOBL runtime·tlsoffset(SB),$4$/;"	l
MULL	runtime\sys_netbsd_386.s	/^	MULL	DX$/;"	d
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·close(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$32$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·exit(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·exit1(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·getcontext(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·kevent(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·lwp_create(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·lwp_park(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·lwp_self(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·lwp_tramp(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·lwp_unpark(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·madvise(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·mmap(SB),NOSPLIT,$36$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·munmap(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·nanotime(SB),NOSPLIT,$32$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·open(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·osyield(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·raise(SB),NOSPLIT,$12$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·read(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·setitimer(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·setldt(SB),NOSPLIT,$8$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·settls(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$24$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·sigreturn_tramp(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$44$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$28$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·usleep(SB),NOSPLIT,$24$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT runtime·write(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_netbsd_386.s	/^TEXT time·now(SB), NOSPLIT, $32$/;"	l
MULL	runtime\sys_netbsd_amd64.s	/^	MULL	DX$/;"	d
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·close(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·exit(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·exit1(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·getcontext(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·kevent(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·lwp_create(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·lwp_park(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·lwp_self(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·lwp_tramp(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·lwp_unpark(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·madvise(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·mmap(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·munmap(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·nanotime(SB),NOSPLIT,$32$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·open(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·osyield(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·raise(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·read(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·setitimer(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·settls(SB),NOSPLIT,$8$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·sigreturn_tramp(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$64$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·usleep(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT runtime·write(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_netbsd_amd64.s	/^TEXT time·now(SB), NOSPLIT, $32$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·cas(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·casp(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·close(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·exit(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·exit1(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·getcontext(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·kevent(SB),NOSPLIT,$8$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·lwp_create(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·lwp_park(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·lwp_self(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·lwp_tramp(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·lwp_unpark(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·madvise(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·mmap(SB),NOSPLIT,$12$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·munmap(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·nanotime(SB), NOSPLIT, $32$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·open(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·osyield(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·raise(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·read(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·read_tls_fallback(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·setitimer(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$4$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·sigreturn_tramp(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$24$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$8$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·usleep(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT runtime·write(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_netbsd_arm.s	/^TEXT time·now(SB), NOSPLIT, $32$/;"	l
GLOBL	runtime\sys_openbsd_386.s	/^GLOBL runtime·tlsoffset(SB),$4$/;"	l
MULL	runtime\sys_openbsd_386.s	/^	MULL	DX$/;"	d
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·close(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$32$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·exit(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·exit1(SB),NOSPLIT,$8$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·kevent(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·madvise(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·mmap(SB),NOSPLIT,$36$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·munmap(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·nanotime(SB),NOSPLIT,$32$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·open(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·osyield(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·raise(SB),NOSPLIT,$12$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·read(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·setitimer(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·setldt(SB),NOSPLIT,$4$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·settls(SB),NOSPLIT,$8$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$44$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$28$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·tfork(SB),NOSPLIT,$12$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·thrsleep(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·thrwakeup(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·usleep(SB),NOSPLIT,$20$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT runtime·write(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\sys_openbsd_386.s	/^TEXT time·now(SB), NOSPLIT, $32$/;"	l
sigtramp_ret	runtime\sys_openbsd_386.s	/^sigtramp_ret:$/;"	l
MULL	runtime\sys_openbsd_amd64.s	/^	MULL	DX$/;"	d
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·close(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·closeonexec(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·exit(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·exit1(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·kevent(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·kqueue(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·madvise(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·mmap(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·munmap(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·nanotime(SB),NOSPLIT,$24$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·open(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·osyield(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·raise(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·read(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·setitimer(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·settls(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·sigaction(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·sigaltstack(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·sigprocmask(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$64$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·sysctl(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·tfork(SB),NOSPLIT,$32$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·thrsleep(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·thrwakeup(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·usleep(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT runtime·write(SB),NOSPLIT,$-8$/;"	l
TEXT	runtime\sys_openbsd_amd64.s	/^TEXT time·now(SB), NOSPLIT, $32$/;"	l
ERRMAX	runtime\sys_plan9_386.s	/^#define ERRMAX 128	\/* from os_plan9.h *\/$/;"	d
TEXT	runtime\sys_plan9_386.s	/^TEXT runtime·brk_(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_386.s	/^TEXT runtime·close(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_386.s	/^TEXT runtime·errstr(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_386.s	/^TEXT runtime·exits(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_386.s	/^TEXT runtime·noted(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_386.s	/^TEXT runtime·notify(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_386.s	/^TEXT runtime·open(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_386.s	/^TEXT runtime·plan9_semacquire(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_386.s	/^TEXT runtime·plan9_semrelease(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_386.s	/^TEXT runtime·plan9_tsemacquire(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_386.s	/^TEXT runtime·pread(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_386.s	/^TEXT runtime·pwrite(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_386.s	/^TEXT runtime·rfork(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_386.s	/^TEXT runtime·seek(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_386.s	/^TEXT runtime·setfpmasks(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_386.s	/^TEXT runtime·setldt(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_386.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_386.s	/^TEXT runtime·sleep(SB),NOSPLIT,$0$/;"	l
ERRMAX	runtime\sys_plan9_amd64.s	/^#define ERRMAX 128	\/* from os_plan9.h *\/$/;"	d
TEXT	runtime\sys_plan9_amd64.s	/^TEXT _seek<>(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_amd64.s	/^TEXT runtime·brk_(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_amd64.s	/^TEXT runtime·close(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_amd64.s	/^TEXT runtime·errstr(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_amd64.s	/^TEXT runtime·exits(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_amd64.s	/^TEXT runtime·nanotime(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_amd64.s	/^TEXT runtime·noted(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_amd64.s	/^TEXT runtime·notify(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_amd64.s	/^TEXT runtime·open(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_amd64.s	/^TEXT runtime·plan9_semacquire(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_amd64.s	/^TEXT runtime·plan9_semrelease(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_amd64.s	/^TEXT runtime·plan9_tsemacquire(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_amd64.s	/^TEXT runtime·pread(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_amd64.s	/^TEXT runtime·pwrite(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_amd64.s	/^TEXT runtime·rfork(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_amd64.s	/^TEXT runtime·seek(SB),NOSPLIT,$56$/;"	l
TEXT	runtime\sys_plan9_amd64.s	/^TEXT runtime·setfpmasks(SB),NOSPLIT,$8$/;"	l
TEXT	runtime\sys_plan9_amd64.s	/^TEXT runtime·setldt(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_amd64.s	/^TEXT runtime·settls(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_amd64.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_plan9_amd64.s	/^TEXT runtime·sleep(SB),NOSPLIT,$0$/;"	l
GLOBL	runtime\sys_windows_386.s	/^GLOBL runtime·cbctxts(SB), $4$/;"	l
POPL	runtime\sys_windows_386.s	/^	POPL	DI$/;"	d
POPL	runtime\sys_windows_386.s	/^	POPL	DX$/;"	d
PUSHL	runtime\sys_windows_386.s	/^	PUSHL	DI$/;"	d
PUSHL	runtime\sys_windows_386.s	/^	PUSHL	DX			\/\/ argsize (including return value)$/;"	d
PUSHL	runtime\sys_windows_386.s	/^	PUSHL	DX$/;"	d
TEXT	runtime\sys_windows_386.s	/^TEXT	runtime·badsignal2(SB),NOSPLIT,$24$/;"	l
TEXT	runtime\sys_windows_386.s	/^TEXT runtime·asmstdcall(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_windows_386.s	/^TEXT runtime·callbackasm1+0(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_windows_386.s	/^TEXT runtime·ctrlhandler(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_windows_386.s	/^TEXT runtime·externalthreadhandler(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_windows_386.s	/^TEXT runtime·getlasterror(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_windows_386.s	/^TEXT runtime·install_exception_handler(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_windows_386.s	/^TEXT runtime·profileloop(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_windows_386.s	/^TEXT runtime·remove_exception_handler(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_windows_386.s	/^TEXT runtime·setlasterror(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_windows_386.s	/^TEXT runtime·setldt(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_windows_386.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$28$/;"	l
TEXT	runtime\sys_windows_386.s	/^TEXT runtime·tstart(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_windows_386.s	/^TEXT runtime·tstart_stdcall(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_windows_386.s	/^TEXT runtime·usleep1(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_windows_386.s	/^TEXT runtime·usleep2(SB),NOSPLIT,$20$/;"	l
sigdone	runtime\sys_windows_386.s	/^sigdone:$/;"	l
GLOBL	runtime\sys_windows_amd64.s	/^GLOBL runtime·cbctxts(SB), $8$/;"	l
POPQ	runtime\sys_windows_amd64.s	/^	POPQ	DI$/;"	d
PUSHQ	runtime\sys_windows_amd64.s	/^	PUSHQ	DI$/;"	d
TEXT	runtime\sys_windows_amd64.s	/^TEXT runtime·asmstdcall(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_windows_amd64.s	/^TEXT runtime·badsignal2(SB),NOSPLIT,$48$/;"	l
TEXT	runtime\sys_windows_amd64.s	/^TEXT runtime·callbackasm1(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_windows_amd64.s	/^TEXT runtime·ctrlhandler(SB),NOSPLIT,$8$/;"	l
TEXT	runtime\sys_windows_amd64.s	/^TEXT runtime·externalthreadhandler(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_windows_amd64.s	/^TEXT runtime·getlasterror(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_windows_amd64.s	/^TEXT runtime·install_exception_handler(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_windows_amd64.s	/^TEXT runtime·profileloop(SB),NOSPLIT,$8$/;"	l
TEXT	runtime\sys_windows_amd64.s	/^TEXT runtime·remove_exception_handler(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_windows_amd64.s	/^TEXT runtime·setlasterror(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_windows_amd64.s	/^TEXT runtime·setstacklimits(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_windows_amd64.s	/^TEXT runtime·settls(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_windows_amd64.s	/^TEXT runtime·sigtramp(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_windows_amd64.s	/^TEXT runtime·tstart_stdcall(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_windows_amd64.s	/^TEXT runtime·usleep1(SB),NOSPLIT,$0$/;"	l
TEXT	runtime\sys_windows_amd64.s	/^TEXT runtime·usleep2(SB),NOSPLIT,$8$/;"	l
loadregs	runtime\sys_windows_amd64.s	/^loadregs:$/;"	l
maxargs	runtime\sys_windows_amd64.s	/^#define maxargs 16$/;"	d
sigdone	runtime\sys_windows_amd64.s	/^sigdone:$/;"	l
gostartcall	runtime\sys_x86.c	/^runtime·gostartcall(Gobuf *gobuf, void (*fn)(void), void *ctxt)$/;"	f
rewindmorestack	runtime\sys_x86.c	/^runtime·rewindmorestack(Gobuf *gobuf)$/;"	f
nanotime	runtime\time_plan9_386.c	/^runtime·nanotime(void)$/;"	f
callers	runtime\traceback_arm.c	/^runtime·callers(int32 skip, uintptr *pcbuf, int32 m)$/;"	f
gentraceback	runtime\traceback_arm.c	/^runtime·gentraceback(uintptr pc0, uintptr sp0, uintptr lr0, G *gp, int32 skip, uintptr *pcbuf, int32 max, void (*callback)(Stkframe*, void*), void *v, bool printall)$/;"	f
printcreatedby	runtime\traceback_arm.c	/^runtime·printcreatedby(G *gp)$/;"	f
traceback	runtime\traceback_arm.c	/^runtime·traceback(uintptr pc, uintptr sp, uintptr lr, G *gp)$/;"	f
callers	runtime\traceback_x86.c	/^runtime·callers(int32 skip, uintptr *pcbuf, int32 m)$/;"	f
gentraceback	runtime\traceback_x86.c	/^runtime·gentraceback(uintptr pc0, uintptr sp0, uintptr lr0, G *gp, int32 skip, uintptr *pcbuf, int32 max, void (*callback)(Stkframe*, void*), void *v, bool printall)$/;"	f
printcreatedby	runtime\traceback_x86.c	/^runtime·printcreatedby(G *gp)$/;"	f
traceback	runtime\traceback_x86.c	/^runtime·traceback(uintptr pc, uintptr sp, uintptr lr, G *gp)$/;"	f
ChanType	runtime\type.h	/^struct ChanType$/;"	s
FuncType	runtime\type.h	/^struct FuncType$/;"	s
FuncType	runtime\type.h	/^typedef struct FuncType FuncType;$/;"	t	typeref:struct:FuncType
IMethod	runtime\type.h	/^struct IMethod$/;"	s
IMethod	runtime\type.h	/^typedef struct IMethod IMethod;$/;"	t	typeref:struct:IMethod
InterfaceType	runtime\type.h	/^struct InterfaceType$/;"	s
InterfaceType	runtime\type.h	/^typedef struct InterfaceType InterfaceType;$/;"	t	typeref:struct:InterfaceType
MapType	runtime\type.h	/^struct MapType$/;"	s
Method	runtime\type.h	/^struct Method$/;"	s
Method	runtime\type.h	/^typedef struct Method Method;$/;"	t	typeref:struct:Method
PtrType	runtime\type.h	/^struct PtrType$/;"	s
PtrType	runtime\type.h	/^typedef struct PtrType PtrType;$/;"	t	typeref:struct:PtrType
SliceType	runtime\type.h	/^struct SliceType$/;"	s
SliceType	runtime\type.h	/^typedef struct SliceType SliceType;$/;"	t	typeref:struct:SliceType
Type	runtime\type.h	/^	Type;$/;"	m	struct:ChanType
Type	runtime\type.h	/^	Type;$/;"	m	struct:FuncType
Type	runtime\type.h	/^	Type;$/;"	m	struct:InterfaceType
Type	runtime\type.h	/^	Type;$/;"	m	struct:MapType
Type	runtime\type.h	/^	Type;$/;"	m	struct:PtrType
Type	runtime\type.h	/^	Type;$/;"	m	struct:SliceType
Type	runtime\type.h	/^struct Type$/;"	s
Type	runtime\type.h	/^typedef struct Type Type;$/;"	t	typeref:struct:Type
UncommonType	runtime\type.h	/^struct UncommonType$/;"	s
UncommonType	runtime\type.h	/^typedef struct UncommonType UncommonType;$/;"	t	typeref:struct:UncommonType
_unused	runtime\type.h	/^	uint8 _unused;$/;"	m	struct:Type
alg	runtime\type.h	/^	Alg *alg;$/;"	m	struct:Type
align	runtime\type.h	/^	uint8 align;$/;"	m	struct:Type
bucket	runtime\type.h	/^	Type *bucket; \/\/ internal type representing a hash bucket$/;"	m	struct:MapType
dir	runtime\type.h	/^	uintptr dir;$/;"	m	struct:ChanType
dotdotdot	runtime\type.h	/^	bool dotdotdot;$/;"	m	struct:FuncType
elem	runtime\type.h	/^	Type *elem;$/;"	m	struct:ChanType
elem	runtime\type.h	/^	Type *elem;$/;"	m	struct:MapType
elem	runtime\type.h	/^	Type *elem;$/;"	m	struct:PtrType
elem	runtime\type.h	/^	Type *elem;$/;"	m	struct:SliceType
fieldAlign	runtime\type.h	/^	uint8 fieldAlign;$/;"	m	struct:Type
gc	runtime\type.h	/^	void *gc;$/;"	m	struct:Type
hash	runtime\type.h	/^	uint32 hash;$/;"	m	struct:Type
hmap	runtime\type.h	/^	Type *hmap;   \/\/ internal type representing a Hmap$/;"	m	struct:MapType
ifn	runtime\type.h	/^	void (*ifn)(void);$/;"	m	struct:Method
in	runtime\type.h	/^	Slice in;$/;"	m	struct:FuncType
key	runtime\type.h	/^	Type *key;$/;"	m	struct:MapType
kind	runtime\type.h	/^	uint8 kind;$/;"	m	struct:Type
m	runtime\type.h	/^	IMethod m[];$/;"	m	struct:InterfaceType
m	runtime\type.h	/^	Method m[];$/;"	m	struct:UncommonType
mhdr	runtime\type.h	/^	Slice mhdr;$/;"	m	struct:InterfaceType
mhdr	runtime\type.h	/^	Slice mhdr;$/;"	m	struct:UncommonType
mtyp	runtime\type.h	/^	Type	*mtyp;$/;"	m	struct:Method
name	runtime\type.h	/^	String *name;$/;"	m	struct:IMethod
name	runtime\type.h	/^	String *name;$/;"	m	struct:Method
name	runtime\type.h	/^	String *name;$/;"	m	struct:UncommonType
out	runtime\type.h	/^	Slice out;$/;"	m	struct:FuncType
pkgPath	runtime\type.h	/^	String *pkgPath;$/;"	m	struct:IMethod
pkgPath	runtime\type.h	/^	String *pkgPath;$/;"	m	struct:Method
pkgPath	runtime\type.h	/^	String *pkgPath;$/;"	m	struct:UncommonType
ptrto	runtime\type.h	/^	Type *ptrto;$/;"	m	struct:Type
size	runtime\type.h	/^	uintptr size;$/;"	m	struct:Type
string	runtime\type.h	/^	String *string;$/;"	m	struct:Type
tfn	runtime\type.h	/^	void (*tfn)(void);$/;"	m	struct:Method
typ	runtime\type.h	/^	Type *typ;$/;"	m	struct:Method
type	runtime\type.h	/^	Type *type;$/;"	m	struct:IMethod
x	runtime\type.h	/^	UncommonType *x;$/;"	m	struct:Type
CommonSize	runtime\typekind.h	/^	CommonSize = 6*PtrSize + 8,$/;"	e	enum:__anon102
KindArray	runtime\typekind.h	/^	KindArray,$/;"	e	enum:__anon102
KindBool	runtime\typekind.h	/^	KindBool = 1,$/;"	e	enum:__anon102
KindChan	runtime\typekind.h	/^	KindChan,$/;"	e	enum:__anon102
KindComplex128	runtime\typekind.h	/^	KindComplex128,$/;"	e	enum:__anon102
KindComplex64	runtime\typekind.h	/^	KindComplex64,$/;"	e	enum:__anon102
KindFloat32	runtime\typekind.h	/^	KindFloat32,$/;"	e	enum:__anon102
KindFloat64	runtime\typekind.h	/^	KindFloat64,$/;"	e	enum:__anon102
KindFunc	runtime\typekind.h	/^	KindFunc,$/;"	e	enum:__anon102
KindInt	runtime\typekind.h	/^	KindInt,$/;"	e	enum:__anon102
KindInt16	runtime\typekind.h	/^	KindInt16,$/;"	e	enum:__anon102
KindInt32	runtime\typekind.h	/^	KindInt32,$/;"	e	enum:__anon102
KindInt64	runtime\typekind.h	/^	KindInt64,$/;"	e	enum:__anon102
KindInt8	runtime\typekind.h	/^	KindInt8,$/;"	e	enum:__anon102
KindInterface	runtime\typekind.h	/^	KindInterface,$/;"	e	enum:__anon102
KindMap	runtime\typekind.h	/^	KindMap,$/;"	e	enum:__anon102
KindNoPointers	runtime\typekind.h	/^	KindNoPointers = 1<<7,$/;"	e	enum:__anon102
KindPtr	runtime\typekind.h	/^	KindPtr,$/;"	e	enum:__anon102
KindSlice	runtime\typekind.h	/^	KindSlice,$/;"	e	enum:__anon102
KindString	runtime\typekind.h	/^	KindString,$/;"	e	enum:__anon102
KindStruct	runtime\typekind.h	/^	KindStruct,$/;"	e	enum:__anon102
KindUint	runtime\typekind.h	/^	KindUint,$/;"	e	enum:__anon102
KindUint16	runtime\typekind.h	/^	KindUint16,$/;"	e	enum:__anon102
KindUint32	runtime\typekind.h	/^	KindUint32,$/;"	e	enum:__anon102
KindUint64	runtime\typekind.h	/^	KindUint64,$/;"	e	enum:__anon102
KindUint8	runtime\typekind.h	/^	KindUint8,$/;"	e	enum:__anon102
KindUintptr	runtime\typekind.h	/^	KindUintptr,$/;"	e	enum:__anon102
KindUnsafePointer	runtime\typekind.h	/^	KindUnsafePointer,$/;"	e	enum:__anon102
AT_NULL	runtime\vdso_linux_amd64.c	9;"	d	file:
AT_RANDOM	runtime\vdso_linux_amd64.c	7;"	d	file:
AT_SYSINFO_EHDR	runtime\vdso_linux_amd64.c	8;"	d	file:
DT_NULL	runtime\vdso_linux_amd64.c	12;"	d	file:
DT_STRTAB	runtime\vdso_linux_amd64.c	13;"	d	file:
DT_SYMTAB	runtime\vdso_linux_amd64.c	14;"	d	file:
DT_VERDEF	runtime\vdso_linux_amd64.c	16;"	d	file:
DT_VERSYM	runtime\vdso_linux_amd64.c	15;"	d	file:
EI_NIDENT	runtime\vdso_linux_amd64.c	29;"	d	file:
ELF64_ST_BIND	runtime\vdso_linux_amd64.c	26;"	d	file:
ELF64_ST_TYPE	runtime\vdso_linux_amd64.c	27;"	d	file:
Elf64_Addr	runtime\vdso_linux_amd64.c	/^typedef uint64 Elf64_Addr;$/;"	t	file:
Elf64_Dyn	runtime\vdso_linux_amd64.c	/^} Elf64_Dyn;$/;"	t	typeref:struct:__anon108	file:
Elf64_Ehdr	runtime\vdso_linux_amd64.c	/^} Elf64_Ehdr;$/;"	t	typeref:struct:__anon105	file:
Elf64_Half	runtime\vdso_linux_amd64.c	/^typedef uint16 Elf64_Half;$/;"	t	file:
Elf64_Off	runtime\vdso_linux_amd64.c	/^typedef uint64 Elf64_Off;$/;"	t	file:
Elf64_Phdr	runtime\vdso_linux_amd64.c	/^} Elf64_Phdr;$/;"	t	typeref:struct:__anon106	file:
Elf64_Section	runtime\vdso_linux_amd64.c	/^typedef uint16 Elf64_Section;$/;"	t	file:
Elf64_Shdr	runtime\vdso_linux_amd64.c	/^} Elf64_Shdr;$/;"	t	typeref:struct:__anon107	file:
Elf64_Sword	runtime\vdso_linux_amd64.c	/^typedef	int32  Elf64_Sword;$/;"	t	file:
Elf64_Sxword	runtime\vdso_linux_amd64.c	/^typedef	int64  Elf64_Sxword;$/;"	t	file:
Elf64_Sym	runtime\vdso_linux_amd64.c	/^} Elf64_Sym;$/;"	t	typeref:struct:__anon103	file:
Elf64_Verdaux	runtime\vdso_linux_amd64.c	/^} Elf64_Verdaux;$/;"	t	typeref:struct:__anon110	file:
Elf64_Verdef	runtime\vdso_linux_amd64.c	/^} Elf64_Verdef;$/;"	t	typeref:struct:__anon104	file:
Elf64_Versym	runtime\vdso_linux_amd64.c	/^typedef Elf64_Half Elf64_Versym;$/;"	t	file:
Elf64_Word	runtime\vdso_linux_amd64.c	/^typedef uint32 Elf64_Word;$/;"	t	file:
Elf64_Xword	runtime\vdso_linux_amd64.c	/^typedef uint64 Elf64_Xword;$/;"	t	file:
Elf64_auxv_t	runtime\vdso_linux_amd64.c	/^} Elf64_auxv_t;$/;"	t	typeref:struct:__anon111	file:
PT_DYNAMIC	runtime\vdso_linux_amd64.c	11;"	d	file:
PT_LOAD	runtime\vdso_linux_amd64.c	10;"	d	file:
SHN_UNDEF	runtime\vdso_linux_amd64.c	19;"	d	file:
SHT_DYNSYM	runtime\vdso_linux_amd64.c	20;"	d	file:
STB_GLOBAL	runtime\vdso_linux_amd64.c	22;"	d	file:
STB_WEAK	runtime\vdso_linux_amd64.c	23;"	d	file:
STT_FUNC	runtime\vdso_linux_amd64.c	21;"	d	file:
SYM_KEYS_COUNT	runtime\vdso_linux_amd64.c	167;"	d	file:
VER_FLG_BASE	runtime\vdso_linux_amd64.c	18;"	d	file:
__vdso_clock_gettime_sym	runtime\vdso_linux_amd64.c	/^void* runtime·__vdso_clock_gettime_sym = (void*)0;$/;"	v
__vdso_gettimeofday_sym	runtime\vdso_linux_amd64.c	/^void* runtime·__vdso_gettimeofday_sym = (void*)0xffffffffff600000ULL;$/;"	v
__vdso_time_sym	runtime\vdso_linux_amd64.c	/^void* runtime·__vdso_time_sym = (void*)0xffffffffff600400ULL;$/;"	v
a_type	runtime\vdso_linux_amd64.c	/^	uint64 a_type;        \/* Entry type *\/$/;"	m	struct:__anon111	file:
a_un	runtime\vdso_linux_amd64.c	/^	} a_un;$/;"	m	struct:__anon111	typeref:union:__anon111::__anon112	file:
a_val	runtime\vdso_linux_amd64.c	/^		uint64 a_val; \/* Integer value *\/$/;"	m	union:__anon111::__anon112	file:
d_ptr	runtime\vdso_linux_amd64.c	/^		Elf64_Addr d_ptr;   \/* Address value *\/$/;"	m	union:__anon108::__anon109	file:
d_tag	runtime\vdso_linux_amd64.c	/^	Elf64_Sxword d_tag; \/* Dynamic entry type *\/$/;"	m	struct:__anon108	file:
d_un	runtime\vdso_linux_amd64.c	/^	} d_un;$/;"	m	struct:__anon108	typeref:union:__anon108::__anon109	file:
d_val	runtime\vdso_linux_amd64.c	/^		Elf64_Xword d_val;  \/* Integer value *\/$/;"	m	union:__anon108::__anon109	file:
e_ehsize	runtime\vdso_linux_amd64.c	/^	Elf64_Half e_ehsize;     \/* ELF header size in bytes *\/$/;"	m	struct:__anon105	file:
e_entry	runtime\vdso_linux_amd64.c	/^	Elf64_Addr e_entry;      \/* Entry point virtual address *\/$/;"	m	struct:__anon105	file:
e_flags	runtime\vdso_linux_amd64.c	/^	Elf64_Word e_flags;      \/* Processor-specific flags *\/$/;"	m	struct:__anon105	file:
e_ident	runtime\vdso_linux_amd64.c	/^	byte e_ident[EI_NIDENT]; \/* Magic number and other info *\/$/;"	m	struct:__anon105	file:
e_machine	runtime\vdso_linux_amd64.c	/^	Elf64_Half e_machine;    \/* Architecture *\/$/;"	m	struct:__anon105	file:
e_phentsize	runtime\vdso_linux_amd64.c	/^	Elf64_Half e_phentsize;  \/* Program header table entry size *\/$/;"	m	struct:__anon105	file:
e_phnum	runtime\vdso_linux_amd64.c	/^	Elf64_Half e_phnum;      \/* Program header table entry count *\/$/;"	m	struct:__anon105	file:
e_phoff	runtime\vdso_linux_amd64.c	/^	Elf64_Off e_phoff;       \/* Program header table file offset *\/$/;"	m	struct:__anon105	file:
e_shentsize	runtime\vdso_linux_amd64.c	/^	Elf64_Half e_shentsize;  \/* Section header table entry size *\/$/;"	m	struct:__anon105	file:
e_shnum	runtime\vdso_linux_amd64.c	/^	Elf64_Half e_shnum;      \/* Section header table entry count *\/$/;"	m	struct:__anon105	file:
e_shoff	runtime\vdso_linux_amd64.c	/^	Elf64_Off e_shoff;       \/* Section header table file offset *\/$/;"	m	struct:__anon105	file:
e_shstrndx	runtime\vdso_linux_amd64.c	/^	Elf64_Half e_shstrndx;   \/* Section header string table index *\/$/;"	m	struct:__anon105	file:
e_type	runtime\vdso_linux_amd64.c	/^	Elf64_Half e_type;       \/* Object file type *\/$/;"	m	struct:__anon105	file:
e_version	runtime\vdso_linux_amd64.c	/^	Elf64_Word e_version;    \/* Object file version *\/$/;"	m	struct:__anon105	file:
linux26	runtime\vdso_linux_amd64.c	/^static version_key linux26 = { (byte*)"LINUX_2.6", 0x3ae75f6 };$/;"	v	file:
linux_setup_vdso	runtime\vdso_linux_amd64.c	/^runtime·linux_setup_vdso(int32 argc, uint8** argv)$/;"	f	file:
load_addr	runtime\vdso_linux_amd64.c	/^	uintptr load_addr;$/;"	m	struct:vdso_info	file:
load_offset	runtime\vdso_linux_amd64.c	/^	uintptr load_offset;  \/* load_addr - recorded vaddr *\/$/;"	m	struct:vdso_info	file:
name	runtime\vdso_linux_amd64.c	/^	byte* name;$/;"	m	struct:__anon113	file:
num_sym	runtime\vdso_linux_amd64.c	/^	int32 num_sym;$/;"	m	struct:vdso_info	file:
p_align	runtime\vdso_linux_amd64.c	/^	Elf64_Xword p_align;  \/* Segment alignment *\/$/;"	m	struct:__anon106	file:
p_filesz	runtime\vdso_linux_amd64.c	/^	Elf64_Xword p_filesz; \/* Segment size in file *\/$/;"	m	struct:__anon106	file:
p_flags	runtime\vdso_linux_amd64.c	/^	Elf64_Word p_flags;   \/* Segment flags *\/$/;"	m	struct:__anon106	file:
p_memsz	runtime\vdso_linux_amd64.c	/^	Elf64_Xword p_memsz;  \/* Segment size in memory *\/$/;"	m	struct:__anon106	file:
p_offset	runtime\vdso_linux_amd64.c	/^	Elf64_Off p_offset;   \/* Segment file offset *\/$/;"	m	struct:__anon106	file:
p_paddr	runtime\vdso_linux_amd64.c	/^	Elf64_Addr p_paddr;   \/* Segment physical address *\/$/;"	m	struct:__anon106	file:
p_type	runtime\vdso_linux_amd64.c	/^	Elf64_Word p_type;    \/* Segment type *\/$/;"	m	struct:__anon106	file:
p_vaddr	runtime\vdso_linux_amd64.c	/^	Elf64_Addr p_vaddr;   \/* Segment virtual address *\/$/;"	m	struct:__anon106	file:
sh_addr	runtime\vdso_linux_amd64.c	/^	Elf64_Addr sh_addr;       \/* Section virtual addr at execution *\/$/;"	m	struct:__anon107	file:
sh_addralign	runtime\vdso_linux_amd64.c	/^	Elf64_Xword sh_addralign; \/* Section alignment *\/$/;"	m	struct:__anon107	file:
sh_entsize	runtime\vdso_linux_amd64.c	/^	Elf64_Xword sh_entsize;   \/* Entry size if section holds table *\/$/;"	m	struct:__anon107	file:
sh_flags	runtime\vdso_linux_amd64.c	/^	Elf64_Xword sh_flags;     \/* Section flags *\/$/;"	m	struct:__anon107	file:
sh_info	runtime\vdso_linux_amd64.c	/^	Elf64_Word sh_info;       \/* Additional section information *\/$/;"	m	struct:__anon107	file:
sh_link	runtime\vdso_linux_amd64.c	/^	Elf64_Word sh_link;       \/* Link to another section *\/$/;"	m	struct:__anon107	file:
sh_name	runtime\vdso_linux_amd64.c	/^	Elf64_Word sh_name;       \/* Section name (string tbl index) *\/$/;"	m	struct:__anon107	file:
sh_offset	runtime\vdso_linux_amd64.c	/^	Elf64_Off sh_offset;      \/* Section file offset *\/$/;"	m	struct:__anon107	file:
sh_size	runtime\vdso_linux_amd64.c	/^	Elf64_Xword sh_size;      \/* Section size in bytes *\/$/;"	m	struct:__anon107	file:
sh_type	runtime\vdso_linux_amd64.c	/^	Elf64_Word sh_type;       \/* Section type *\/$/;"	m	struct:__anon107	file:
st_info	runtime\vdso_linux_amd64.c	/^	byte st_info;$/;"	m	struct:__anon103	file:
st_name	runtime\vdso_linux_amd64.c	/^	Elf64_Word st_name;$/;"	m	struct:__anon103	file:
st_other	runtime\vdso_linux_amd64.c	/^	byte st_other;$/;"	m	struct:__anon103	file:
st_shndx	runtime\vdso_linux_amd64.c	/^	Elf64_Section st_shndx;$/;"	m	struct:__anon103	file:
st_size	runtime\vdso_linux_amd64.c	/^	Elf64_Xword st_size;$/;"	m	struct:__anon103	file:
st_value	runtime\vdso_linux_amd64.c	/^	Elf64_Addr st_value;$/;"	m	struct:__anon103	file:
sym_keys	runtime\vdso_linux_amd64.c	/^static symbol_key sym_keys[] = {$/;"	v	file:
symbol_key	runtime\vdso_linux_amd64.c	/^} symbol_key;$/;"	t	typeref:struct:__anon113	file:
symstrings	runtime\vdso_linux_amd64.c	/^	const byte *symstrings;$/;"	m	struct:vdso_info	file:
symtab	runtime\vdso_linux_amd64.c	/^	Elf64_Sym *symtab;$/;"	m	struct:vdso_info	file:
valid	runtime\vdso_linux_amd64.c	/^	bool valid;$/;"	m	struct:vdso_info	file:
var_ptr	runtime\vdso_linux_amd64.c	/^	void** var_ptr;$/;"	m	struct:__anon113	file:
vd_aux	runtime\vdso_linux_amd64.c	/^	Elf64_Word vd_aux;     \/* Offset in bytes to verdaux array *\/$/;"	m	struct:__anon104	file:
vd_cnt	runtime\vdso_linux_amd64.c	/^	Elf64_Half vd_cnt;     \/* Number of associated aux entries *\/$/;"	m	struct:__anon104	file:
vd_flags	runtime\vdso_linux_amd64.c	/^	Elf64_Half vd_flags;   \/* Version information *\/$/;"	m	struct:__anon104	file:
vd_hash	runtime\vdso_linux_amd64.c	/^	Elf64_Word vd_hash;    \/* Version name hash value *\/$/;"	m	struct:__anon104	file:
vd_ndx	runtime\vdso_linux_amd64.c	/^	Elf64_Half vd_ndx;     \/* Version Index *\/$/;"	m	struct:__anon104	file:
vd_next	runtime\vdso_linux_amd64.c	/^	Elf64_Word vd_next;    \/* Offset in bytes to next verdef entry *\/$/;"	m	struct:__anon104	file:
vd_version	runtime\vdso_linux_amd64.c	/^	Elf64_Half vd_version; \/* Version revision *\/$/;"	m	struct:__anon104	file:
vda_name	runtime\vdso_linux_amd64.c	/^	Elf64_Word vda_name; \/* Version or dependency names *\/$/;"	m	struct:__anon110	file:
vda_next	runtime\vdso_linux_amd64.c	/^	Elf64_Word vda_next; \/* Offset in bytes to next verdaux entry *\/$/;"	m	struct:__anon110	file:
vdso_find_version	runtime\vdso_linux_amd64.c	/^vdso_find_version(struct vdso_info *vdso_info, version_key* ver)$/;"	f	file:
vdso_info	runtime\vdso_linux_amd64.c	/^struct vdso_info {$/;"	s	file:
vdso_init_from_sysinfo_ehdr	runtime\vdso_linux_amd64.c	/^vdso_init_from_sysinfo_ehdr(struct vdso_info *vdso_info, Elf64_Ehdr* hdr)$/;"	f	file:
vdso_parse_symbols	runtime\vdso_linux_amd64.c	/^vdso_parse_symbols(struct vdso_info *vdso_info, int32 version)$/;"	f	file:
ver_hash	runtime\vdso_linux_amd64.c	/^	int32 ver_hash;$/;"	m	struct:__anon114	file:
verdef	runtime\vdso_linux_amd64.c	/^	Elf64_Verdef *verdef;$/;"	m	struct:vdso_info	file:
version	runtime\vdso_linux_amd64.c	/^	byte* version;$/;"	m	struct:__anon114	file:
version_key	runtime\vdso_linux_amd64.c	/^} version_key;$/;"	t	typeref:struct:__anon114	file:
versym	runtime\vdso_linux_amd64.c	/^	Elf64_Versym *versym;$/;"	m	struct:vdso_info	file:
TEXT	runtime\vlop_386.s	/^TEXT _div64by32(SB), NOSPLIT, $0$/;"	l
TEXT	runtime\vlop_386.s	/^TEXT _mul64by32(SB), NOSPLIT, $0$/;"	l
BGE	runtime\vlop_arm.s	/^	BGE 	d0$/;"	d
BGE	runtime\vlop_arm.s	/^	BGE 	d1$/;"	d
BGE	runtime\vlop_arm.s	/^	BGE 	d2$/;"	d
M	runtime\vlop_arm.s	/^M = 3$/;"	d
TEXT	runtime\vlop_arm.s	/^TEXT _div(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\vlop_arm.s	/^TEXT _divu(SB), NOSPLIT, $16$/;"	l
TEXT	runtime\vlop_arm.s	/^TEXT _mod(SB),NOSPLIT,$16$/;"	l
TEXT	runtime\vlop_arm.s	/^TEXT _modu(SB), NOSPLIT, $16$/;"	l
TEXT	runtime\vlop_arm.s	/^TEXT _mulv(SB), NOSPLIT, $0$/;"	l
TEXT	runtime\vlop_arm.s	/^TEXT _sfloat(SB), NOSPLIT, $64-0 \/\/ 4 arg + 14*4 saved regs + cpsr$/;"	l
TEXT	runtime\vlop_arm.s	/^TEXT fast_udiv_tab<>(SB),NOSPLIT,$-4$/;"	l
TEXT	runtime\vlop_arm.s	/^TEXT udiv<>(SB),NOSPLIT,$-4$/;"	l
TMP	runtime\vlop_arm.s	/^TMP = 11$/;"	d
a	runtime\vlop_arm.s	/^a = 11$/;"	d
d0	runtime\vlop_arm.s	/^d0:$/;"	l
d1	runtime\vlop_arm.s	/^d1:$/;"	l
d2	runtime\vlop_arm.s	/^d2:$/;"	l
m1	runtime\vlop_arm.s	/^m1:$/;"	l
out	runtime\vlop_arm.s	/^out:$/;"	l
q	runtime\vlop_arm.s	/^q = 0 \/\/ input d, output q$/;"	d
r	runtime\vlop_arm.s	/^r = 1 \/\/ input n, output r$/;"	d
s	runtime\vlop_arm.s	/^s = 2 \/\/ three temporary variables$/;"	d
udiv_by_0	runtime\vlop_arm.s	/^udiv_by_0:$/;"	l
udiv_by_0_or_1	runtime\vlop_arm.s	/^udiv_by_0_or_1:$/;"	l
udiv_by_large_d	runtime\vlop_arm.s	/^udiv_by_large_d:$/;"	l
SIGN	runtime\vlrt_386.c	41;"	d	file:
Vlong	runtime\vlrt_386.c	/^struct	Vlong$/;"	s	file:
Vlong	runtime\vlrt_386.c	/^typedef	struct	Vlong	Vlong;$/;"	t	typeref:struct:Vlong	file:
_andv	runtime\vlrt_386.c	/^_andv(Vlong *r, Vlong a, Vlong b)$/;"	f
_d2v	runtime\vlrt_386.c	/^_d2v(Vlong *y, double d)$/;"	f
_divv	runtime\vlrt_386.c	/^_divv(Vlong *q, Vlong n, Vlong d)$/;"	f
_divvu	runtime\vlrt_386.c	/^_divvu(Vlong *q, Vlong n, Vlong d)$/;"	f
_eqv	runtime\vlrt_386.c	/^_eqv(Vlong lv, Vlong rv)$/;"	f
_f2v	runtime\vlrt_386.c	/^_f2v(Vlong *y, float f)$/;"	f
_gev	runtime\vlrt_386.c	/^_gev(Vlong lv, Vlong rv)$/;"	f
_gtv	runtime\vlrt_386.c	/^_gtv(Vlong lv, Vlong rv)$/;"	f
_hiv	runtime\vlrt_386.c	/^_hiv(Vlong lv, Vlong rv)$/;"	f
_hsv	runtime\vlrt_386.c	/^_hsv(Vlong lv, Vlong rv)$/;"	f
_lev	runtime\vlrt_386.c	/^_lev(Vlong lv, Vlong rv)$/;"	f
_lov	runtime\vlrt_386.c	/^_lov(Vlong lv, Vlong rv)$/;"	f
_lshv	runtime\vlrt_386.c	/^_lshv(Vlong *r, Vlong a, int b)$/;"	f
_lsv	runtime\vlrt_386.c	/^_lsv(Vlong lv, Vlong rv)$/;"	f
_ltv	runtime\vlrt_386.c	/^_ltv(Vlong lv, Vlong rv)$/;"	f
_mmv	runtime\vlrt_386.c	/^_mmv(Vlong *l, Vlong *r)$/;"	f
_modv	runtime\vlrt_386.c	/^_modv(Vlong *r, Vlong n, Vlong d)$/;"	f
_modvu	runtime\vlrt_386.c	/^_modvu(Vlong *r, Vlong n, Vlong d)$/;"	f
_nev	runtime\vlrt_386.c	/^_nev(Vlong lv, Vlong rv)$/;"	f
_orv	runtime\vlrt_386.c	/^_orv(Vlong *r, Vlong a, Vlong b)$/;"	f
_p2v	runtime\vlrt_386.c	/^_p2v(Vlong *ret, void *p)$/;"	f
_ppv	runtime\vlrt_386.c	/^_ppv(Vlong *l, Vlong *r)$/;"	f
_rshav	runtime\vlrt_386.c	/^_rshav(Vlong *r, Vlong a, int b)$/;"	f
_rshlv	runtime\vlrt_386.c	/^_rshlv(Vlong *r, Vlong a, int b)$/;"	f
_sc2v	runtime\vlrt_386.c	/^_sc2v(Vlong *ret, long uc)$/;"	f
_sh2v	runtime\vlrt_386.c	/^_sh2v(Vlong *ret, long sh)$/;"	f
_si2v	runtime\vlrt_386.c	/^_si2v(Vlong *ret, int si)$/;"	f
_sl2v	runtime\vlrt_386.c	/^_sl2v(Vlong *ret, long sl)$/;"	f
_testv	runtime\vlrt_386.c	/^_testv(Vlong rv)$/;"	f
_uc2v	runtime\vlrt_386.c	/^_uc2v(Vlong *ret, ulong ul)$/;"	f
_uh2v	runtime\vlrt_386.c	/^_uh2v(Vlong *ret, ulong ul)$/;"	f
_ui2v	runtime\vlrt_386.c	/^_ui2v(Vlong *ret, uint ui)$/;"	f
_ul2v	runtime\vlrt_386.c	/^_ul2v(Vlong *ret, ulong ul)$/;"	f
_v2d	runtime\vlrt_386.c	/^_v2d(Vlong x)$/;"	f
_v2f	runtime\vlrt_386.c	/^_v2f(Vlong x)$/;"	f
_v2sc	runtime\vlrt_386.c	/^_v2sc(Vlong rv)$/;"	f
_v2sh	runtime\vlrt_386.c	/^_v2sh(Vlong rv)$/;"	f
_v2si	runtime\vlrt_386.c	/^_v2si(Vlong rv)$/;"	f
_v2sl	runtime\vlrt_386.c	/^_v2sl(Vlong rv)$/;"	f
_v2uc	runtime\vlrt_386.c	/^_v2uc(Vlong rv)$/;"	f
_v2uh	runtime\vlrt_386.c	/^_v2uh(Vlong rv)$/;"	f
_v2ui	runtime\vlrt_386.c	/^_v2ui(Vlong rv)$/;"	f
_v2ul	runtime\vlrt_386.c	/^_v2ul(Vlong rv)$/;"	f
_vasop	runtime\vlrt_386.c	/^_vasop(Vlong *ret, void *lv, void fn(Vlong*, Vlong, Vlong), int type, Vlong rv)$/;"	f
_vmm	runtime\vlrt_386.c	/^_vmm(Vlong *l, Vlong *r)$/;"	f
_vpp	runtime\vlrt_386.c	/^_vpp(Vlong *l, Vlong *r)$/;"	f
_xorv	runtime\vlrt_386.c	/^_xorv(Vlong *r, Vlong a, Vlong b)$/;"	f
dodiv	runtime\vlrt_386.c	/^dodiv(Vlong num, Vlong den, Vlong *qp, Vlong *rp)$/;"	f	file:
hi	runtime\vlrt_386.c	/^			ulong	hi;$/;"	m	struct:Vlong::__anon115::__anon116	file:
hils	runtime\vlrt_386.c	/^			ushort	hils;$/;"	m	struct:Vlong::__anon115::__anon117	file:
hims	runtime\vlrt_386.c	/^			ushort	hims;$/;"	m	struct:Vlong::__anon115::__anon117	file:
int64div	runtime\vlrt_386.c	/^runtime·int64div(Vlong n, Vlong d, Vlong q)$/;"	f
int64mod	runtime\vlrt_386.c	/^runtime·int64mod(Vlong n, Vlong d, Vlong q)$/;"	f
lo	runtime\vlrt_386.c	/^			ulong	lo;$/;"	m	struct:Vlong::__anon115::__anon116	file:
lols	runtime\vlrt_386.c	/^			ushort	lols;$/;"	m	struct:Vlong::__anon115::__anon117	file:
loms	runtime\vlrt_386.c	/^			ushort	loms;$/;"	m	struct:Vlong::__anon115::__anon117	file:
schar	runtime\vlrt_386.c	/^typedef	signed char	schar;$/;"	t	file:
slowdodiv	runtime\vlrt_386.c	/^slowdodiv(Vlong num, Vlong den, Vlong *q, Vlong *r)$/;"	f	file:
uchar	runtime\vlrt_386.c	/^typedef	unsigned char	uchar;$/;"	t	file:
uint	runtime\vlrt_386.c	/^typedef	unsigned int	uint;$/;"	t	file:
uint64div	runtime\vlrt_386.c	/^runtime·uint64div(Vlong n, Vlong d, Vlong q)$/;"	f
uint64mod	runtime\vlrt_386.c	/^runtime·uint64mod(Vlong n, Vlong d, Vlong q)$/;"	f
ulong	runtime\vlrt_386.c	/^typedef	unsigned long	ulong;$/;"	t	file:
ushort	runtime\vlrt_386.c	/^typedef	unsigned short	ushort;$/;"	t	file:
v	runtime\vlrt_386.c	/^		long long	v;$/;"	m	union:Vlong::__anon115	file:
vneg	runtime\vlrt_386.c	/^vneg(Vlong *v)$/;"	f	file:
SIGN	runtime\vlrt_arm.c	37;"	d	file:
Vlong	runtime\vlrt_arm.c	/^struct  Vlong$/;"	s	file:
Vlong	runtime\vlrt_arm.c	/^typedef struct  Vlong   Vlong;$/;"	t	typeref:struct:Vlong	file:
_addv	runtime\vlrt_arm.c	/^_addv(Vlong *r, Vlong a, Vlong b)$/;"	f
_andv	runtime\vlrt_arm.c	/^_andv(Vlong *r, Vlong a, Vlong b)$/;"	f
_d2v	runtime\vlrt_arm.c	/^_d2v(Vlong *y, double d)$/;"	f
_divv	runtime\vlrt_arm.c	/^_divv(Vlong *q, Vlong n, Vlong d)$/;"	f
_divvu	runtime\vlrt_arm.c	/^_divvu(Vlong *q, Vlong n, Vlong d)$/;"	f
_eqv	runtime\vlrt_arm.c	/^_eqv(Vlong lv, Vlong rv)$/;"	f
_f2v	runtime\vlrt_arm.c	/^_f2v(Vlong *y, float f)$/;"	f
_gev	runtime\vlrt_arm.c	/^_gev(Vlong lv, Vlong rv)$/;"	f
_gtv	runtime\vlrt_arm.c	/^_gtv(Vlong lv, Vlong rv)$/;"	f
_hiv	runtime\vlrt_arm.c	/^_hiv(Vlong lv, Vlong rv)$/;"	f
_hsv	runtime\vlrt_arm.c	/^_hsv(Vlong lv, Vlong rv)$/;"	f
_lev	runtime\vlrt_arm.c	/^_lev(Vlong lv, Vlong rv)$/;"	f
_lov	runtime\vlrt_arm.c	/^_lov(Vlong lv, Vlong rv)$/;"	f
_lshv	runtime\vlrt_arm.c	/^_lshv(Vlong *r, Vlong a, int b)$/;"	f
_lsv	runtime\vlrt_arm.c	/^_lsv(Vlong lv, Vlong rv)$/;"	f
_ltv	runtime\vlrt_arm.c	/^_ltv(Vlong lv, Vlong rv)$/;"	f
_mmv	runtime\vlrt_arm.c	/^_mmv(Vlong *l, Vlong *r)$/;"	f
_modv	runtime\vlrt_arm.c	/^_modv(Vlong *r, Vlong n, Vlong d)$/;"	f
_modvu	runtime\vlrt_arm.c	/^_modvu(Vlong *r, Vlong n, Vlong d)$/;"	f
_nev	runtime\vlrt_arm.c	/^_nev(Vlong lv, Vlong rv)$/;"	f
_orv	runtime\vlrt_arm.c	/^_orv(Vlong *r, Vlong a, Vlong b)$/;"	f
_p2v	runtime\vlrt_arm.c	/^_p2v(Vlong *ret, void *p)$/;"	f
_ppv	runtime\vlrt_arm.c	/^_ppv(Vlong *l, Vlong *r)$/;"	f
_rshav	runtime\vlrt_arm.c	/^_rshav(Vlong *r, Vlong a, int b)$/;"	f
_rshlv	runtime\vlrt_arm.c	/^_rshlv(Vlong *r, Vlong a, int b)$/;"	f
_sc2v	runtime\vlrt_arm.c	/^_sc2v(Vlong *ret, long uc)$/;"	f
_sh2v	runtime\vlrt_arm.c	/^_sh2v(Vlong *ret, long sh)$/;"	f
_si2v	runtime\vlrt_arm.c	/^_si2v(Vlong *ret, int si)$/;"	f
_sl2v	runtime\vlrt_arm.c	/^_sl2v(Vlong *ret, long sl)$/;"	f
_subv	runtime\vlrt_arm.c	/^_subv(Vlong *r, Vlong a, Vlong b)$/;"	f
_testv	runtime\vlrt_arm.c	/^_testv(Vlong rv)$/;"	f
_uc2v	runtime\vlrt_arm.c	/^_uc2v(Vlong *ret, ulong ul)$/;"	f
_uh2v	runtime\vlrt_arm.c	/^_uh2v(Vlong *ret, ulong ul)$/;"	f
_ui2v	runtime\vlrt_arm.c	/^_ui2v(Vlong *ret, uint ui)$/;"	f
_ul2d	runtime\vlrt_arm.c	/^_ul2d(ulong u)$/;"	f
_ul2v	runtime\vlrt_arm.c	/^_ul2v(Vlong *ret, ulong ul)$/;"	f
_v2d	runtime\vlrt_arm.c	/^_v2d(Vlong x)$/;"	f
_v2f	runtime\vlrt_arm.c	/^_v2f(Vlong x)$/;"	f
_v2sc	runtime\vlrt_arm.c	/^_v2sc(Vlong rv)$/;"	f
_v2sh	runtime\vlrt_arm.c	/^_v2sh(Vlong rv)$/;"	f
_v2si	runtime\vlrt_arm.c	/^_v2si(Vlong rv)$/;"	f
_v2sl	runtime\vlrt_arm.c	/^_v2sl(Vlong rv)$/;"	f
_v2uc	runtime\vlrt_arm.c	/^_v2uc(Vlong rv)$/;"	f
_v2uh	runtime\vlrt_arm.c	/^_v2uh(Vlong rv)$/;"	f
_v2ui	runtime\vlrt_arm.c	/^_v2ui(Vlong rv)$/;"	f
_v2ul	runtime\vlrt_arm.c	/^_v2ul(Vlong rv)$/;"	f
_vasop	runtime\vlrt_arm.c	/^_vasop(Vlong *ret, void *lv, void fn(Vlong*, Vlong, Vlong), int type, Vlong rv)$/;"	f
_vmm	runtime\vlrt_arm.c	/^_vmm(Vlong *l, Vlong *r)$/;"	f
_vpp	runtime\vlrt_arm.c	/^_vpp(Vlong *l, Vlong *r)$/;"	f
_xorv	runtime\vlrt_arm.c	/^_xorv(Vlong *r, Vlong a, Vlong b)$/;"	f
dodiv	runtime\vlrt_arm.c	/^dodiv(Vlong num, Vlong den, Vlong *q, Vlong *r)$/;"	f	file:
float64toint64	runtime\vlrt_arm.c	/^runtime·float64toint64(double d, Vlong y)$/;"	f
float64touint64	runtime\vlrt_arm.c	/^runtime·float64touint64(double d, Vlong y)$/;"	f
hi	runtime\vlrt_arm.c	/^			ulong   hi;$/;"	m	struct:Vlong::__anon118::__anon119	file:
hils	runtime\vlrt_arm.c	/^			ushort hils;$/;"	m	struct:Vlong::__anon118::__anon120	file:
hims	runtime\vlrt_arm.c	/^			ushort hims;$/;"	m	struct:Vlong::__anon118::__anon120	file:
int64div	runtime\vlrt_arm.c	/^runtime·int64div(Vlong n, Vlong d, Vlong q)$/;"	f
int64mod	runtime\vlrt_arm.c	/^runtime·int64mod(Vlong n, Vlong d, Vlong q)$/;"	f
int64tofloat64	runtime\vlrt_arm.c	/^runtime·int64tofloat64(Vlong y, double d)$/;"	f
lo	runtime\vlrt_arm.c	/^			ulong   lo;$/;"	m	struct:Vlong::__anon118::__anon119	file:
lols	runtime\vlrt_arm.c	/^			ushort lols;$/;"	m	struct:Vlong::__anon118::__anon120	file:
loms	runtime\vlrt_arm.c	/^			ushort loms;$/;"	m	struct:Vlong::__anon118::__anon120	file:
panicdivide	runtime\vlrt_arm.c	/^runtime·panicdivide(void)$/;"	f
schar	runtime\vlrt_arm.c	/^typedef signed char     schar;$/;"	t	file:
uchar	runtime\vlrt_arm.c	/^typedef unsigned char   uchar;$/;"	t	file:
uint	runtime\vlrt_arm.c	/^typedef unsigned int    uint;$/;"	t	file:
uint64div	runtime\vlrt_arm.c	/^runtime·uint64div(Vlong n, Vlong d, Vlong q)$/;"	f
uint64mod	runtime\vlrt_arm.c	/^runtime·uint64mod(Vlong n, Vlong d, Vlong q)$/;"	f
uint64tofloat64	runtime\vlrt_arm.c	/^runtime·uint64tofloat64(Vlong y, double d)$/;"	f
ulong	runtime\vlrt_arm.c	/^typedef unsigned long   ulong;$/;"	t	file:
ushort	runtime\vlrt_arm.c	/^typedef unsigned short  ushort;$/;"	t	file:
vneg	runtime\vlrt_arm.c	/^vneg(Vlong *v)$/;"	f	file:
GOEXPERIMENT	runtime\zaexperiment.h	3;"	d
GOEXPERIMENT	runtime\zasm_windows_amd64.h	287;"	d
cb_max	runtime\zasm_windows_amd64.h	286;"	d
cbctxt_argsize	runtime\zasm_windows_amd64.h	52;"	d
cbctxt_gobody	runtime\zasm_windows_amd64.h	51;"	d
cbctxt_restorestack	runtime\zasm_windows_amd64.h	53;"	d
const_ACPLX128	runtime\zasm_windows_amd64.h	209;"	d
const_ACPLX64	runtime\zasm_windows_amd64.h	208;"	d
const_AFLOAT32	runtime\zasm_windows_amd64.h	206;"	d
const_AFLOAT64	runtime\zasm_windows_amd64.h	207;"	d
const_AINTER	runtime\zasm_windows_amd64.h	203;"	d
const_AMEM	runtime\zasm_windows_amd64.h	188;"	d
const_AMEM0	runtime\zasm_windows_amd64.h	189;"	d
const_AMEM128	runtime\zasm_windows_amd64.h	194;"	d
const_AMEM16	runtime\zasm_windows_amd64.h	191;"	d
const_AMEM32	runtime\zasm_windows_amd64.h	192;"	d
const_AMEM64	runtime\zasm_windows_amd64.h	193;"	d
const_AMEM8	runtime\zasm_windows_amd64.h	190;"	d
const_ANILINTER	runtime\zasm_windows_amd64.h	204;"	d
const_ANOEQ	runtime\zasm_windows_amd64.h	195;"	d
const_ANOEQ0	runtime\zasm_windows_amd64.h	196;"	d
const_ANOEQ128	runtime\zasm_windows_amd64.h	201;"	d
const_ANOEQ16	runtime\zasm_windows_amd64.h	198;"	d
const_ANOEQ32	runtime\zasm_windows_amd64.h	199;"	d
const_ANOEQ64	runtime\zasm_windows_amd64.h	200;"	d
const_ANOEQ8	runtime\zasm_windows_amd64.h	197;"	d
const_ASLICE	runtime\zasm_windows_amd64.h	205;"	d
const_ASTRING	runtime\zasm_windows_amd64.h	202;"	d
const_Amax	runtime\zasm_windows_amd64.h	210;"	d
const_BigEndian	runtime\zasm_windows_amd64.h	219;"	d
const_CacheLineSize	runtime\zasm_windows_amd64.h	220;"	d
const_DebugTypeAtBlockEnd	runtime\zasm_windows_amd64.h	260;"	d
const_FixAllocChunk	runtime\zasm_windows_amd64.h	228;"	d
const_FixedStack	runtime\zasm_windows_amd64.h	264;"	d
const_FlagNoGC	runtime\zasm_windows_amd64.h	254;"	d
const_FlagNoInvokeGC	runtime\zasm_windows_amd64.h	256;"	d
const_FlagNoProfiling	runtime\zasm_windows_amd64.h	253;"	d
const_FlagNoScan	runtime\zasm_windows_amd64.h	252;"	d
const_FlagNoZero	runtime\zasm_windows_amd64.h	255;"	d
const_Gdead	runtime\zasm_windows_amd64.h	12;"	d
const_Gidle	runtime\zasm_windows_amd64.h	6;"	d
const_Gmoribund_unused	runtime\zasm_windows_amd64.h	11;"	d
const_Grunnable	runtime\zasm_windows_amd64.h	7;"	d
const_Grunning	runtime\zasm_windows_amd64.h	8;"	d
const_Gsyscall	runtime\zasm_windows_amd64.h	9;"	d
const_Gwaiting	runtime\zasm_windows_amd64.h	10;"	d
const_HashRandomBytes	runtime\zasm_windows_amd64.h	212;"	d
const_HeapAllocChunk	runtime\zasm_windows_amd64.h	230;"	d
const_LockExternal	runtime\zasm_windows_amd64.h	167;"	d
const_LockInternal	runtime\zasm_windows_amd64.h	168;"	d
const_MHeapMap_Bits	runtime\zasm_windows_amd64.h	231;"	d
const_MSpanDead	runtime\zasm_windows_amd64.h	247;"	d
const_MSpanFree	runtime\zasm_windows_amd64.h	245;"	d
const_MSpanInUse	runtime\zasm_windows_amd64.h	244;"	d
const_MSpanListHead	runtime\zasm_windows_amd64.h	246;"	d
const_MTypes_Bytes	runtime\zasm_windows_amd64.h	242;"	d
const_MTypes_Empty	runtime\zasm_windows_amd64.h	239;"	d
const_MTypes_Single	runtime\zasm_windows_amd64.h	240;"	d
const_MTypes_Words	runtime\zasm_windows_amd64.h	241;"	d
const_MaxGcproc	runtime\zasm_windows_amd64.h	232;"	d
const_MaxGomaxprocs	runtime\zasm_windows_amd64.h	282;"	d
const_MaxMHeapList	runtime\zasm_windows_amd64.h	229;"	d
const_MaxSmallSize	runtime\zasm_windows_amd64.h	227;"	d
const_NumSizeClasses	runtime\zasm_windows_amd64.h	226;"	d
const_PCQuantum	runtime\zasm_windows_amd64.h	222;"	d
const_PageMask	runtime\zasm_windows_amd64.h	225;"	d
const_PageShift	runtime\zasm_windows_amd64.h	223;"	d
const_PageSize	runtime\zasm_windows_amd64.h	224;"	d
const_Pdead	runtime\zasm_windows_amd64.h	17;"	d
const_Pgcstop	runtime\zasm_windows_amd64.h	16;"	d
const_Pidle	runtime\zasm_windows_amd64.h	13;"	d
const_Prunning	runtime\zasm_windows_amd64.h	14;"	d
const_Psyscall	runtime\zasm_windows_amd64.h	15;"	d
const_PtrSize	runtime\zasm_windows_amd64.h	20;"	d
const_RuntimeGogoBytes	runtime\zasm_windows_amd64.h	221;"	d
const_SigDefault	runtime\zasm_windows_amd64.h	175;"	d
const_SigHandling	runtime\zasm_windows_amd64.h	176;"	d
const_SigIgnored	runtime\zasm_windows_amd64.h	177;"	d
const_SigKill	runtime\zasm_windows_amd64.h	172;"	d
const_SigNotify	runtime\zasm_windows_amd64.h	171;"	d
const_SigPanic	runtime\zasm_windows_amd64.h	174;"	d
const_SigThrow	runtime\zasm_windows_amd64.h	173;"	d
const_StackBig	runtime\zasm_windows_amd64.h	265;"	d
const_StackCacheBatch	runtime\zasm_windows_amd64.h	22;"	d
const_StackCacheSize	runtime\zasm_windows_amd64.h	21;"	d
const_StackExtra	runtime\zasm_windows_amd64.h	262;"	d
const_StackGuard	runtime\zasm_windows_amd64.h	266;"	d
const_StackLimit	runtime\zasm_windows_amd64.h	268;"	d
const_StackMin	runtime\zasm_windows_amd64.h	263;"	d
const_StackSmall	runtime\zasm_windows_amd64.h	267;"	d
const_StackSystem	runtime\zasm_windows_amd64.h	261;"	d
const_StackTop	runtime\zasm_windows_amd64.h	269;"	d
const_Structrnd	runtime\zasm_windows_amd64.h	187;"	d
const_TypeInfo_Array	runtime\zasm_windows_amd64.h	258;"	d
const_TypeInfo_Chan	runtime\zasm_windows_amd64.h	259;"	d
const_TypeInfo_SingleObject	runtime\zasm_windows_amd64.h	257;"	d
const_UseSpanType	runtime\zasm_windows_amd64.h	217;"	d
const_Windows	runtime\zasm_windows_amd64.h	180;"	d
const_false	runtime\zasm_windows_amd64.h	19;"	d
const_raceenabled	runtime\zasm_windows_amd64.h	270;"	d
const_sizeofAlg	runtime\zasm_windows_amd64.h	211;"	d
const_sizeofCgoMal	runtime\zasm_windows_amd64.h	185;"	d
const_sizeofCgoThreadStart	runtime\zasm_windows_amd64.h	283;"	d
const_sizeofChanType	runtime\zasm_windows_amd64.h	277;"	d
const_sizeofComplex128	runtime\zasm_windows_amd64.h	30;"	d
const_sizeofComplex64	runtime\zasm_windows_amd64.h	29;"	d
const_sizeofDebugVars	runtime\zasm_windows_amd64.h	186;"	d
const_sizeofDefer	runtime\zasm_windows_amd64.h	213;"	d
const_sizeofDeferChunk	runtime\zasm_windows_amd64.h	214;"	d
const_sizeofEface	runtime\zasm_windows_amd64.h	28;"	d
const_sizeofFixAlloc	runtime\zasm_windows_amd64.h	234;"	d
const_sizeofFunc	runtime\zasm_windows_amd64.h	178;"	d
const_sizeofFuncType	runtime\zasm_windows_amd64.h	279;"	d
const_sizeofFuncVal	runtime\zasm_windows_amd64.h	26;"	d
const_sizeofG	runtime\zasm_windows_amd64.h	54;"	d
const_sizeofGCStats	runtime\zasm_windows_amd64.h	39;"	d
const_sizeofGobuf	runtime\zasm_windows_amd64.h	32;"	d
const_sizeofIMethod	runtime\zasm_windows_amd64.h	274;"	d
const_sizeofIface	runtime\zasm_windows_amd64.h	27;"	d
const_sizeofInterfaceType	runtime\zasm_windows_amd64.h	275;"	d
const_sizeofItab	runtime\zasm_windows_amd64.h	179;"	d
const_sizeofLFNode	runtime\zasm_windows_amd64.h	183;"	d
const_sizeofLock	runtime\zasm_windows_amd64.h	23;"	d
const_sizeofM	runtime\zasm_windows_amd64.h	93;"	d
const_sizeofMCache	runtime\zasm_windows_amd64.h	238;"	d
const_sizeofMCacheList	runtime\zasm_windows_amd64.h	237;"	d
const_sizeofMCentral	runtime\zasm_windows_amd64.h	249;"	d
const_sizeofMHeap	runtime\zasm_windows_amd64.h	251;"	d
const_sizeofMLink	runtime\zasm_windows_amd64.h	233;"	d
const_sizeofMSpan	runtime\zasm_windows_amd64.h	248;"	d
const_sizeofMStats	runtime\zasm_windows_amd64.h	236;"	d
const_sizeofMTypes	runtime\zasm_windows_amd64.h	243;"	d
const_sizeofMapType	runtime\zasm_windows_amd64.h	276;"	d
const_sizeofMethod	runtime\zasm_windows_amd64.h	272;"	d
const_sizeofNote	runtime\zasm_windows_amd64.h	24;"	d
const_sizeofP	runtime\zasm_windows_amd64.h	151;"	d
const_sizeofPanic	runtime\zasm_windows_amd64.h	215;"	d
const_sizeofParFor	runtime\zasm_windows_amd64.h	184;"	d
const_sizeofPdesc	runtime\zasm_windows_amd64.h	285;"	d
const_sizeofPtrType	runtime\zasm_windows_amd64.h	280;"	d
const_sizeofSEH	runtime\zasm_windows_amd64.h	47;"	d
const_sizeofSched	runtime\zasm_windows_amd64.h	281;"	d
const_sizeofSigTab	runtime\zasm_windows_amd64.h	170;"	d
const_sizeofSlice	runtime\zasm_windows_amd64.h	31;"	d
const_sizeofSliceType	runtime\zasm_windows_amd64.h	278;"	d
const_sizeofStkframe	runtime\zasm_windows_amd64.h	216;"	d
const_sizeofStktop	runtime\zasm_windows_amd64.h	169;"	d
const_sizeofString	runtime\zasm_windows_amd64.h	25;"	d
const_sizeofTimer	runtime\zasm_windows_amd64.h	182;"	d
const_sizeofTimers	runtime\zasm_windows_amd64.h	181;"	d
const_sizeofType	runtime\zasm_windows_amd64.h	271;"	d
const_sizeofUncommonType	runtime\zasm_windows_amd64.h	273;"	d
const_sizeofWinCall	runtime\zasm_windows_amd64.h	40;"	d
const_sizeofWinCallbackContext	runtime\zasm_windows_amd64.h	50;"	d
const_sizeof_1_	runtime\zasm_windows_amd64.h	235;"	d
const_sizeof_2_	runtime\zasm_windows_amd64.h	250;"	d
const_sizeof_3_	runtime\zasm_windows_amd64.h	284;"	d
const_thechar	runtime\zasm_windows_amd64.h	218;"	d
const_true	runtime\zasm_windows_amd64.h	18;"	d
g	runtime\zasm_windows_amd64.h	4;"	d
g_alllink	runtime\zasm_windows_amd64.h	69;"	d
g_dchunk	runtime\zasm_windows_amd64.h	85;"	d
g_dchunknext	runtime\zasm_windows_amd64.h	86;"	d
g_defer	runtime\zasm_windows_amd64.h	59;"	d
g_end	runtime\zasm_windows_amd64.h	92;"	d
g_goid	runtime\zasm_windows_amd64.h	72;"	d
g_gopc	runtime\zasm_windows_amd64.h	90;"	d
g_isbackground	runtime\zasm_windows_amd64.h	77;"	d
g_ispanic	runtime\zasm_windows_amd64.h	75;"	d
g_issystem	runtime\zasm_windows_amd64.h	76;"	d
g_lockedm	runtime\zasm_windows_amd64.h	81;"	d
g_m	runtime\zasm_windows_amd64.h	80;"	d
g_panic	runtime\zasm_windows_amd64.h	60;"	d
g_panicwrap	runtime\zasm_windows_amd64.h	57;"	d
g_param	runtime\zasm_windows_amd64.h	70;"	d
g_preempt	runtime\zasm_windows_amd64.h	78;"	d
g_racectx	runtime\zasm_windows_amd64.h	91;"	d
g_raceignore	runtime\zasm_windows_amd64.h	79;"	d
g_sched	runtime\zasm_windows_amd64.h	61;"	d
g_schedlink	runtime\zasm_windows_amd64.h	74;"	d
g_selgen	runtime\zasm_windows_amd64.h	58;"	d
g_sig	runtime\zasm_windows_amd64.h	82;"	d
g_sigcode0	runtime\zasm_windows_amd64.h	87;"	d
g_sigcode1	runtime\zasm_windows_amd64.h	88;"	d
g_sigpc	runtime\zasm_windows_amd64.h	89;"	d
g_stack0	runtime\zasm_windows_amd64.h	67;"	d
g_stackbase	runtime\zasm_windows_amd64.h	56;"	d
g_stackguard	runtime\zasm_windows_amd64.h	66;"	d
g_stackguard0	runtime\zasm_windows_amd64.h	55;"	d
g_stacksize	runtime\zasm_windows_amd64.h	68;"	d
g_status	runtime\zasm_windows_amd64.h	71;"	d
g_syscallguard	runtime\zasm_windows_amd64.h	65;"	d
g_syscallpc	runtime\zasm_windows_amd64.h	64;"	d
g_syscallsp	runtime\zasm_windows_amd64.h	63;"	d
g_syscallstack	runtime\zasm_windows_amd64.h	62;"	d
g_waitreason	runtime\zasm_windows_amd64.h	73;"	d
g_writebuf	runtime\zasm_windows_amd64.h	84;"	d
g_writenbuf	runtime\zasm_windows_amd64.h	83;"	d
get_tls	runtime\zasm_windows_amd64.h	3;"	d
gobuf_ctxt	runtime\zasm_windows_amd64.h	37;"	d
gobuf_g	runtime\zasm_windows_amd64.h	35;"	d
gobuf_lr	runtime\zasm_windows_amd64.h	38;"	d
gobuf_pc	runtime\zasm_windows_amd64.h	34;"	d
gobuf_ret	runtime\zasm_windows_amd64.h	36;"	d
gobuf_sp	runtime\zasm_windows_amd64.h	33;"	d
m	runtime\zasm_windows_amd64.h	5;"	d
m_alllink	runtime\zasm_windows_amd64.h	122;"	d
m_caughtsig	runtime\zasm_windows_amd64.h	105;"	d
m_cgomal	runtime\zasm_windows_amd64.h	120;"	d
m_createstack	runtime\zasm_windows_amd64.h	131;"	d
m_cret	runtime\zasm_windows_amd64.h	99;"	d
m_curg	runtime\zasm_windows_amd64.h	104;"	d
m_dying	runtime\zasm_windows_amd64.h	113;"	d
m_end	runtime\zasm_windows_amd64.h	150;"	d
m_fastrand	runtime\zasm_windows_amd64.h	117;"	d
m_fflag	runtime\zasm_windows_amd64.h	134;"	d
m_freghi	runtime\zasm_windows_amd64.h	133;"	d
m_freglo	runtime\zasm_windows_amd64.h	132;"	d
m_g0	runtime\zasm_windows_amd64.h	94;"	d
m_gcing	runtime\zasm_windows_amd64.h	111;"	d
m_gcstats	runtime\zasm_windows_amd64.h	140;"	d
m_gsignal	runtime\zasm_windows_amd64.h	101;"	d
m_helpgc	runtime\zasm_windows_amd64.h	115;"	d
m_id	runtime\zasm_windows_amd64.h	108;"	d
m_locked	runtime\zasm_windows_amd64.h	135;"	d
m_lockedg	runtime\zasm_windows_amd64.h	130;"	d
m_locks	runtime\zasm_windows_amd64.h	112;"	d
m_machport	runtime\zasm_windows_amd64.h	124;"	d
m_mallocing	runtime\zasm_windows_amd64.h	109;"	d
m_mcache	runtime\zasm_windows_amd64.h	125;"	d
m_moreargp	runtime\zasm_windows_amd64.h	95;"	d
m_moreargsize	runtime\zasm_windows_amd64.h	98;"	d
m_morebuf	runtime\zasm_windows_amd64.h	96;"	d
m_moreframesize	runtime\zasm_windows_amd64.h	97;"	d
m_mstartfn	runtime\zasm_windows_amd64.h	103;"	d
m_ncgo	runtime\zasm_windows_amd64.h	119;"	d
m_ncgocall	runtime\zasm_windows_amd64.h	118;"	d
m_needextram	runtime\zasm_windows_amd64.h	142;"	d
m_nextp	runtime\zasm_windows_amd64.h	107;"	d
m_nextwaitm	runtime\zasm_windows_amd64.h	136;"	d
m_p	runtime\zasm_windows_amd64.h	106;"	d
m_park	runtime\zasm_windows_amd64.h	121;"	d
m_procid	runtime\zasm_windows_amd64.h	100;"	d
m_profilehz	runtime\zasm_windows_amd64.h	114;"	d
m_racecall	runtime\zasm_windows_amd64.h	141;"	d
m_schedlink	runtime\zasm_windows_amd64.h	123;"	d
m_seh	runtime\zasm_windows_amd64.h	149;"	d
m_settype_buf	runtime\zasm_windows_amd64.h	145;"	d
m_settype_bufsize	runtime\zasm_windows_amd64.h	146;"	d
m_spinning	runtime\zasm_windows_amd64.h	116;"	d
m_stackcache	runtime\zasm_windows_amd64.h	129;"	d
m_stackcachecnt	runtime\zasm_windows_amd64.h	128;"	d
m_stackcachepos	runtime\zasm_windows_amd64.h	127;"	d
m_stackinuse	runtime\zasm_windows_amd64.h	126;"	d
m_thread	runtime\zasm_windows_amd64.h	147;"	d
m_throwing	runtime\zasm_windows_amd64.h	110;"	d
m_tls	runtime\zasm_windows_amd64.h	102;"	d
m_waitlock	runtime\zasm_windows_amd64.h	144;"	d
m_waitsema	runtime\zasm_windows_amd64.h	137;"	d
m_waitsemacount	runtime\zasm_windows_amd64.h	138;"	d
m_waitsemalock	runtime\zasm_windows_amd64.h	139;"	d
m_waitunlockf	runtime\zasm_windows_amd64.h	143;"	d
m_wincall	runtime\zasm_windows_amd64.h	148;"	d
p_gfree	runtime\zasm_windows_amd64.h	164;"	d
p_gfreecnt	runtime\zasm_windows_amd64.h	165;"	d
p_id	runtime\zasm_windows_amd64.h	153;"	d
p_key	runtime\zasm_windows_amd64.h	152;"	d
p_link	runtime\zasm_windows_amd64.h	155;"	d
p_m	runtime\zasm_windows_amd64.h	158;"	d
p_mcache	runtime\zasm_windows_amd64.h	159;"	d
p_pad	runtime\zasm_windows_amd64.h	166;"	d
p_runq	runtime\zasm_windows_amd64.h	160;"	d
p_runqhead	runtime\zasm_windows_amd64.h	161;"	d
p_runqsize	runtime\zasm_windows_amd64.h	163;"	d
p_runqtail	runtime\zasm_windows_amd64.h	162;"	d
p_schedtick	runtime\zasm_windows_amd64.h	156;"	d
p_status	runtime\zasm_windows_amd64.h	154;"	d
p_syscalltick	runtime\zasm_windows_amd64.h	157;"	d
seh_handler	runtime\zasm_windows_amd64.h	49;"	d
seh_prev	runtime\zasm_windows_amd64.h	48;"	d
wincall_args	runtime\zasm_windows_amd64.h	43;"	d
wincall_err	runtime\zasm_windows_amd64.h	46;"	d
wincall_fn	runtime\zasm_windows_amd64.h	41;"	d
wincall_n	runtime\zasm_windows_amd64.h	42;"	d
wincall_r1	runtime\zasm_windows_amd64.h	44;"	d
wincall_r2	runtime\zasm_windows_amd64.h	45;"	d
GC	runtime\zmalloc_windows_amd64.c	/^runtime·GC()$/;"	f
Lock	runtime\zmalloc_windows_amd64.c	/^Lock; $/;"	m	struct:__anon121	file:
MHeap_SysAlloc	runtime\zmalloc_windows_amd64.c	/^runtime·MHeap_SysAlloc ( MHeap *h , uintptr n ) $/;"	f
MaxArena32	runtime\zmalloc_windows_amd64.c	289;"	d	file:
PersistentAllocChunk	runtime\zmalloc_windows_amd64.c	/^PersistentAllocChunk = 256<<10 , $/;"	e	enum:__anon122	file:
PersistentAllocMaxBlock	runtime\zmalloc_windows_amd64.c	/^PersistentAllocMaxBlock = 64<<10 , $/;"	e	enum:__anon122	file:
SetFinalizer	runtime\zmalloc_windows_amd64.c	/^runtime·SetFinalizer(Eface obj, Eface finalizer)$/;"	f
allocmcache	runtime\zmalloc_windows_amd64.c	/^runtime·allocmcache ( void ) $/;"	f
checking	runtime\zmalloc_windows_amd64.c	/^int32 runtime·checking; $/;"	v
cnew	runtime\zmalloc_windows_amd64.c	/^cnew ( Type *typ , intgo n , int32 objtyp ) $/;"	f	file:
cnew	runtime\zmalloc_windows_amd64.c	/^runtime·cnew ( Type *typ ) $/;"	f
cnewarray	runtime\zmalloc_windows_amd64.c	/^runtime·cnewarray ( Type *typ , intgo n ) $/;"	f
end	runtime\zmalloc_windows_amd64.c	/^byte* end; $/;"	m	struct:__anon121	file:
free	runtime\zmalloc_windows_amd64.c	/^runtime·free ( void *v ) $/;"	f
freemcache	runtime\zmalloc_windows_amd64.c	/^runtime·freemcache ( MCache *c ) $/;"	f
gettype	runtime\zmalloc_windows_amd64.c	/^runtime·gettype ( void *v ) $/;"	f
mal	runtime\zmalloc_windows_amd64.c	/^runtime·mal ( uintptr n ) $/;"	f
malloc	runtime\zmalloc_windows_amd64.c	/^runtime·malloc ( uintptr size ) $/;"	f
mallocgc	runtime\zmalloc_windows_amd64.c	/^runtime·mallocgc ( uintptr size , uintptr typ , uint32 flag ) $/;"	f
mallocinit	runtime\zmalloc_windows_amd64.c	/^runtime·mallocinit ( void ) $/;"	f
mheap	runtime\zmalloc_windows_amd64.c	/^MHeap runtime·mheap; $/;"	v
mlookup	runtime\zmalloc_windows_amd64.c	/^runtime·mlookup ( void *v , byte **base , uintptr *size , MSpan **sp ) $/;"	f
new	runtime\zmalloc_windows_amd64.c	/^runtime·new ( Type *typ , uint8 *ret ) $/;"	f
persistent	runtime\zmalloc_windows_amd64.c	/^} persistent; $/;"	v	typeref:struct:__anon121	file:
persistentalloc	runtime\zmalloc_windows_amd64.c	/^runtime·persistentalloc ( uintptr size , uintptr align , uint64 *stat ) $/;"	f
pos	runtime\zmalloc_windows_amd64.c	/^byte* pos; $/;"	m	struct:__anon121	file:
purgecachedstats	runtime\zmalloc_windows_amd64.c	/^runtime·purgecachedstats ( MCache *c ) $/;"	f
settype_flush	runtime\zmalloc_windows_amd64.c	/^runtime·settype_flush ( M *mp ) $/;"	f
settype_lock	runtime\zmalloc_windows_amd64.c	/^static Lock settype_lock; $/;"	v	file:
sizeof_C_MStats	runtime\zmalloc_windows_amd64.c	/^uintptr runtime·sizeof_C_MStats = sizeof ( MStats ) ; $/;"	v
AddrDenseBits	runtime\zmprof_windows_amd64.c	/^AddrDenseBits = 8 , $/;"	e	enum:__anon128	file:
AddrEntry	runtime\zmprof_windows_amd64.c	/^struct AddrEntry $/;"	s	file:
AddrEntry	runtime\zmprof_windows_amd64.c	/^typedef struct AddrEntry AddrEntry; $/;"	t	typeref:struct:AddrEntry	file:
AddrHash	runtime\zmprof_windows_amd64.c	/^struct AddrHash $/;"	s	file:
AddrHash	runtime\zmprof_windows_amd64.c	/^typedef struct AddrHash AddrHash; $/;"	t	typeref:struct:AddrHash	file:
AddrHashBits	runtime\zmprof_windows_amd64.c	/^AddrHashBits = 12 , $/;"	e	enum:__anon128	file:
AddrHashShift	runtime\zmprof_windows_amd64.c	/^AddrHashShift = 20 , $/;"	e	enum:__anon128	file:
BProf	runtime\zmprof_windows_amd64.c	/^enum { MProf , BProf } ; $/;"	e	enum:__anon123	file:
BRecord	runtime\zmprof_windows_amd64.c	/^struct BRecord { $/;"	s	file:
BRecord	runtime\zmprof_windows_amd64.c	/^typedef struct BRecord BRecord; $/;"	t	typeref:struct:BRecord	file:
BlockProfile	runtime\zmprof_windows_amd64.c	/^runtime·BlockProfile(Slice p, intgo n, bool ok)$/;"	f
BuckHashSize	runtime\zmprof_windows_amd64.c	/^BuckHashSize = 179999 , $/;"	e	enum:__anon127	file:
Bucket	runtime\zmprof_windows_amd64.c	/^struct Bucket $/;"	s	file:
Bucket	runtime\zmprof_windows_amd64.c	/^typedef struct Bucket Bucket; $/;"	t	typeref:struct:Bucket	file:
GoroutineProfile	runtime\zmprof_windows_amd64.c	/^runtime·GoroutineProfile(Slice b, intgo n, bool ok)$/;"	f
HashMultiplier	runtime\zmprof_windows_amd64.c	/^HashMultiplier = 2654435769U $/;"	e	enum:__anon129	file:
MProf	runtime\zmprof_windows_amd64.c	/^enum { MProf , BProf } ; $/;"	e	enum:__anon123	file:
MProf_Free	runtime\zmprof_windows_amd64.c	/^runtime·MProf_Free ( void *p , uintptr size ) $/;"	f
MProf_GC	runtime\zmprof_windows_amd64.c	/^MProf_GC ( void ) $/;"	f	file:
MProf_GC	runtime\zmprof_windows_amd64.c	/^runtime·MProf_GC ( void ) $/;"	f
MProf_Malloc	runtime\zmprof_windows_amd64.c	/^runtime·MProf_Malloc ( void *p , uintptr size ) $/;"	f
MemProfile	runtime\zmprof_windows_amd64.c	/^runtime·MemProfile(Slice p, bool include_inuse_zero, uint8, uint16, uint32, intgo n, bool ok)$/;"	f
Record	runtime\zmprof_windows_amd64.c	/^struct Record { $/;"	s	file:
Record	runtime\zmprof_windows_amd64.c	/^typedef struct Record Record; $/;"	t	typeref:struct:Record	file:
SetBlockProfileRate	runtime\zmprof_windows_amd64.c	/^runtime·SetBlockProfileRate ( intgo rate ) $/;"	f
Stack	runtime\zmprof_windows_amd64.c	/^runtime·Stack(Slice b, bool all, uint8, uint16, uint32, intgo n)$/;"	f
TRecord	runtime\zmprof_windows_amd64.c	/^struct TRecord { $/;"	s	file:
TRecord	runtime\zmprof_windows_amd64.c	/^typedef struct TRecord TRecord; $/;"	t	typeref:struct:TRecord	file:
ThreadCreateProfile	runtime\zmprof_windows_amd64.c	/^runtime·ThreadCreateProfile(Slice p, intgo n, bool ok)$/;"	f
addr	runtime\zmprof_windows_amd64.c	/^uint32 addr; $/;"	m	struct:AddrEntry	file:
addr	runtime\zmprof_windows_amd64.c	/^uintptr addr; $/;"	m	struct:AddrHash	file:
addrfree	runtime\zmprof_windows_amd64.c	/^static AddrEntry *addrfree; $/;"	v	file:
addrhash	runtime\zmprof_windows_amd64.c	/^static AddrHash **addrhash; $/;"	v	file:
addrmem	runtime\zmprof_windows_amd64.c	/^static uintptr addrmem; $/;"	v	file:
allnext	runtime\zmprof_windows_amd64.c	/^Bucket *allnext; $/;"	m	struct:Bucket	file:
alloc_bytes	runtime\zmprof_windows_amd64.c	/^int64 alloc_bytes , free_bytes; $/;"	m	struct:Record	file:
alloc_bytes	runtime\zmprof_windows_amd64.c	/^uintptr alloc_bytes; $/;"	m	struct:Bucket::__anon124::__anon125	file:
alloc_objects	runtime\zmprof_windows_amd64.c	/^int64 alloc_objects , free_objects; $/;"	m	struct:Record	file:
allocs	runtime\zmprof_windows_amd64.c	/^uintptr allocs; $/;"	m	struct:Bucket::__anon124::__anon125	file:
b	runtime\zmprof_windows_amd64.c	/^Bucket *b; $/;"	m	struct:AddrEntry	file:
bbuckets	runtime\zmprof_windows_amd64.c	/^static Bucket *bbuckets; $/;"	v	file:
blockevent	runtime\zmprof_windows_amd64.c	/^runtime·blockevent ( int64 cycles , int32 skip ) $/;"	f
blockprofilerate	runtime\zmprof_windows_amd64.c	/^int64 runtime·blockprofilerate; $/;"	v
bucketmem	runtime\zmprof_windows_amd64.c	/^static uintptr bucketmem; $/;"	v	file:
buckhash	runtime\zmprof_windows_amd64.c	/^static Bucket **buckhash; $/;"	v	file:
count	runtime\zmprof_windows_amd64.c	/^int64 count; $/;"	m	struct:BRecord	file:
count	runtime\zmprof_windows_amd64.c	/^int64 count; $/;"	m	struct:Bucket::__anon124::__anon126	file:
cycles	runtime\zmprof_windows_amd64.c	/^int64 cycles; $/;"	m	struct:BRecord	file:
cycles	runtime\zmprof_windows_amd64.c	/^int64 cycles; $/;"	m	struct:Bucket::__anon124::__anon126	file:
dense	runtime\zmprof_windows_amd64.c	/^AddrEntry *dense[1<<AddrDenseBits]; $/;"	m	struct:AddrHash	file:
free_bytes	runtime\zmprof_windows_amd64.c	/^int64 alloc_bytes , free_bytes; $/;"	m	struct:Record	file:
free_bytes	runtime\zmprof_windows_amd64.c	/^uintptr free_bytes; $/;"	m	struct:Bucket::__anon124::__anon125	file:
free_objects	runtime\zmprof_windows_amd64.c	/^int64 alloc_objects , free_objects; $/;"	m	struct:Record	file:
frees	runtime\zmprof_windows_amd64.c	/^uintptr frees; $/;"	m	struct:Bucket::__anon124::__anon125	file:
getaddrbucket	runtime\zmprof_windows_amd64.c	/^getaddrbucket ( uintptr addr ) $/;"	f	file:
hash	runtime\zmprof_windows_amd64.c	/^uintptr hash; $/;"	m	struct:Bucket	file:
mbuckets	runtime\zmprof_windows_amd64.c	/^static Bucket *mbuckets; $/;"	v	file:
mprofinit	runtime\zmprof_windows_amd64.c	/^runtime·mprofinit ( void ) $/;"	f
next	runtime\zmprof_windows_amd64.c	/^AddrEntry *next; $/;"	m	struct:AddrEntry	file:
next	runtime\zmprof_windows_amd64.c	/^AddrHash *next; $/;"	m	struct:AddrHash	file:
next	runtime\zmprof_windows_amd64.c	/^Bucket *next; $/;"	m	struct:Bucket	file:
nstk	runtime\zmprof_windows_amd64.c	/^uintptr nstk; $/;"	m	struct:Bucket	file:
proflock	runtime\zmprof_windows_amd64.c	/^static Lock proflock; $/;"	v	file:
recent_alloc_bytes	runtime\zmprof_windows_amd64.c	/^uintptr recent_alloc_bytes; $/;"	m	struct:Bucket::__anon124::__anon125	file:
recent_allocs	runtime\zmprof_windows_amd64.c	/^uintptr recent_allocs; $/;"	m	struct:Bucket::__anon124::__anon125	file:
recent_free_bytes	runtime\zmprof_windows_amd64.c	/^uintptr recent_free_bytes; $/;"	m	struct:Bucket::__anon124::__anon125	file:
recent_frees	runtime\zmprof_windows_amd64.c	/^uintptr recent_frees; $/;"	m	struct:Bucket::__anon124::__anon125	file:
record	runtime\zmprof_windows_amd64.c	/^record ( Record *r , Bucket *b ) $/;"	f	file:
saveg	runtime\zmprof_windows_amd64.c	/^saveg ( uintptr pc , uintptr sp , G *gp , TRecord *r ) $/;"	f	file:
setaddrbucket	runtime\zmprof_windows_amd64.c	/^setaddrbucket ( uintptr addr , Bucket *b ) $/;"	f	file:
stk	runtime\zmprof_windows_amd64.c	/^uintptr stk[1]; $/;"	m	struct:Bucket	file:
stk	runtime\zmprof_windows_amd64.c	/^uintptr stk[32]; $/;"	m	struct:BRecord	file:
stk	runtime\zmprof_windows_amd64.c	/^uintptr stk[32]; $/;"	m	struct:Record	file:
stk	runtime\zmprof_windows_amd64.c	/^uintptr stk[32]; $/;"	m	struct:TRecord	file:
stkbucket	runtime\zmprof_windows_amd64.c	/^stkbucket ( int32 typ , uintptr *stk , int32 nstk , bool alloc ) $/;"	f	file:
typ	runtime\zmprof_windows_amd64.c	/^int32 typ; $/;"	m	struct:Bucket	file:
Lock	runtime\znetpoll_windows_amd64.c	/^Lock; $/;"	m	struct:PollDesc	file:
Lock	runtime\znetpoll_windows_amd64.c	/^Lock; $/;"	m	struct:__anon130	file:
PollDesc	runtime\znetpoll_windows_amd64.c	/^struct PollDesc $/;"	s	file:
READY	runtime\znetpoll_windows_amd64.c	8;"	d	file:
allocPollDesc	runtime\znetpoll_windows_amd64.c	/^allocPollDesc ( void ) $/;"	f	file:
checkerr	runtime\znetpoll_windows_amd64.c	/^checkerr ( PollDesc *pd , int32 mode ) $/;"	f	file:
closing	runtime\znetpoll_windows_amd64.c	/^bool closing; $/;"	m	struct:PollDesc	file:
deadline	runtime\znetpoll_windows_amd64.c	/^deadline ( int64 now , Eface arg ) $/;"	f	file:
deadlineFn	runtime\znetpoll_windows_amd64.c	/^static FuncVal deadlineFn = { ( void ( * ) ( void ) ) deadline } ; $/;"	v	file:
deadlineimpl	runtime\znetpoll_windows_amd64.c	/^deadlineimpl ( int64 now , Eface arg , bool read , bool write ) $/;"	f	file:
fd	runtime\znetpoll_windows_amd64.c	/^uintptr fd; $/;"	m	struct:PollDesc	file:
first	runtime\znetpoll_windows_amd64.c	/^PollDesc* first; $/;"	m	struct:__anon130	file:
link	runtime\znetpoll_windows_amd64.c	/^PollDesc* link; $/;"	m	struct:PollDesc	file:
netpollblock	runtime\znetpoll_windows_amd64.c	/^netpollblock ( PollDesc *pd , int32 mode ) $/;"	f	file:
netpollfd	runtime\znetpoll_windows_amd64.c	/^runtime·netpollfd ( PollDesc *pd ) $/;"	f
netpollready	runtime\znetpoll_windows_amd64.c	/^runtime·netpollready ( G **gpp , PollDesc *pd , int32 mode ) $/;"	f
netpollunblock	runtime\znetpoll_windows_amd64.c	/^netpollunblock ( PollDesc *pd , int32 mode , bool ioready ) $/;"	f	file:
pollcache	runtime\znetpoll_windows_amd64.c	/^} pollcache; $/;"	v	typeref:struct:__anon130	file:
rd	runtime\znetpoll_windows_amd64.c	/^int64 rd; $/;"	m	struct:PollDesc	file:
readDeadline	runtime\znetpoll_windows_amd64.c	/^readDeadline ( int64 now , Eface arg ) $/;"	f	file:
readDeadlineFn	runtime\znetpoll_windows_amd64.c	/^static FuncVal readDeadlineFn = { ( void ( * ) ( void ) ) readDeadline } ; $/;"	v	file:
rg	runtime\znetpoll_windows_amd64.c	/^G* rg; $/;"	m	struct:PollDesc	file:
rt	runtime\znetpoll_windows_amd64.c	/^Timer rt; $/;"	m	struct:PollDesc	file:
runtime_pollClose	runtime\znetpoll_windows_amd64.c	/^net·runtime_pollClose(PollDesc* pd)$/;"	f
runtime_pollOpen	runtime\znetpoll_windows_amd64.c	/^net·runtime_pollOpen(uintptr fd, PollDesc* pd, intgo errno)$/;"	f
runtime_pollReset	runtime\znetpoll_windows_amd64.c	/^net·runtime_pollReset(PollDesc* pd, intgo mode, intgo err)$/;"	f
runtime_pollServerInit	runtime\znetpoll_windows_amd64.c	/^net·runtime_pollServerInit()$/;"	f
runtime_pollSetDeadline	runtime\znetpoll_windows_amd64.c	/^net·runtime_pollSetDeadline(PollDesc* pd, int64 d, intgo mode)$/;"	f
runtime_pollUnblock	runtime\znetpoll_windows_amd64.c	/^net·runtime_pollUnblock(PollDesc* pd)$/;"	f
runtime_pollWait	runtime\znetpoll_windows_amd64.c	/^net·runtime_pollWait(PollDesc* pd, intgo mode, intgo err)$/;"	f
runtime_pollWaitCanceled	runtime\znetpoll_windows_amd64.c	/^net·runtime_pollWaitCanceled(PollDesc* pd, intgo mode)$/;"	f
seq	runtime\znetpoll_windows_amd64.c	/^uintptr seq; $/;"	m	struct:PollDesc	file:
wd	runtime\znetpoll_windows_amd64.c	/^int64 wd; $/;"	m	struct:PollDesc	file:
wg	runtime\znetpoll_windows_amd64.c	/^G* wg; $/;"	m	struct:PollDesc	file:
writeDeadline	runtime\znetpoll_windows_amd64.c	/^writeDeadline ( int64 now , Eface arg ) $/;"	f	file:
writeDeadlineFn	runtime\znetpoll_windows_amd64.c	/^static FuncVal writeDeadlineFn = { ( void ( * ) ( void ) ) writeDeadline } ; $/;"	v	file:
wt	runtime\znetpoll_windows_amd64.c	/^Timer wt; $/;"	m	struct:PollDesc	file:
GOMAXPROCS	runtime\zruntime1_windows_amd64.c	/^runtime·GOMAXPROCS(intgo n, intgo ret)$/;"	f
NumCPU	runtime\zruntime1_windows_amd64.c	/^runtime·NumCPU(intgo ret)$/;"	f
Lock	runtime\zsema_windows_amd64.c	/^Lock; $/;"	m	struct:SemaRoot	file:
Lock	runtime\zsema_windows_amd64.c	/^Lock; $/;"	m	struct:SyncSema	file:
SEMTABLESZ	runtime\zsema_windows_amd64.c	30;"	d	file:
SemaRoot	runtime\zsema_windows_amd64.c	/^SemaRoot; $/;"	m	struct:semtable	file:
SemaRoot	runtime\zsema_windows_amd64.c	/^struct SemaRoot $/;"	s	file:
SemaRoot	runtime\zsema_windows_amd64.c	/^typedef struct SemaRoot SemaRoot; $/;"	t	typeref:struct:SemaRoot	file:
SemaWaiter	runtime\zsema_windows_amd64.c	/^struct SemaWaiter $/;"	s	file:
SemaWaiter	runtime\zsema_windows_amd64.c	/^typedef struct SemaWaiter SemaWaiter; $/;"	t	typeref:struct:SemaWaiter	file:
SyncSema	runtime\zsema_windows_amd64.c	/^struct SyncSema $/;"	s	file:
SyncSema	runtime\zsema_windows_amd64.c	/^typedef struct SyncSema SyncSema; $/;"	t	typeref:struct:SyncSema	file:
addr	runtime\zsema_windows_amd64.c	/^uint32 volatile* addr; $/;"	m	struct:SemaWaiter	file:
cansemacquire	runtime\zsema_windows_amd64.c	/^cansemacquire ( uint32 *addr ) $/;"	f	file:
g	runtime\zsema_windows_amd64.c	/^G* g; $/;"	m	struct:SemaWaiter	file:
head	runtime\zsema_windows_amd64.c	/^SemaWaiter* head; $/;"	m	struct:SemaRoot	file:
head	runtime\zsema_windows_amd64.c	/^SemaWaiter* head; $/;"	m	struct:SyncSema	file:
next	runtime\zsema_windows_amd64.c	/^SemaWaiter* next; $/;"	m	struct:SemaWaiter	file:
nrelease	runtime\zsema_windows_amd64.c	/^int32 nrelease; $/;"	m	struct:SemaWaiter	file:
nwait	runtime\zsema_windows_amd64.c	/^uint32 volatile nwait; $/;"	m	struct:SemaRoot	file:
pad	runtime\zsema_windows_amd64.c	/^uint8 pad[CacheLineSize-sizeof ( SemaRoot ) ]; $/;"	m	struct:semtable	file:
prev	runtime\zsema_windows_amd64.c	/^SemaWaiter* prev; $/;"	m	struct:SemaWaiter	file:
releasetime	runtime\zsema_windows_amd64.c	/^int64 releasetime; $/;"	m	struct:SemaWaiter	file:
runtime_Semacquire	runtime\zsema_windows_amd64.c	/^sync·runtime_Semacquire(uint32* addr)$/;"	f
runtime_Semacquire	runtime\zsema_windows_amd64.c	/^void net·runtime_Semacquire ( uint32 *addr ) $/;"	f
runtime_Semrelease	runtime\zsema_windows_amd64.c	/^sync·runtime_Semrelease(uint32* addr)$/;"	f
runtime_Semrelease	runtime\zsema_windows_amd64.c	/^void net·runtime_Semrelease ( uint32 *addr ) $/;"	f
runtime_Syncsemacquire	runtime\zsema_windows_amd64.c	/^sync·runtime_Syncsemacquire(SyncSema* s)$/;"	f
runtime_Syncsemcheck	runtime\zsema_windows_amd64.c	/^sync·runtime_Syncsemcheck(uintptr size)$/;"	f
runtime_Syncsemrelease	runtime\zsema_windows_amd64.c	/^sync·runtime_Syncsemrelease(SyncSema* s, uint32 n)$/;"	f
semacquire	runtime\zsema_windows_amd64.c	/^runtime·semacquire ( uint32 volatile *addr , bool profile ) $/;"	f
semdequeue	runtime\zsema_windows_amd64.c	/^semdequeue ( SemaRoot *root , SemaWaiter *s ) $/;"	f	file:
semqueue	runtime\zsema_windows_amd64.c	/^semqueue ( SemaRoot *root , uint32 volatile *addr , SemaWaiter *s ) $/;"	f	file:
semrelease	runtime\zsema_windows_amd64.c	/^runtime·semrelease ( uint32 volatile *addr ) $/;"	f
semroot	runtime\zsema_windows_amd64.c	/^semroot ( uint32 *addr ) $/;"	f	file:
semtable	runtime\zsema_windows_amd64.c	/^static struct semtable semtable[SEMTABLESZ]; $/;"	v	typeref:struct:semtable	file:
semtable	runtime\zsema_windows_amd64.c	/^struct semtable $/;"	s	file:
tail	runtime\zsema_windows_amd64.c	/^SemaWaiter* tail; $/;"	m	struct:SemaRoot	file:
tail	runtime\zsema_windows_amd64.c	/^SemaWaiter* tail; $/;"	m	struct:SyncSema	file:
HASSIGNAL	runtime\zsigqueue_windows_amd64.c	/^HASSIGNAL = 2 , $/;"	e	enum:__anon132	file:
HASWAITER	runtime\zsigqueue_windows_amd64.c	/^HASWAITER = 1 , $/;"	e	enum:__anon132	file:
Note	runtime\zsigqueue_windows_amd64.c	/^Note; $/;"	m	struct:__anon131	file:
badsignal	runtime\zsigqueue_windows_amd64.c	/^runtime·badsignal ( uintptr sig ) $/;"	f
inuse	runtime\zsigqueue_windows_amd64.c	/^bool inuse; $/;"	m	struct:__anon131	file:
mask	runtime\zsigqueue_windows_amd64.c	/^uint32 mask[ ( NSIG+31 ) \/32]; $/;"	m	struct:__anon131	file:
sig	runtime\zsigqueue_windows_amd64.c	/^} sig; $/;"	v	typeref:struct:__anon131	file:
signal_disable	runtime\zsigqueue_windows_amd64.c	/^runtime·signal_disable(uint32 s)$/;"	f
signal_enable	runtime\zsigqueue_windows_amd64.c	/^runtime·signal_enable(uint32 s)$/;"	f
signal_recv	runtime\zsigqueue_windows_amd64.c	/^runtime·signal_recv(uint32 m)$/;"	f
sigsend	runtime\zsigqueue_windows_amd64.c	/^runtime·sigsend ( int32 s ) $/;"	f
state	runtime\zsigqueue_windows_amd64.c	/^uint32 state; $/;"	m	struct:__anon131	file:
wanted	runtime\zsigqueue_windows_amd64.c	/^uint32 wanted[ ( NSIG+31 ) \/32]; $/;"	m	struct:__anon131	file:
Runeself	runtime\zstring_windows_amd64.c	/^Runeself = 0x80 , $/;"	e	enum:__anon133	file:
catstring	runtime\zstring_windows_amd64.c	/^runtime·catstring ( String s1 , String s2 ) $/;"	f
concatstring	runtime\zstring_windows_amd64.c	/^concatstring ( intgo n , String *s ) $/;"	f	file:
concatstring	runtime\zstring_windows_amd64.c	/^runtime·concatstring ( intgo n , String s1 , ... ) $/;"	f
cstringToGo	runtime\zstring_windows_amd64.c	/^runtime·cstringToGo ( byte *str , String s ) $/;"	f
emptystring	runtime\zstring_windows_amd64.c	/^String runtime·emptystring; $/;"	v
eqstring	runtime\zstring_windows_amd64.c	/^runtime·eqstring(String s1, String s2, bool v)$/;"	f
findnull	runtime\zstring_windows_amd64.c	/^runtime·findnull ( byte *s ) $/;"	f
findnullw	runtime\zstring_windows_amd64.c	/^runtime·findnullw ( uint16 *s ) $/;"	f
gobytes	runtime\zstring_windows_amd64.c	/^runtime·gobytes ( byte *p , intgo n ) $/;"	f
gostring	runtime\zstring_windows_amd64.c	/^runtime·gostring ( byte *str ) $/;"	f
gostringn	runtime\zstring_windows_amd64.c	/^runtime·gostringn ( byte *str , intgo l ) $/;"	f
gostringnocopy	runtime\zstring_windows_amd64.c	/^runtime·gostringnocopy ( byte *str ) $/;"	f
gostringsize	runtime\zstring_windows_amd64.c	/^gostringsize ( intgo l ) $/;"	f	file:
gostringw	runtime\zstring_windows_amd64.c	/^runtime·gostringw ( uint16 *str ) $/;"	f
intstring	runtime\zstring_windows_amd64.c	/^runtime·intstring(int64 v, String s)$/;"	f
maxstring	runtime\zstring_windows_amd64.c	/^uintptr runtime·maxstring = 256; $/;"	v
slicebytetostring	runtime\zstring_windows_amd64.c	/^runtime·slicebytetostring(Slice b, String s)$/;"	f
slicerunetostring	runtime\zstring_windows_amd64.c	/^runtime·slicerunetostring(Slice b, String s)$/;"	f
strcmp	runtime\zstring_windows_amd64.c	/^runtime·strcmp ( byte *s1 , byte *s2 ) $/;"	f
stringiter	runtime\zstring_windows_amd64.c	/^runtime·stringiter(String s, intgo k, intgo retk)$/;"	f
stringiter2	runtime\zstring_windows_amd64.c	/^runtime·stringiter2(String s, intgo k, intgo retk, int32 retv)$/;"	f
stringtoslicebyte	runtime\zstring_windows_amd64.c	/^runtime·stringtoslicebyte(String s, Slice b)$/;"	f
stringtoslicerune	runtime\zstring_windows_amd64.c	/^runtime·stringtoslicerune(String s, Slice b)$/;"	f
strstr	runtime\zstring_windows_amd64.c	/^runtime·strstr ( byte *s1 , byte *s2 ) $/;"	f
TEXT	runtime\zsys_windows_amd64.s	/^TEXT runtime·callbackasm(SB),7,$0$/;"	l
NewCallback	runtime\zsyscall_windows_windows_amd64.c	/^syscall·NewCallback(Eface fn, uintptr code)$/;"	f
Syscall	runtime\zsyscall_windows_windows_amd64.c	/^syscall·Syscall(uintptr fn, uintptr nargs, uintptr a1, uintptr a2, uintptr a3, uintptr r1, uintptr r2, uintptr err)$/;"	f
Syscall12	runtime\zsyscall_windows_windows_amd64.c	/^syscall·Syscall12(uintptr fn, uintptr nargs, uintptr a1, uintptr a2, uintptr a3, uintptr a4, uintptr a5, uintptr a6, uintptr a7, uintptr a8, uintptr a9, uintptr a10, uintptr a11, uintptr a12, uintptr r1, uintptr r2, uintptr err)$/;"	f
Syscall15	runtime\zsyscall_windows_windows_amd64.c	/^syscall·Syscall15(uintptr fn, uintptr nargs, uintptr a1, uintptr a2, uintptr a3, uintptr a4, uintptr a5, uintptr a6, uintptr a7, uintptr a8, uintptr a9, uintptr a10, uintptr a11, uintptr a12, uintptr a13, uintptr a14, uintptr a15, uintptr r1, uintptr r2, uintptr err)$/;"	f
Syscall6	runtime\zsyscall_windows_windows_amd64.c	/^syscall·Syscall6(uintptr fn, uintptr nargs, uintptr a1, uintptr a2, uintptr a3, uintptr a4, uintptr a5, uintptr a6, uintptr r1, uintptr r2, uintptr err)$/;"	f
Syscall9	runtime\zsyscall_windows_windows_amd64.c	/^syscall·Syscall9(uintptr fn, uintptr nargs, uintptr a1, uintptr a2, uintptr a3, uintptr a4, uintptr a5, uintptr a6, uintptr a7, uintptr a8, uintptr a9, uintptr r1, uintptr r2, uintptr err)$/;"	f
getprocaddress	runtime\zsyscall_windows_windows_amd64.c	/^syscall·getprocaddress(uintptr handle, uint8* procname, uintptr proc, uintptr err)$/;"	f
loadlibrary	runtime\zsyscall_windows_windows_amd64.c	/^syscall·loadlibrary(uint16* filename, uintptr handle, uintptr err)$/;"	f
Sleep	runtime\ztime_windows_amd64.c	/^time·Sleep(int64 ns)$/;"	f
addtimer	runtime\ztime_windows_amd64.c	/^addtimer ( Timer *t ) $/;"	f	file:
addtimer	runtime\ztime_windows_amd64.c	/^runtime·addtimer ( Timer *t ) $/;"	f
debug	runtime\ztime_windows_amd64.c	/^debug = 0 , $/;"	e	enum:__anon134	file:
deltimer	runtime\ztime_windows_amd64.c	/^runtime·deltimer ( Timer *t ) $/;"	f
dumptimers	runtime\ztime_windows_amd64.c	/^dumptimers ( int8 *msg ) $/;"	f	file:
ready	runtime\ztime_windows_amd64.c	/^ready ( int64 now , Eface e ) $/;"	f	file:
readyv	runtime\ztime_windows_amd64.c	/^static FuncVal readyv = { ( void ( * ) ( void ) ) ready } ; $/;"	v	file:
siftdown	runtime\ztime_windows_amd64.c	/^siftdown ( int32 i ) $/;"	f	file:
siftup	runtime\ztime_windows_amd64.c	/^siftup ( int32 i ) $/;"	f	file:
startTimer	runtime\ztime_windows_amd64.c	/^time·startTimer(Timer* t)$/;"	f
stopTimer	runtime\ztime_windows_amd64.c	/^time·stopTimer(Timer* t, bool stopped)$/;"	f
timerproc	runtime\ztime_windows_amd64.c	/^timerproc ( void ) $/;"	f	file:
timerprocv	runtime\ztime_windows_amd64.c	/^static FuncVal timerprocv = { timerproc } ; $/;"	v	file:
timers	runtime\ztime_windows_amd64.c	/^static Timers timers; $/;"	v	file:
tsleep	runtime\ztime_windows_amd64.c	/^runtime·tsleep ( int64 ns , int8 *reason ) $/;"	f
TEXT	sync\atomic\asm_386.s	/^TEXT ·AddInt32(SB),NOSPLIT,$0-12$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·AddInt64(SB),NOSPLIT,$0-20$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·AddUint32(SB),NOSPLIT,$0-12$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·AddUint64(SB),NOSPLIT,$0-20$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·AddUintptr(SB),NOSPLIT,$0-12$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·CompareAndSwapInt32(SB),NOSPLIT,$0-13$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·CompareAndSwapInt64(SB),NOSPLIT,$0-21$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·CompareAndSwapPointer(SB),NOSPLIT,$0-13$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·CompareAndSwapUint32(SB),NOSPLIT,$0-13$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·CompareAndSwapUint64(SB),NOSPLIT,$0-21$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·CompareAndSwapUintptr(SB),NOSPLIT,$0-13$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·LoadInt32(SB),NOSPLIT,$0-8$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·LoadInt64(SB),NOSPLIT,$0-16$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·LoadPointer(SB),NOSPLIT,$0-8$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·LoadUint32(SB),NOSPLIT,$0-8$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·LoadUint64(SB),NOSPLIT,$0-16$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·LoadUintptr(SB),NOSPLIT,$0-8$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·StoreInt32(SB),NOSPLIT,$0-8$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·StoreInt64(SB),NOSPLIT,$0-16$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·StorePointer(SB),NOSPLIT,$0-8$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·StoreUint32(SB),NOSPLIT,$0-8$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·StoreUint64(SB),NOSPLIT,$0-16$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·StoreUintptr(SB),NOSPLIT,$0-8$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·SwapInt32(SB),NOSPLIT,$0-12$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·SwapInt64(SB),NOSPLIT,$0-20$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·SwapPointer(SB),NOSPLIT,$0-12$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·SwapUint32(SB),NOSPLIT,$0-12$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·SwapUint64(SB),NOSPLIT,$0-20$/;"	l
TEXT	sync\atomic\asm_386.s	/^TEXT ·SwapUintptr(SB),NOSPLIT,$0-12$/;"	l
addloop	sync\atomic\asm_386.s	/^addloop:$/;"	l
swaploop	sync\atomic\asm_386.s	/^swaploop:$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·AddInt32(SB),NOSPLIT,$0-20$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·AddInt64(SB),NOSPLIT,$0-24$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·AddUint32(SB),NOSPLIT,$0-20$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·AddUint64(SB),NOSPLIT,$0-24$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·AddUintptr(SB),NOSPLIT,$0-24$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·CompareAndSwapInt32(SB),NOSPLIT,$0-17$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·CompareAndSwapInt64(SB),NOSPLIT,$0-25$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·CompareAndSwapPointer(SB),NOSPLIT,$0-25$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·CompareAndSwapUint32(SB),NOSPLIT,$0-17$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·CompareAndSwapUint64(SB),NOSPLIT,$0-25$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·CompareAndSwapUintptr(SB),NOSPLIT,$0-25$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·LoadInt32(SB),NOSPLIT,$0-12$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·LoadInt64(SB),NOSPLIT,$0-16$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·LoadPointer(SB),NOSPLIT,$0-16$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·LoadUint32(SB),NOSPLIT,$0-12$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·LoadUint64(SB),NOSPLIT,$0-16$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·LoadUintptr(SB),NOSPLIT,$0-16$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·StoreInt32(SB),NOSPLIT,$0-12$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·StoreInt64(SB),NOSPLIT,$0-16$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·StorePointer(SB),NOSPLIT,$0-16$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·StoreUint32(SB),NOSPLIT,$0-12$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·StoreUint64(SB),NOSPLIT,$0-16$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·StoreUintptr(SB),NOSPLIT,$0-16$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·SwapInt32(SB),NOSPLIT,$0-20$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·SwapInt64(SB),NOSPLIT,$0-24$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·SwapPointer(SB),NOSPLIT,$0-24$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·SwapUint32(SB),NOSPLIT,$0-20$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·SwapUint64(SB),NOSPLIT,$0-24$/;"	l
TEXT	sync\atomic\asm_amd64.s	/^TEXT ·SwapUintptr(SB),NOSPLIT,$0-24$/;"	l
GLOBL	sync\atomic\asm_arm.s	/^GLOBL ok64<>(SB), $4$/;"	l
TEXT	sync\atomic\asm_arm.s	/^TEXT	check64<>(SB),NOSPLIT,$16-0$/;"	l
TEXT	sync\atomic\asm_arm.s	/^TEXT	fastCheck64<>(SB),NOSPLIT,$-4$/;"	l
TEXT	sync\atomic\asm_arm.s	/^TEXT slowCheck64<>(SB),NOSPLIT,$0-0$/;"	l
TEXT	sync\atomic\asm_arm.s	/^TEXT ·armAddUint32(SB),NOSPLIT,$0-12$/;"	l
TEXT	sync\atomic\asm_arm.s	/^TEXT ·armAddUint64(SB),NOSPLIT,$0-20$/;"	l
TEXT	sync\atomic\asm_arm.s	/^TEXT ·armCompareAndSwapUint32(SB),NOSPLIT,$0-13$/;"	l
TEXT	sync\atomic\asm_arm.s	/^TEXT ·armCompareAndSwapUint64(SB),NOSPLIT,$0-21$/;"	l
TEXT	sync\atomic\asm_arm.s	/^TEXT ·armLoadUint64(SB),NOSPLIT,$0-12$/;"	l
TEXT	sync\atomic\asm_arm.s	/^TEXT ·armStoreUint64(SB),NOSPLIT,$0-12$/;"	l
TEXT	sync\atomic\asm_arm.s	/^TEXT ·armSwapUint32(SB),NOSPLIT,$0-12$/;"	l
TEXT	sync\atomic\asm_arm.s	/^TEXT ·armSwapUint64(SB),NOSPLIT,$0-20$/;"	l
add64loop	sync\atomic\asm_arm.s	/^add64loop:$/;"	l
addloop	sync\atomic\asm_arm.s	/^addloop:$/;"	l
cas64fail	sync\atomic\asm_arm.s	/^cas64fail:$/;"	l
cas64loop	sync\atomic\asm_arm.s	/^cas64loop:$/;"	l
casfail	sync\atomic\asm_arm.s	/^casfail:$/;"	l
casloop	sync\atomic\asm_arm.s	/^casloop:$/;"	l
load64loop	sync\atomic\asm_arm.s	/^load64loop:$/;"	l
loop	sync\atomic\asm_arm.s	/^loop:$/;"	l
ok	sync\atomic\asm_arm.s	/^ok:$/;"	l
store64loop	sync\atomic\asm_arm.s	/^store64loop:$/;"	l
swap64loop	sync\atomic\asm_arm.s	/^swap64loop:$/;"	l
swaploop	sync\atomic\asm_arm.s	/^swaploop:$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·AddInt32(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·AddInt64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·AddUint32(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·AddUint64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·AddUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·CompareAndSwapInt32(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·CompareAndSwapInt64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·CompareAndSwapPointer(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·CompareAndSwapUint32(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·CompareAndSwapUint64(SB),NOSPLIT,$-4$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·CompareAndSwapUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·LoadInt32(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·LoadInt64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·LoadPointer(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·LoadUint32(SB),NOSPLIT,$0-8$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·LoadUint64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·LoadUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·StoreInt32(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·StoreInt64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·StorePointer(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·StoreUint32(SB),NOSPLIT,$0-8$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·StoreUint64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·StoreUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·SwapInt32(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·SwapInt64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·SwapPointer(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·SwapUint32(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·SwapUint64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_freebsd_arm.s	/^TEXT ·SwapUintptr(SB),NOSPLIT,$0$/;"	l
load32loop	sync\atomic\asm_freebsd_arm.s	/^load32loop:$/;"	l
storeloop	sync\atomic\asm_freebsd_arm.s	/^storeloop:$/;"	l
GLOBL	sync\atomic\asm_linux_arm.s	/^GLOBL armCAS64(SB), $4$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT cas64<>(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT cas<>(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT kernelCAS64<>(SB),NOSPLIT,$0-21$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT setupAndCallCAS64<>(SB),NOSPLIT,$-4-21$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·AddInt32(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·AddInt64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·AddUint32(SB),NOSPLIT,$0-12$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·AddUint64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·AddUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·CompareAndSwapInt32(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·CompareAndSwapInt64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·CompareAndSwapPointer(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·CompareAndSwapUint32(SB),NOSPLIT,$0-13$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·CompareAndSwapUint64(SB),NOSPLIT,$-4-21$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·CompareAndSwapUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·LoadInt32(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·LoadInt64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·LoadPointer(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·LoadUint32(SB),NOSPLIT,$0-8$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·LoadUint64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·LoadUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·StoreInt32(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·StoreInt64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·StorePointer(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·StoreUint32(SB),NOSPLIT,$0-8$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·StoreUint64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·StoreUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·SwapInt32(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·SwapInt64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·SwapPointer(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·SwapUint32(SB),NOSPLIT,$0-12$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·SwapUint64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·SwapUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_linux_arm.s	/^TEXT ·generalCAS64(SB),NOSPLIT,$20-21$/;"	l
addloop1	sync\atomic\asm_linux_arm.s	/^addloop1:$/;"	l
casagain	sync\atomic\asm_linux_arm.s	/^casagain:$/;"	l
cascheck	sync\atomic\asm_linux_arm.s	/^cascheck:$/;"	l
casret	sync\atomic\asm_linux_arm.s	/^casret:$/;"	l
loadloop1	sync\atomic\asm_linux_arm.s	/^loadloop1:$/;"	l
storeloop1	sync\atomic\asm_linux_arm.s	/^storeloop1:$/;"	l
swaploop1	sync\atomic\asm_linux_arm.s	/^swaploop1:$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·AddInt32(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·AddInt64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·AddUint32(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·AddUint64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·AddUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·CompareAndSwapInt32(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·CompareAndSwapInt64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·CompareAndSwapPointer(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·CompareAndSwapUint32(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·CompareAndSwapUint64(SB),NOSPLIT,$-4$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·CompareAndSwapUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·LoadInt32(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·LoadInt64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·LoadPointer(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·LoadUint32(SB),NOSPLIT,$0-8$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·LoadUint64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·LoadUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·StoreInt32(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·StoreInt64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·StorePointer(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·StoreUint32(SB),NOSPLIT,$0-8$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·StoreUint64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·StoreUintptr(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·SwapInt32(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·SwapInt64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·SwapPointer(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·SwapUint32(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·SwapUint64(SB),NOSPLIT,$0$/;"	l
TEXT	sync\atomic\asm_netbsd_arm.s	/^TEXT ·SwapUintptr(SB),NOSPLIT,$0$/;"	l
load32loop	sync\atomic\asm_netbsd_arm.s	/^load32loop:$/;"	l
storeloop	sync\atomic\asm_netbsd_arm.s	/^storeloop:$/;"	l
TEXT	syscall\asm_darwin_386.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-44$/;"	l
TEXT	syscall\asm_darwin_386.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-32$/;"	l
TEXT	syscall\asm_darwin_386.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-44$/;"	l
TEXT	syscall\asm_darwin_386.s	/^TEXT	·Syscall9(SB),NOSPLIT,$0-56$/;"	l
TEXT	syscall\asm_darwin_386.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-32$/;"	l
ok	syscall\asm_darwin_386.s	/^ok:$/;"	l
ok1	syscall\asm_darwin_386.s	/^ok1:$/;"	l
ok2	syscall\asm_darwin_386.s	/^ok2:$/;"	l
ok6	syscall\asm_darwin_386.s	/^ok6:$/;"	l
ok9	syscall\asm_darwin_386.s	/^ok9:$/;"	l
TEXT	syscall\asm_darwin_amd64.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-88$/;"	l
TEXT	syscall\asm_darwin_amd64.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-64$/;"	l
TEXT	syscall\asm_darwin_amd64.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-88$/;"	l
TEXT	syscall\asm_darwin_amd64.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-64$/;"	l
ok	syscall\asm_darwin_amd64.s	/^ok:$/;"	l
ok1	syscall\asm_darwin_amd64.s	/^ok1:$/;"	l
ok2	syscall\asm_darwin_amd64.s	/^ok2:$/;"	l
ok6	syscall\asm_darwin_amd64.s	/^ok6:$/;"	l
TEXT	syscall\asm_dragonfly_386.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-44$/;"	l
TEXT	syscall\asm_dragonfly_386.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-32$/;"	l
TEXT	syscall\asm_dragonfly_386.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-44$/;"	l
TEXT	syscall\asm_dragonfly_386.s	/^TEXT	·Syscall9(SB),NOSPLIT,$0-56$/;"	l
TEXT	syscall\asm_dragonfly_386.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-32$/;"	l
ok	syscall\asm_dragonfly_386.s	/^ok:$/;"	l
ok1	syscall\asm_dragonfly_386.s	/^ok1:$/;"	l
ok2	syscall\asm_dragonfly_386.s	/^ok2:$/;"	l
ok6	syscall\asm_dragonfly_386.s	/^ok6:$/;"	l
ok9	syscall\asm_dragonfly_386.s	/^ok9:$/;"	l
TEXT	syscall\asm_dragonfly_amd64.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-88$/;"	l
TEXT	syscall\asm_dragonfly_amd64.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-64$/;"	l
TEXT	syscall\asm_dragonfly_amd64.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-88$/;"	l
TEXT	syscall\asm_dragonfly_amd64.s	/^TEXT	·Syscall9(SB),NOSPLIT,$0-112$/;"	l
TEXT	syscall\asm_dragonfly_amd64.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-64$/;"	l
ok	syscall\asm_dragonfly_amd64.s	/^ok:$/;"	l
ok1	syscall\asm_dragonfly_amd64.s	/^ok1:$/;"	l
ok2	syscall\asm_dragonfly_amd64.s	/^ok2:$/;"	l
ok6	syscall\asm_dragonfly_amd64.s	/^ok6:$/;"	l
ok9	syscall\asm_dragonfly_amd64.s	/^ok9:$/;"	l
TEXT	syscall\asm_freebsd_386.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-44$/;"	l
TEXT	syscall\asm_freebsd_386.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-32$/;"	l
TEXT	syscall\asm_freebsd_386.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-44$/;"	l
TEXT	syscall\asm_freebsd_386.s	/^TEXT	·Syscall9(SB),NOSPLIT,$0-56$/;"	l
TEXT	syscall\asm_freebsd_386.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-32$/;"	l
ok	syscall\asm_freebsd_386.s	/^ok:$/;"	l
ok1	syscall\asm_freebsd_386.s	/^ok1:$/;"	l
ok2	syscall\asm_freebsd_386.s	/^ok2:$/;"	l
ok6	syscall\asm_freebsd_386.s	/^ok6:$/;"	l
ok9	syscall\asm_freebsd_386.s	/^ok9:$/;"	l
SYSCALL	syscall\asm_freebsd_amd64.s	/^#define SYSCALL MOVQ R10, CX; INT $0x80$/;"	d
TEXT	syscall\asm_freebsd_amd64.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-88$/;"	l
TEXT	syscall\asm_freebsd_amd64.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-64$/;"	l
TEXT	syscall\asm_freebsd_amd64.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-88$/;"	l
TEXT	syscall\asm_freebsd_amd64.s	/^TEXT	·Syscall9(SB),NOSPLIT,$0-112$/;"	l
TEXT	syscall\asm_freebsd_amd64.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-64$/;"	l
ok	syscall\asm_freebsd_amd64.s	/^ok:$/;"	l
ok1	syscall\asm_freebsd_amd64.s	/^ok1:$/;"	l
ok2	syscall\asm_freebsd_amd64.s	/^ok2:$/;"	l
ok6	syscall\asm_freebsd_amd64.s	/^ok6:$/;"	l
ok9	syscall\asm_freebsd_amd64.s	/^ok9:$/;"	l
TEXT	syscall\asm_freebsd_arm.s	/^TEXT	·RawSyscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	syscall\asm_freebsd_arm.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	syscall\asm_freebsd_arm.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	syscall\asm_freebsd_arm.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	syscall\asm_freebsd_arm.s	/^TEXT	·Syscall9(SB),NOSPLIT,$0-52$/;"	l
error	syscall\asm_freebsd_arm.s	/^error:$/;"	l
error6	syscall\asm_freebsd_arm.s	/^error6:$/;"	l
error9	syscall\asm_freebsd_arm.s	/^error9:$/;"	l
errorr	syscall\asm_freebsd_arm.s	/^errorr:$/;"	l
errorr6	syscall\asm_freebsd_arm.s	/^errorr6:$/;"	l
SYS_SOCKETCALL	syscall\asm_linux_386.s	/^#define SYS_SOCKETCALL 102	\/* from zsysnum_linux_386.go *\/$/;"	d
SYS__LLSEEK	syscall\asm_linux_386.s	/^#define SYS__LLSEEK 140	\/* from zsysnum_linux_386.go *\/$/;"	d
TEXT	syscall\asm_linux_386.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-44$/;"	l
TEXT	syscall\asm_linux_386.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-32$/;"	l
TEXT	syscall\asm_linux_386.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-44$/;"	l
TEXT	syscall\asm_linux_386.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-32$/;"	l
TEXT	syscall\asm_linux_386.s	/^TEXT ·Seek(SB),NOSPLIT,$0-32$/;"	l
TEXT	syscall\asm_linux_386.s	/^TEXT ·rawsocketcall(SB),NOSPLIT,$0-40$/;"	l
TEXT	syscall\asm_linux_386.s	/^TEXT ·socketcall(SB),NOSPLIT,$0-40$/;"	l
ok	syscall\asm_linux_386.s	/^ok:$/;"	l
ok1	syscall\asm_linux_386.s	/^ok1:$/;"	l
ok2	syscall\asm_linux_386.s	/^ok2:$/;"	l
ok6	syscall\asm_linux_386.s	/^ok6:$/;"	l
okseek	syscall\asm_linux_386.s	/^okseek:$/;"	l
oksock	syscall\asm_linux_386.s	/^oksock:$/;"	l
oksock1	syscall\asm_linux_386.s	/^oksock1:$/;"	l
TEXT	syscall\asm_linux_amd64.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-64$/;"	l
TEXT	syscall\asm_linux_amd64.s	/^TEXT ·Gettimeofday(SB),NOSPLIT,$0-24$/;"	l
TEXT	syscall\asm_linux_amd64.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-64$/;"	l
TEXT	syscall\asm_linux_amd64.s	/^TEXT ·RawSyscall6(SB),NOSPLIT,$0-88$/;"	l
TEXT	syscall\asm_linux_amd64.s	/^TEXT ·Syscall6(SB),NOSPLIT,$0-88$/;"	l
TEXT	syscall\asm_linux_amd64.s	/^TEXT ·Time(SB),NOSPLIT,$0-32$/;"	l
ok	syscall\asm_linux_amd64.s	/^ok:$/;"	l
ok1	syscall\asm_linux_amd64.s	/^ok1:$/;"	l
ok2	syscall\asm_linux_amd64.s	/^ok2:$/;"	l
ok6	syscall\asm_linux_amd64.s	/^ok6:$/;"	l
ok7	syscall\asm_linux_amd64.s	/^ok7:$/;"	l
SYS__LLSEEK	syscall\asm_linux_arm.s	/^#define SYS__LLSEEK 140  \/* from zsysnum_linux_arm.go *\/$/;"	d
TEXT	syscall\asm_linux_arm.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	syscall\asm_linux_arm.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	syscall\asm_linux_arm.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	syscall\asm_linux_arm.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	syscall\asm_linux_arm.s	/^TEXT ·Seek(SB),NOSPLIT,$0-32$/;"	l
ok	syscall\asm_linux_arm.s	/^ok:$/;"	l
ok1	syscall\asm_linux_arm.s	/^ok1:$/;"	l
ok2	syscall\asm_linux_arm.s	/^ok2:$/;"	l
ok6	syscall\asm_linux_arm.s	/^ok6:$/;"	l
okseek	syscall\asm_linux_arm.s	/^okseek:$/;"	l
TEXT	syscall\asm_netbsd_386.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-44$/;"	l
TEXT	syscall\asm_netbsd_386.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-32$/;"	l
TEXT	syscall\asm_netbsd_386.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-44$/;"	l
TEXT	syscall\asm_netbsd_386.s	/^TEXT	·Syscall9(SB),NOSPLIT,$0-56$/;"	l
TEXT	syscall\asm_netbsd_386.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-32$/;"	l
ok	syscall\asm_netbsd_386.s	/^ok:$/;"	l
ok1	syscall\asm_netbsd_386.s	/^ok1:$/;"	l
ok2	syscall\asm_netbsd_386.s	/^ok2:$/;"	l
ok6	syscall\asm_netbsd_386.s	/^ok6:$/;"	l
ok9	syscall\asm_netbsd_386.s	/^ok9:$/;"	l
TEXT	syscall\asm_netbsd_amd64.s	/^TEXT	·RawSyscall(SB),NOSPLIT,$0-64$/;"	l
TEXT	syscall\asm_netbsd_amd64.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-88$/;"	l
TEXT	syscall\asm_netbsd_amd64.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-64$/;"	l
TEXT	syscall\asm_netbsd_amd64.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-88$/;"	l
TEXT	syscall\asm_netbsd_amd64.s	/^TEXT	·Syscall9(SB),NOSPLIT,$0-112$/;"	l
ok	syscall\asm_netbsd_amd64.s	/^ok:$/;"	l
ok1	syscall\asm_netbsd_amd64.s	/^ok1:$/;"	l
ok2	syscall\asm_netbsd_amd64.s	/^ok2:$/;"	l
ok6	syscall\asm_netbsd_amd64.s	/^ok6:$/;"	l
ok9	syscall\asm_netbsd_amd64.s	/^ok9:$/;"	l
TEXT	syscall\asm_netbsd_arm.s	/^TEXT	·RawSyscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	syscall\asm_netbsd_arm.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	syscall\asm_netbsd_arm.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-28$/;"	l
TEXT	syscall\asm_netbsd_arm.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-40$/;"	l
TEXT	syscall\asm_netbsd_arm.s	/^TEXT	·Syscall9(SB),NOSPLIT,$0-52$/;"	l
error	syscall\asm_netbsd_arm.s	/^error:$/;"	l
error6	syscall\asm_netbsd_arm.s	/^error6:$/;"	l
error9	syscall\asm_netbsd_arm.s	/^error9:$/;"	l
errorr	syscall\asm_netbsd_arm.s	/^errorr:$/;"	l
errorr6	syscall\asm_netbsd_arm.s	/^errorr6:$/;"	l
TEXT	syscall\asm_openbsd_386.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-44$/;"	l
TEXT	syscall\asm_openbsd_386.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-32$/;"	l
TEXT	syscall\asm_openbsd_386.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-44$/;"	l
TEXT	syscall\asm_openbsd_386.s	/^TEXT	·Syscall9(SB),NOSPLIT,$0-56$/;"	l
TEXT	syscall\asm_openbsd_386.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-32$/;"	l
ok	syscall\asm_openbsd_386.s	/^ok:$/;"	l
ok1	syscall\asm_openbsd_386.s	/^ok1:$/;"	l
ok2	syscall\asm_openbsd_386.s	/^ok2:$/;"	l
ok6	syscall\asm_openbsd_386.s	/^ok6:$/;"	l
ok9	syscall\asm_openbsd_386.s	/^ok9:$/;"	l
TEXT	syscall\asm_openbsd_amd64.s	/^TEXT	·RawSyscall(SB),NOSPLIT,$0-64$/;"	l
TEXT	syscall\asm_openbsd_amd64.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-88$/;"	l
TEXT	syscall\asm_openbsd_amd64.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-64$/;"	l
TEXT	syscall\asm_openbsd_amd64.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-88$/;"	l
TEXT	syscall\asm_openbsd_amd64.s	/^TEXT	·Syscall9(SB),NOSPLIT,$0-112$/;"	l
ok	syscall\asm_openbsd_amd64.s	/^ok:$/;"	l
ok1	syscall\asm_openbsd_amd64.s	/^ok1:$/;"	l
ok2	syscall\asm_openbsd_amd64.s	/^ok2:$/;"	l
ok6	syscall\asm_openbsd_amd64.s	/^ok6:$/;"	l
ok9	syscall\asm_openbsd_amd64.s	/^ok9:$/;"	l
SYS_SEEK	syscall\asm_plan9_386.s	/^#define SYS_SEEK 39	\/* from zsysnum_plan9_386.go *\/$/;"	d
TEXT	syscall\asm_plan9_386.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-44$/;"	l
TEXT	syscall\asm_plan9_386.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-32$/;"	l
TEXT	syscall\asm_plan9_386.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-44$/;"	l
TEXT	syscall\asm_plan9_386.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-32$/;"	l
TEXT	syscall\asm_plan9_386.s	/^TEXT ·exit(SB),NOSPLIT,$4-4$/;"	l
TEXT	syscall\asm_plan9_386.s	/^TEXT ·seek(SB),NOSPLIT,$0-40$/;"	l
copyresult3	syscall\asm_plan9_386.s	/^copyresult3:$/;"	l
copyresult4	syscall\asm_plan9_386.s	/^copyresult4:$/;"	l
copyresult6	syscall\asm_plan9_386.s	/^copyresult6:$/;"	l
ok3	syscall\asm_plan9_386.s	/^ok3:$/;"	l
ok4	syscall\asm_plan9_386.s	/^ok4:$/;"	l
ok6	syscall\asm_plan9_386.s	/^ok6:$/;"	l
SYS_SEEK	syscall\asm_plan9_amd64.s	/^#define SYS_SEEK 39	\/* from zsysnum_plan9_amd64.go *\/$/;"	d
TEXT	syscall\asm_plan9_amd64.s	/^TEXT	·RawSyscall6(SB),NOSPLIT,$0-88$/;"	l
TEXT	syscall\asm_plan9_amd64.s	/^TEXT	·Syscall(SB),NOSPLIT,$0-64$/;"	l
TEXT	syscall\asm_plan9_amd64.s	/^TEXT	·Syscall6(SB),NOSPLIT,$0-88$/;"	l
TEXT	syscall\asm_plan9_amd64.s	/^TEXT ·RawSyscall(SB),NOSPLIT,$0-64$/;"	l
TEXT	syscall\asm_plan9_amd64.s	/^TEXT ·exit(SB),NOSPLIT,$8-4$/;"	l
TEXT	syscall\asm_plan9_amd64.s	/^TEXT ·seek(SB),NOSPLIT,$0-64$/;"	l
copyresult3	syscall\asm_plan9_amd64.s	/^copyresult3:$/;"	l
copyresult4	syscall\asm_plan9_amd64.s	/^copyresult4:$/;"	l
copyresult6	syscall\asm_plan9_amd64.s	/^copyresult6:$/;"	l
ok3	syscall\asm_plan9_amd64.s	/^ok3:$/;"	l
ok4	syscall\asm_plan9_amd64.s	/^ok4:$/;"	l
ok6	syscall\asm_plan9_amd64.s	/^ok6:$/;"	l
parseparam	syscall\mksyscall.pl	/^sub parseparam($) {$/;"	s
parseparamlist	syscall\mksyscall.pl	/^sub parseparamlist($) {$/;"	s
syscall	syscall\mksyscall.pl	/^package syscall$/;"	p
parseparam	syscall\mksyscall_windows.pl	/^sub parseparam($) {$/;"	s
parseparamlist	syscall\mksyscall_windows.pl	/^sub parseparamlist($) {$/;"	s
build_sysctl	syscall\mksysctl_openbsd.pl	/^sub build_sysctl() {$/;"	s
debug	syscall\mksysctl_openbsd.pl	/^sub debug() {$/;"	s
syscall	syscall\mksysctl_openbsd.pl	/^package syscall;$/;"	p
syscall	syscall\mksysnum_darwin.pl	/^package syscall$/;"	p
syscall	syscall\mksysnum_dragonfly.pl	/^package syscall$/;"	p
syscall	syscall\mksysnum_freebsd.pl	/^package syscall$/;"	p
fmt	syscall\mksysnum_linux.pl	/^sub fmt {$/;"	s
syscall	syscall\mksysnum_linux.pl	/^package syscall$/;"	p
syscall	syscall\mksysnum_netbsd.pl	/^package syscall$/;"	p
syscall	syscall\mksysnum_openbsd.pl	/^package syscall$/;"	p
$DMAPPEND	syscall\types_plan9.c	/^	$DMAPPEND	= 0x40000000,	\/\/ mode bit for append only files$/;"	e	enum:__anon135	file:
$DMAUTH	syscall\types_plan9.c	/^	$DMAUTH		= 0x08000000,	\/\/ mode bit for authentication file$/;"	e	enum:__anon135	file:
$DMDIR	syscall\types_plan9.c	/^	$DMDIR		= 0x80000000,	\/\/ mode bit for directories$/;"	e	enum:__anon135	file:
$DMEXCL	syscall\types_plan9.c	/^	$DMEXCL		= 0x20000000,	\/\/ mode bit for exclusive use files$/;"	e	enum:__anon135	file:
$DMEXEC	syscall\types_plan9.c	/^	$DMEXEC		= 0x1,		\/\/ mode bit for execute permission$/;"	e	enum:__anon135	file:
$DMMOUNT	syscall\types_plan9.c	/^	$DMMOUNT	= 0x10000000,	\/\/ mode bit for mounted channel$/;"	e	enum:__anon135	file:
$DMREAD	syscall\types_plan9.c	/^	$DMREAD		= 0x4,		\/\/ mode bit for read permission$/;"	e	enum:__anon135	file:
$DMTMP	syscall\types_plan9.c	/^	$DMTMP		= 0x04000000,	\/\/ mode bit for non-backed-up files$/;"	e	enum:__anon135	file:
$DMWRITE	syscall\types_plan9.c	/^	$DMWRITE	= 0x2,		\/\/ mode bit for write permission$/;"	e	enum:__anon135	file:
$ERRMAX	syscall\types_plan9.c	/^	$ERRMAX		= 128,$/;"	e	enum:__anon135	file:
$MAFTER	syscall\types_plan9.c	/^	$MAFTER		= 0x0002,	\/\/ mount goes after others in union directory$/;"	e	enum:__anon135	file:
$MBEFORE	syscall\types_plan9.c	/^	$MBEFORE	= 0x0001,	\/\/ mount goes before others in union directory$/;"	e	enum:__anon135	file:
$MCACHE	syscall\types_plan9.c	/^	$MCACHE		= 0x0010,	\/\/ cache some data$/;"	e	enum:__anon135	file:
$MCREATE	syscall\types_plan9.c	/^	$MCREATE	= 0x0004,	\/\/ permit creation in mounted directory$/;"	e	enum:__anon135	file:
$MMASK	syscall\types_plan9.c	/^	$MMASK		= 0x0017,	\/\/ all bits on$/;"	e	enum:__anon135	file:
$MORDER	syscall\types_plan9.c	/^	$MORDER		= 0x0003,	\/\/ mask for bits defining order of mounting$/;"	e	enum:__anon135	file:
$MREPL	syscall\types_plan9.c	/^	$MREPL		= 0x0000,	\/\/ mount replaces object$/;"	e	enum:__anon135	file:
$O_CLOEXEC	syscall\types_plan9.c	/^	$O_CLOEXEC	= OCEXEC,$/;"	e	enum:__anon135	file:
$O_EXCL	syscall\types_plan9.c	/^	$O_EXCL		= OEXCL,$/;"	e	enum:__anon135	file:
$O_RDONLY	syscall\types_plan9.c	/^	$O_RDONLY	= OREAD,$/;"	e	enum:__anon135	file:
$O_RDWR	syscall\types_plan9.c	/^	$O_RDWR		= ORDWR,$/;"	e	enum:__anon135	file:
$O_TRUNC	syscall\types_plan9.c	/^	$O_TRUNC	= OTRUNC,$/;"	e	enum:__anon135	file:
$O_WRONLY	syscall\types_plan9.c	/^	$O_WRONLY	= OWRITE,$/;"	e	enum:__anon135	file:
$Prof	syscall\types_plan9.c	/^typedef struct Prof $Prof;$/;"	t	typeref:struct:Prof	file:
$QTAPPEND	syscall\types_plan9.c	/^	$QTAPPEND	= 0x40,		\/\/ type bit for append only files$/;"	e	enum:__anon135	file:
$QTAUTH	syscall\types_plan9.c	/^	$QTAUTH		= 0x08,		\/\/ type bit for authentication file$/;"	e	enum:__anon135	file:
$QTDIR	syscall\types_plan9.c	/^	$QTDIR		= 0x80,		\/\/ type bit for directories$/;"	e	enum:__anon135	file:
$QTEXCL	syscall\types_plan9.c	/^	$QTEXCL		= 0x20,		\/\/ type bit for exclusive use files$/;"	e	enum:__anon135	file:
$QTFILE	syscall\types_plan9.c	/^	$QTFILE		= 0x00,		\/\/ plain file$/;"	e	enum:__anon135	file:
$QTMOUNT	syscall\types_plan9.c	/^	$QTMOUNT	= 0x10,		\/\/ type bit for mounted channel$/;"	e	enum:__anon135	file:
$QTTMP	syscall\types_plan9.c	/^	$QTTMP		= 0x04,		\/\/ type bit for not-backed-up file$/;"	e	enum:__anon135	file:
$RFCENVG	syscall\types_plan9.c	/^	$RFCENVG	= (1<<11),$/;"	e	enum:__anon135	file:
$RFCFDG	syscall\types_plan9.c	/^	$RFCFDG		= (1<<12),$/;"	e	enum:__anon135	file:
$RFCNAMEG	syscall\types_plan9.c	/^	$RFCNAMEG	= (1<<10),$/;"	e	enum:__anon135	file:
$RFENVG	syscall\types_plan9.c	/^	$RFENVG		= (1<<1),$/;"	e	enum:__anon135	file:
$RFFDG	syscall\types_plan9.c	/^	$RFFDG		= (1<<2),$/;"	e	enum:__anon135	file:
$RFMEM	syscall\types_plan9.c	/^	$RFMEM		= (1<<5),$/;"	e	enum:__anon135	file:
$RFNAMEG	syscall\types_plan9.c	/^	$RFNAMEG	= (1<<0),$/;"	e	enum:__anon135	file:
$RFNOMNT	syscall\types_plan9.c	/^	$RFNOMNT	= (1<<14),$/;"	e	enum:__anon135	file:
$RFNOTEG	syscall\types_plan9.c	/^	$RFNOTEG	= (1<<3),$/;"	e	enum:__anon135	file:
$RFNOWAIT	syscall\types_plan9.c	/^	$RFNOWAIT	= (1<<6),$/;"	e	enum:__anon135	file:
$RFPROC	syscall\types_plan9.c	/^	$RFPROC		= (1<<4),$/;"	e	enum:__anon135	file:
$RFREND	syscall\types_plan9.c	/^	$RFREND		= (1<<13),$/;"	e	enum:__anon135	file:
$STATFIXLEN	syscall\types_plan9.c	/^	$STATFIXLEN = BIT16SZ+QIDSZ+5*BIT16SZ+4*BIT32SZ+1*BIT64SZ,	\/\/ amount of fixed length data in a stat buffer$/;"	e	enum:__anon135	file:
$STATMAX	syscall\types_plan9.c	/^	$STATMAX	= 65535U,$/;"	e	enum:__anon135	file:
$Tos	syscall\types_plan9.c	/^typedef struct Tos $Tos;$/;"	t	typeref:struct:Tos	file:
$_C_int	syscall\types_plan9.c	/^typedef int $_C_int;$/;"	t	file:
BIT16SZ	syscall\types_plan9.c	/^	BIT16SZ	= 2,$/;"	e	enum:__anon135	file:
BIT32SZ	syscall\types_plan9.c	/^	BIT32SZ	= 4,$/;"	e	enum:__anon135	file:
BIT64SZ	syscall\types_plan9.c	/^	BIT64SZ	= 8,$/;"	e	enum:__anon135	file:
BIT8SZ	syscall\types_plan9.c	/^	BIT8SZ	= 1,$/;"	e	enum:__anon135	file:
OCEXEC	syscall\types_plan9.c	/^	OCEXEC	= 32,	\/\/ or'ed in, close on exec$/;"	e	enum:__anon135	file:
OEXCL	syscall\types_plan9.c	/^	OEXCL	= 0x1000,	\/\/ or'ed in, exclusive use (create only)$/;"	e	enum:__anon135	file:
OEXEC	syscall\types_plan9.c	/^	OEXEC	= 3,	\/\/ execute, == read but check execute permission$/;"	e	enum:__anon135	file:
ORCLOSE	syscall\types_plan9.c	/^	ORCLOSE	= 64,		\/\/ or'ed in, remove on close$/;"	e	enum:__anon135	file:
ORDWR	syscall\types_plan9.c	/^	ORDWR	= 2,	\/\/ read and write$/;"	e	enum:__anon135	file:
OREAD	syscall\types_plan9.c	/^	OREAD	= 0,	\/\/ open for read$/;"	e	enum:__anon135	file:
OTRUNC	syscall\types_plan9.c	/^	OTRUNC	= 16,	\/\/ or'ed in (except for exec), truncate file first$/;"	e	enum:__anon135	file:
OWRITE	syscall\types_plan9.c	/^	OWRITE	= 1,	\/\/ write$/;"	e	enum:__anon135	file:
Prof	syscall\types_plan9.c	/^struct Prof			\/\/ Per process profiling$/;"	s	file:
QIDSZ	syscall\types_plan9.c	/^	QIDSZ = BIT8SZ+BIT32SZ+BIT64SZ,$/;"	e	enum:__anon135	file:
Tos	syscall\types_plan9.c	/^struct Tos {$/;"	s	file:
clock	syscall\types_plan9.c	/^	ulong		clock;$/;"	m	struct:Tos	file:
cyclefreq	syscall\types_plan9.c	/^	uvlong		cyclefreq;	\/\/ cycle clock frequency if there is one, 0 otherwise$/;"	m	struct:Tos	file:
first	syscall\types_plan9.c	/^	struct Plink	*first;$/;"	m	struct:Prof	typeref:struct:Prof::Plink	file:
kcycles	syscall\types_plan9.c	/^	vlong		kcycles;	\/\/ cycles spent in kernel$/;"	m	struct:Tos	file:
last	syscall\types_plan9.c	/^	struct Plink	*last;$/;"	m	struct:Prof	typeref:struct:Prof::Plink	file:
next	syscall\types_plan9.c	/^	struct Plink	*next;	\/\/ known to be 4(ptr)$/;"	m	struct:Prof	typeref:struct:Prof::Plink	file:
pcycles	syscall\types_plan9.c	/^	vlong		pcycles;	\/\/ cycles spent in process (kernel + user)$/;"	m	struct:Tos	file:
pid	syscall\types_plan9.c	/^	ulong		pid;		\/\/ might as well put the pid here$/;"	m	struct:Tos	file:
pid	syscall\types_plan9.c	/^	ulong		pid;$/;"	m	struct:Prof	file:
pp	syscall\types_plan9.c	/^	struct Plink	*pp;	\/\/ known to be 0(ptr)$/;"	m	struct:Prof	typeref:struct:Prof::Plink	file:
prof	syscall\types_plan9.c	/^	struct Prof	prof;$/;"	m	struct:Tos	typeref:struct:Tos::Prof	file:
uchar	syscall\types_plan9.c	/^typedef unsigned char uchar;$/;"	t	file:
uint	syscall\types_plan9.c	/^typedef unsigned int uint;$/;"	t	file:
ulong	syscall\types_plan9.c	/^typedef unsigned long ulong;$/;"	t	file:
ushort	syscall\types_plan9.c	/^typedef unsigned short ushort;$/;"	t	file:
uvlong	syscall\types_plan9.c	/^typedef unsigned long long uvlong;$/;"	t	file:
vlong	syscall\types_plan9.c	/^typedef long long vlong;$/;"	t	file:
what	syscall\types_plan9.c	/^	ulong		what;$/;"	m	struct:Prof	file:
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.8	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
